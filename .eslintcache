[{"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\sentry.ts":"1","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\app_constants.ts":"2","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\data\\firebase.ts":"3","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\TopErrorBoundary.tsx":"4","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\restore.ts":"5","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Dialog.tsx":"6","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\index.ts":"7","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Modal.tsx":"8","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\groups.ts":"9","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\Scene.ts":"10","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\LayerUI.tsx":"11","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\resizeTest.ts":"12","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\index.ts":"13","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Popover.tsx":"14","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ExportDialog.tsx":"15","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\gadirections.ts":"16","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\scrollbars.ts":"17","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionFinalize.tsx":"18","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionDistribute.tsx":"19","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\align.ts":"20","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ButtonIconSelect.tsx":"21","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\utils.ts":"22","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\typeChecks.ts":"23","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\linearElementEditor.ts":"24","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\register.ts":"25","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\LoadingMessage.tsx":"26","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\shapes.tsx":"27","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\textElement.ts":"28","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\collision.ts":"29","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Stack.tsx":"30","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\LibraryUnit.tsx":"31","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Actions.tsx":"32","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionDeleteSelected.tsx":"33","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionExport.tsx":"34","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\renderer\\roundRect.ts":"35","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ProjectName.tsx":"36","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionAlign.tsx":"37","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\MobileMenu.tsx":"38","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\App.tsx":"39","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\appState.ts":"40","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\constants.ts":"41","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\i18n.ts":"42","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\collab\\CollabWrapper.tsx":"43","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\collab\\Portal.tsx":"44","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\is-mobile.tsx":"45","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\json.ts":"46","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Island.tsx":"47","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\binding.ts":"48","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Toast.tsx":"49","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\showSelectedShapeActions.ts":"50","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\textWysiwyg.tsx":"51","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\renderer\\index.ts":"52","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Tooltip.tsx":"53","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\UploadIcon.tsx":"54","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\LockIcon.tsx":"55","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\renderer\\renderScene.ts":"56","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\encode.ts":"57","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\clients.ts":"58","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\HelpIcon.tsx":"59","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Avatar.tsx":"60","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\serviceWorker.tsx":"61","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ErrorDialog.tsx":"62","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\colors.ts":"63","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\data\\index.ts":"64","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\clipboard.ts":"65","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\renderer\\renderElement.ts":"66","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ContextMenu.tsx":"67","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\dragElements.ts":"68","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\export.ts":"69","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\index.ts":"70","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\HelpDialog.tsx":"71","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\GitHubCorner.tsx":"72","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\BackgroundPickerAndDarkModeToggle.tsx":"73","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\scroll.ts":"74","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\selection.ts":"75","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\data\\localStorage.ts":"76","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\collab\\RoomDialog.tsx":"77","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\library.ts":"78","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\math.ts":"79","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\zoom.ts":"80","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\transformHandles.ts":"81","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\index.ts":"82","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\PasteChartDialog.tsx":"83","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\ga.ts":"84","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionGroup.tsx":"85","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ColorPicker.tsx":"86","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\index.tsx":"87","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\blob.ts":"88","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\points.ts":"89","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\CollabButton.tsx":"90","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\comparisons.ts":"91","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\IconPicker.tsx":"92","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\packages\\excalidraw\\index.tsx":"93","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionHistory.tsx":"94","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\history.ts":"95","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\sizeHelpers.ts":"96","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\newElement.ts":"97","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\FixedSideContainer.tsx":"98","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\galines.ts":"99","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionCanvas.tsx":"100","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ButtonSelect.tsx":"101","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionProperties.tsx":"102","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\analytics.ts":"103","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\InitializeApp.tsx":"104","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\random.ts":"105","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\mutateElement.ts":"106","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\manager.tsx":"107","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\bounds.ts":"108","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\DarkModeToggle.tsx":"109","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\keys.ts":"110","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\gesture.ts":"111","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\image.ts":"112","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\gapoints.ts":"113","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionAddToLibrary.ts":"114","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\constants\\urls.ts":"115","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\errors.ts":"116","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Stats.tsx":"117","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Section.tsx":"118","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionStyles.ts":"119","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\bug-issue-template.js":"120","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ToolButton.tsx":"121","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionMenu.tsx":"122"},{"size":1195,"mtime":1617702002074,"results":"123","hashOfConfig":"124"},{"size":355,"mtime":1617702002069,"results":"125","hashOfConfig":"124"},{"size":4533,"mtime":1617702002072,"results":"126","hashOfConfig":"124"},{"size":4076,"mtime":1617702002053,"results":"127","hashOfConfig":"124"},{"size":6251,"mtime":1617888362631,"results":"128","hashOfConfig":"124"},{"size":2949,"mtime":1617702002038,"results":"129","hashOfConfig":"124"},{"size":3071,"mtime":1617815128787,"results":"130","hashOfConfig":"124"},{"size":1678,"mtime":1617702002047,"results":"131","hashOfConfig":"124"},{"size":4745,"mtime":1617702002077,"results":"132","hashOfConfig":"124"},{"size":3939,"mtime":1617702002107,"results":"133","hashOfConfig":"124"},{"size":19831,"mtime":1617764365619,"results":"134","hashOfConfig":"124"},{"size":4319,"mtime":1617702002066,"results":"135","hashOfConfig":"124"},{"size":2947,"mtime":1617702002059,"results":"136","hashOfConfig":"124"},{"size":1582,"mtime":1617702002048,"results":"137","hashOfConfig":"124"},{"size":8267,"mtime":1617702002039,"results":"138","hashOfConfig":"124"},{"size":631,"mtime":1617702002075,"results":"139","hashOfConfig":"124"},{"size":4268,"mtime":1617702002109,"results":"140","hashOfConfig":"124"},{"size":5316,"mtime":1617702002023,"results":"141","hashOfConfig":"124"},{"size":3025,"mtime":1617702002022,"results":"142","hashOfConfig":"124"},{"size":2524,"mtime":1617702002028,"results":"143","hashOfConfig":"124"},{"size":815,"mtime":1617702002034,"results":"144","hashOfConfig":"124"},{"size":10256,"mtime":1617702002127,"results":"145","hashOfConfig":"124"},{"size":1936,"mtime":1617815062891,"results":"146","hashOfConfig":"124"},{"size":16185,"mtime":1617702002064,"results":"147","hashOfConfig":"124"},{"size":190,"mtime":1617702002027,"results":"148","hashOfConfig":"124"},{"size":253,"mtime":1617702002045,"results":"149","hashOfConfig":"124"},{"size":3340,"mtime":1617702002111,"results":"150","hashOfConfig":"124"},{"size":420,"mtime":1617702002067,"results":"151","hashOfConfig":"124"},{"size":24036,"mtime":1617815141837,"results":"152","hashOfConfig":"124"},{"size":1043,"mtime":1617702002050,"results":"153","hashOfConfig":"124"},{"size":2810,"mtime":1617702002045,"results":"154","hashOfConfig":"124"},{"size":7160,"mtime":1617702002031,"results":"155","hashOfConfig":"124"},{"size":4399,"mtime":1617702002022,"results":"156","hashOfConfig":"124"},{"size":5435,"mtime":1617702002023,"results":"157","hashOfConfig":"124"},{"size":1125,"mtime":1617702002107,"results":"158","hashOfConfig":"124"},{"size":1521,"mtime":1617702002049,"results":"159","hashOfConfig":"124"},{"size":6375,"mtime":1617702002021,"results":"160","hashOfConfig":"124"},{"size":6046,"mtime":1617890706841,"results":"161","hashOfConfig":"124"},{"size":121696,"mtime":1617889043120,"results":"162","hashOfConfig":"124"},{"size":7128,"mtime":1617887427079,"results":"163","hashOfConfig":"124"},{"size":2299,"mtime":1617702002055,"results":"164","hashOfConfig":"124"},{"size":3461,"mtime":1617702002077,"results":"165","hashOfConfig":"124"},{"size":14564,"mtime":1617702002070,"results":"166","hashOfConfig":"124"},{"size":6711,"mtime":1617702002070,"results":"167","hashOfConfig":"124"},{"size":1031,"mtime":1617702002078,"results":"168","hashOfConfig":"124"},{"size":2399,"mtime":1617702002059,"results":"169","hashOfConfig":"124"},{"size":485,"mtime":1617702002044,"results":"170","hashOfConfig":"124"},{"size":21495,"mtime":1617702002061,"results":"171","hashOfConfig":"124"},{"size":775,"mtime":1617702002051,"results":"172","hashOfConfig":"124"},{"size":409,"mtime":1617702002066,"results":"173","hashOfConfig":"124"},{"size":6123,"mtime":1617702002067,"results":"174","hashOfConfig":"124"},{"size":45,"mtime":1617702002105,"results":"175","hashOfConfig":"124"},{"size":585,"mtime":1617702002053,"results":"176","hashOfConfig":"124"},{"size":1194,"mtime":1617585358914,"results":"177","hashOfConfig":"124"},{"size":1921,"mtime":1617702002046,"results":"178","hashOfConfig":"124"},{"size":23127,"mtime":1617755160521,"results":"179","hashOfConfig":"124"},{"size":3428,"mtime":1617702002058,"results":"180","hashOfConfig":"124"},{"size":844,"mtime":1617702002030,"results":"181","hashOfConfig":"124"},{"size":364,"mtime":1617702002041,"results":"182","hashOfConfig":"124"},{"size":430,"mtime":1617702002033,"results":"183","hashOfConfig":"124"},{"size":5294,"mtime":1617702002111,"results":"184","hashOfConfig":"124"},{"size":803,"mtime":1617702002038,"results":"185","hashOfConfig":"124"},{"size":528,"mtime":1617702002031,"results":"186","hashOfConfig":"124"},{"size":7689,"mtime":1617702002072,"results":"187","hashOfConfig":"124"},{"size":6211,"mtime":1617702002031,"results":"188","hashOfConfig":"124"},{"size":20598,"mtime":1617815039100,"results":"189","hashOfConfig":"124"},{"size":2773,"mtime":1617702002037,"results":"190","hashOfConfig":"124"},{"size":2576,"mtime":1617702002063,"results":"191","hashOfConfig":"124"},{"size":5971,"mtime":1617702002108,"results":"192","hashOfConfig":"124"},{"size":1588,"mtime":1617702002026,"results":"193","hashOfConfig":"124"},{"size":10530,"mtime":1617702002041,"results":"194","hashOfConfig":"124"},{"size":231,"mtime":1617702002040,"results":"195","hashOfConfig":"124"},{"size":715,"mtime":1617702002033,"results":"196","hashOfConfig":"124"},{"size":2312,"mtime":1617702002109,"results":"197","hashOfConfig":"124"},{"size":1985,"mtime":1617702002110,"results":"198","hashOfConfig":"124"},{"size":3594,"mtime":1617702002073,"results":"199","hashOfConfig":"124"},{"size":4090,"mtime":1617702002071,"results":"200","hashOfConfig":"124"},{"size":3272,"mtime":1617702002059,"results":"201","hashOfConfig":"124"},{"size":7119,"mtime":1617702002095,"results":"202","hashOfConfig":"124"},{"size":961,"mtime":1617702002110,"results":"203","hashOfConfig":"124"},{"size":6388,"mtime":1617702002068,"results":"204","hashOfConfig":"124"},{"size":540,"mtime":1617702002108,"results":"205","hashOfConfig":"124"},{"size":3060,"mtime":1617702002048,"results":"206","hashOfConfig":"124"},{"size":7611,"mtime":1617702002074,"results":"207","hashOfConfig":"124"},{"size":6305,"mtime":1617702002023,"results":"208","hashOfConfig":"124"},{"size":8197,"mtime":1617702002036,"results":"209","hashOfConfig":"124"},{"size":10753,"mtime":1617702002073,"results":"210","hashOfConfig":"124"},{"size":4078,"mtime":1617702002057,"results":"211","hashOfConfig":"124"},{"size":1612,"mtime":1617702002104,"results":"212","hashOfConfig":"124"},{"size":927,"mtime":1617702002035,"results":"213","hashOfConfig":"124"},{"size":2380,"mtime":1617702002108,"results":"214","hashOfConfig":"124"},{"size":5463,"mtime":1617702002043,"results":"215","hashOfConfig":"124"},{"size":2808,"mtime":1617702002097,"results":"216","hashOfConfig":"124"},{"size":2822,"mtime":1617702002024,"results":"217","hashOfConfig":"124"},{"size":7616,"mtime":1617702002077,"results":"218","hashOfConfig":"124"},{"size":2844,"mtime":1617702002067,"results":"219","hashOfConfig":"124"},{"size":8230,"mtime":1617815118971,"results":"220","hashOfConfig":"124"},{"size":467,"mtime":1617702002040,"results":"221","hashOfConfig":"124"},{"size":1802,"mtime":1617702002075,"results":"222","hashOfConfig":"124"},{"size":8108,"mtime":1617702002021,"results":"223","hashOfConfig":"124"},{"size":657,"mtime":1617702002034,"results":"224","hashOfConfig":"124"},{"size":21773,"mtime":1617702002025,"results":"225","hashOfConfig":"124"},{"size":691,"mtime":1617702002029,"results":"226","hashOfConfig":"124"},{"size":746,"mtime":1617702002043,"results":"227","hashOfConfig":"124"},{"size":399,"mtime":1617702002105,"results":"228","hashOfConfig":"124"},{"size":2839,"mtime":1617702002064,"results":"229","hashOfConfig":"124"},{"size":4161,"mtime":1617702002027,"results":"230","hashOfConfig":"124"},{"size":13206,"mtime":1617702002062,"results":"231","hashOfConfig":"124"},{"size":2343,"mtime":1617702002037,"results":"232","hashOfConfig":"124"},{"size":1436,"mtime":1617702002079,"results":"233","hashOfConfig":"124"},{"size":620,"mtime":1617702002076,"results":"234","hashOfConfig":"124"},{"size":3944,"mtime":1617702002058,"results":"235","hashOfConfig":"124"},{"size":949,"mtime":1617702002075,"results":"236","hashOfConfig":"124"},{"size":682,"mtime":1617702002020,"results":"237","hashOfConfig":"124"},{"size":132,"mtime":1617737968329,"results":"238","hashOfConfig":"124"},{"size":297,"mtime":1617702002069,"results":"239","hashOfConfig":"124"},{"size":4990,"mtime":1617702002050,"results":"240","hashOfConfig":"124"},{"size":670,"mtime":1617702002049,"results":"241","hashOfConfig":"124"},{"size":2481,"mtime":1617702002026,"results":"242","hashOfConfig":"124"},{"size":136,"mtime":1617702002030,"results":"243","hashOfConfig":"124"},{"size":2803,"mtime":1617702002052,"results":"244","hashOfConfig":"124"},{"size":2286,"mtime":1617702002024,"results":"245","hashOfConfig":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},"1y0zsxj",{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":37,"source":"273","usedDeprecatedRules":"254"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"319"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":88,"fixableErrorCount":0,"fixableWarningCount":84,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"337","usedDeprecatedRules":"280"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"356"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":7,"source":"367","usedDeprecatedRules":"251"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"356"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"392","usedDeprecatedRules":"280"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"403","usedDeprecatedRules":"254"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"406","usedDeprecatedRules":"310"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"356"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"463","usedDeprecatedRules":"319"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\sentry.ts",[],["508","509"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\app_constants.ts",[],["510","511"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\data\\firebase.ts",[],["512","513"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\TopErrorBoundary.tsx",[],["514","515"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\restore.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Dialog.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\index.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Modal.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\groups.ts",[],["516","517"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\Scene.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\LayerUI.tsx",["518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556"],"import clsx from \"clsx\";\nimport React, {\n  BaseSyntheticEvent,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { CLASSES } from \"../constants\";\nimport { exportCanvas } from \"../data\";\nimport { importLibraryFromJSON, saveLibraryAsJSON } from \"../data/json\";\nimport { Library } from \"../data/library\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { Language, t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { calculateScrollCenter, getSelectedElements } from \"../scene\";\nimport { ExportType } from \"../scene/types\";\nimport { AppState, LibraryItem, LibraryItems } from \"../types\";\nimport { muteFSAbortError } from \"../utils\";\nimport { SelectedShapeActions, ShapesSwitcher, ZoomActions } from \"./Actions\";\nimport { BackgroundPickerAndDarkModeToggle } from \"./BackgroundPickerAndDarkModeToggle\";\nimport CollabButton from \"./CollabButton\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ExportCB, ExportDialog } from \"./ExportDialog\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { GitHubCorner } from \"./GitHubCorner\";\nimport { HintViewer } from \"./HintViewer\";\nimport { exportFile, load, logout, mute, shield } from \"./icons\";\nimport { Island } from \"./Island\";\nimport \"./LayerUI.scss\";\nimport { LibraryUnit } from \"./LibraryUnit\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { LockIcon } from \"./LockIcon\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { PasteChartDialog } from \"./PasteChartDialog\";\nimport {UploadIcon} from \"./UploadIcon\";\nimport { Section } from \"./Section\";\nimport { HelpDialog } from \"./HelpDialog\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nimport { Tooltip } from \"./Tooltip\";\nimport { UserList } from \"./UserList\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  canvas: HTMLCanvasElement | null;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  onCollabButtonClick?: () => void;\n  onLockToggle: () => void;\n  onInsertElements: (elements: readonly NonDeletedExcalidrawElement[]) => void;\n  onDocUploadClick:(e:BaseSyntheticEvent)=> void;\n  zenModeEnabled: boolean;\n  toggleZenMode: () => void;\n  langCode: Language[\"code\"];\n  isCollaborating: boolean;\n  onExportToBackend?: (\n    exportedElements: readonly NonDeletedExcalidrawElement[],\n    appState: AppState,\n    canvas: HTMLCanvasElement | null,\n  ) => void;\n  renderCustomFooter?: (isMobile: boolean) => JSX.Element;\n}\n\nconst useOnClickOutside = (\n  ref: RefObject<HTMLElement>,\n  cb: (event: MouseEvent) => void,\n) => {\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (!ref.current) {\n        return;\n      }\n\n      if (\n        event.target instanceof Element &&\n        (ref.current.contains(event.target) ||\n          !document.body.contains(event.target))\n      ) {\n        return;\n      }\n\n      cb(event);\n    };\n    document.addEventListener(\"pointerdown\", listener, false);\n\n    return () => {\n      document.removeEventListener(\"pointerdown\", listener);\n    };\n  }, [ref, cb]);\n};\n\nconst LibraryMenuItems = ({\n  library,\n  onRemoveFromLibrary,\n  onAddToLibrary,\n  onInsertShape,\n  pendingElements,\n  setAppState,\n}: {\n  library: LibraryItems;\n  pendingElements: LibraryItem;\n  onRemoveFromLibrary: (index: number) => void;\n  onInsertShape: (elements: LibraryItem) => void;\n  onAddToLibrary: (elements: LibraryItem) => void;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n}) => {\n  const isMobile = useIsMobile();\n  const numCells = library.length + (pendingElements.length > 0 ? 1 : 0);\n  const CELLS_PER_ROW = isMobile ? 4 : 6;\n  const numRows = Math.max(1, Math.ceil(numCells / CELLS_PER_ROW));\n  const rows = [];\n  let addedPendingElements = false;\n\n  rows.push(\n    <div className=\"layer-ui__library-header\">\n      <ToolButton\n        key=\"import\"\n        type=\"button\"\n        title={t(\"buttons.load\")}\n        aria-label={t(\"buttons.load\")}\n        icon={load}\n        onClick={() => {\n          importLibraryFromJSON()\n            .then(() => {\n              // Maybe we should close and open the menu so that the items get updated.\n              // But for now we just close the menu.\n              setAppState({ isLibraryOpen: false });\n            })\n            .catch(muteFSAbortError)\n            .catch((error) => {\n              setAppState({ errorMessage: error.message });\n            });\n        }}\n      />\n      <ToolButton\n        key=\"export\"\n        type=\"button\"\n        title={t(\"buttons.export\")}\n        aria-label={t(\"buttons.export\")}\n        icon={exportFile}\n        onClick={() => {\n          saveLibraryAsJSON()\n            .catch(muteFSAbortError)\n            .catch((error) => {\n              setAppState({ errorMessage: error.message });\n            });\n        }}\n      />\n\n      <a href=\"https://libraries.excalidraw.com\" target=\"_excalidraw_libraries\">\n        {t(\"labels.libraries\")}\n      </a>\n    </div>,\n  );\n\n  for (let row = 0; row < numRows; row++) {\n    const y = CELLS_PER_ROW * row;\n    const children = [];\n    for (let x = 0; x < CELLS_PER_ROW; x++) {\n      const shouldAddPendingElements: boolean =\n        pendingElements.length > 0 &&\n        !addedPendingElements &&\n        y + x >= library.length;\n      addedPendingElements = addedPendingElements || shouldAddPendingElements;\n\n      children.push(\n        <Stack.Col key={x}>\n          <LibraryUnit\n            elements={library[y + x]}\n            pendingElements={\n              shouldAddPendingElements ? pendingElements : undefined\n            }\n            onRemoveFromLibrary={onRemoveFromLibrary.bind(null, y + x)}\n            onClick={\n              shouldAddPendingElements\n                ? onAddToLibrary.bind(null, pendingElements)\n                : onInsertShape.bind(null, library[y + x])\n            }\n          />\n        </Stack.Col>,\n      );\n    }\n    rows.push(\n      <Stack.Row align=\"center\" gap={1} key={row}>\n        {children}\n      </Stack.Row>,\n    );\n  }\n\n  return (\n    <Stack.Col align=\"start\" gap={1} className=\"layer-ui__library-items\">\n      {rows}\n    </Stack.Col>\n  );\n};\n\nconst LibraryMenu = ({\n  onClickOutside,\n  onInsertShape,\n  pendingElements,\n  onAddToLibrary,\n  setAppState,\n}: {\n  pendingElements: LibraryItem;\n  onClickOutside: (event: MouseEvent) => void;\n  onInsertShape: (elements: LibraryItem) => void;\n  onAddToLibrary: () => void;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  useOnClickOutside(ref, (event) => {\n    // If click on the library icon, do nothing.\n    if ((event.target as Element).closest(\".ToolIcon_type_button__library\")) {\n      return;\n    }\n    onClickOutside(event);\n  });\n\n  const [libraryItems, setLibraryItems] = useState<LibraryItems>([]);\n\n  const [loadingState, setIsLoading] = useState<\n    \"preloading\" | \"loading\" | \"ready\"\n  >(\"preloading\");\n\n  const loadingTimerRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    Promise.race([\n      new Promise((resolve) => {\n        loadingTimerRef.current = setTimeout(() => {\n          resolve(\"loading\");\n        }, 100);\n      }),\n      Library.loadLibrary().then((items) => {\n        setLibraryItems(items);\n        setIsLoading(\"ready\");\n      }),\n    ]).then((data) => {\n      if (data === \"loading\") {\n        setIsLoading(\"loading\");\n      }\n    });\n    return () => {\n      clearTimeout(loadingTimerRef.current!);\n    };\n  }, []);\n\n  const removeFromLibrary = useCallback(async (indexToRemove) => {\n    const items = await Library.loadLibrary();\n    const nextItems = items.filter((_, index) => index !== indexToRemove);\n    Library.saveLibrary(nextItems);\n    setLibraryItems(nextItems);\n  }, []);\n\n  const addToLibrary = useCallback(\n    async (elements: LibraryItem) => {\n      const items = await Library.loadLibrary();\n      const nextItems = [...items, elements];\n      onAddToLibrary();\n      Library.saveLibrary(nextItems);\n      setLibraryItems(nextItems);\n    },\n    [onAddToLibrary],\n  );\n\n  return loadingState === \"preloading\" ? null : (\n    <Island padding={1} ref={ref} className=\"layer-ui__library\">\n      {loadingState === \"loading\" ? (\n        <div className=\"layer-ui__library-message\">\n          {t(\"labels.libraryLoadingMessage\")}\n        </div>\n      ) : (\n          <LibraryMenuItems\n            library={libraryItems}\n            onRemoveFromLibrary={removeFromLibrary}\n            onAddToLibrary={addToLibrary}\n            onInsertShape={onInsertShape}\n            pendingElements={pendingElements}\n            setAppState={setAppState}\n          />\n        )}\n    </Island>\n  );\n};\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  setAppState,\n  canvas,\n  elements,\n  onCollabButtonClick,\n  onLockToggle,\n  onDocUploadClick,\n  onInsertElements,\n  zenModeEnabled,\n  toggleZenMode,\n  isCollaborating,\n  onExportToBackend,\n  renderCustomFooter,\n}: LayerUIProps) => {\n  const isMobile = useIsMobile();\n\n  const renderEncryptedIcon = () => (\n    <a\n      className={clsx(\"encrypted-icon tooltip zen-mode-visibility\", {\n        \"zen-mode-visibility--hidden\": zenModeEnabled,\n      })}\n      href=\"https://blog.excalidraw.com/end-to-end-encryption/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Tooltip label={t(\"encrypted.tooltip\")} position=\"above\" long={true}>\n        {shield}\n      </Tooltip>\n    </a>\n  );\n\n  const renderExportDialog = () => {\n    const createExporter = (type: ExportType): ExportCB => async (\n      exportedElements,\n      scale,\n    ) => {\n      if (canvas) {\n        await exportCanvas(type, exportedElements, appState, canvas, {\n          exportBackground: appState.exportBackground,\n          name: appState.name,\n          viewBackgroundColor: appState.viewBackgroundColor,\n          scale,\n          shouldAddWatermark: appState.shouldAddWatermark,\n        })\n          .catch(muteFSAbortError)\n          .catch((error) => {\n            console.error(error);\n            setAppState({ errorMessage: error.message });\n          });\n      }\n    };\n\n    return (\n      <ExportDialog\n        elements={elements}\n        appState={appState}\n        actionManager={actionManager}\n        onExportToPng={createExporter(\"png\")}\n        onExportToSvg={createExporter(\"svg\")}\n        onExportToClipboard={createExporter(\"clipboard\")}\n        onExportToBackend={\n          onExportToBackend\n            ? (elements) => {\n              onExportToBackend &&\n                onExportToBackend(elements, appState, canvas);\n            }\n            : undefined\n        }\n      />\n    );\n  };\n\n  const renderCanvasActions = () => (\n    <Section\n      heading=\"canvasActions\"\n      className={clsx(\"zen-mode-transition\", {\n        \"transition-left\": zenModeEnabled,\n      })}\n    >\n      {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n      <Island padding={2} style={{ zIndex: 1 }}>\n        <Stack.Col gap={4}>\n          <Stack.Row gap={1} justifyContent=\"space-between\">\n            {actionManager.renderAction(\"loadScene\")}\n            {actionManager.renderAction(\"saveScene\")}\n            {actionManager.renderAction(\"saveAsScene\")}\n            {renderExportDialog()}\n            {actionManager.renderAction(\"clearCanvas\")}\n            {actionManager.renderAction(\"Startchat\")}\n            {onCollabButtonClick && (\n              <CollabButton\n                isCollaborating={isCollaborating}\n                collaboratorCount={appState.collaborators.size}\n                onClick={onCollabButtonClick}\n              />\n            )}\n          </Stack.Row>\n          <BackgroundPickerAndDarkModeToggle\n            actionManager={actionManager}\n            appState={appState}\n            setAppState={setAppState}\n          />\n        </Stack.Col>\n      </Island>\n    </Section>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section\n      heading=\"selectedShapeActions\"\n      className={clsx(\"zen-mode-transition\", {\n        \"transition-left\": zenModeEnabled,\n      })}\n    >\n      <Island className={CLASSES.SHAPE_ACTIONS_MENU} padding={2}>\n        <SelectedShapeActions\n          appState={appState}\n          elements={elements}\n          renderAction={actionManager.renderAction}\n          elementType={appState.elementType}\n        />\n      </Island>\n    </Section>\n  );\n\n  const closeLibrary = useCallback(\n    (event) => {\n      setAppState({ isLibraryOpen: false });\n    },\n    [setAppState],\n  );\n\n  const deselectItems = useCallback(() => {\n    setAppState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n    });\n  }, [setAppState]);\n\n  const libraryMenu = appState.isLibraryOpen ? (\n    <LibraryMenu\n      pendingElements={getSelectedElements(elements, appState)}\n      onClickOutside={closeLibrary}\n      onInsertShape={onInsertElements}\n      onAddToLibrary={deselectItems}\n      setAppState={setAppState}\n    />\n  ) : null;\n\n  const renderFixedSideContainer = () => {\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(\n      appState,\n      elements,\n    );\n\n    return (\n      <FixedSideContainer side=\"top\">\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col\n            gap={4}\n            className={clsx({ \"disable-pointerEvents\": zenModeEnabled })}\n          >\n            {renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          <Section heading=\"shapes\">\n            {(heading) => (\n              <Stack.Col gap={4} align=\"start\">\n                <Stack.Row gap={1}>\n                  <Island\n                    padding={1}\n                    className={clsx({ \"zen-mode\": zenModeEnabled })}\n                  >\n                    <HintViewer appState={appState} elements={elements} />\n                    {heading}\n                    <Stack.Row gap={1}>\n                      <ShapesSwitcher\n                        elementType={appState.elementType}\n                        setAppState={setAppState}\n                        isLibraryOpen={appState.isLibraryOpen}\n                      />\n                    </Stack.Row>\n                  </Island>\n                  <ToolButton\n                    type=\"button\"\n                    icon={mute}\n                    title={t(\"buttons.mute\")}\n                    aria-label={t(\"buttons.mute\")}\n                  />\n                  <LockIcon\n                    zenModeEnabled={zenModeEnabled}\n                    checked={appState.elementLocked}\n                    onChange={onLockToggle}\n                    title={t(\"toolBar.lock\")}\n                  />\n                   <UploadIcon \n                  zenModeEnabled={zenModeEnabled}\n                  title=\"Upload\"\n                  onClick={onDocUploadClick}\n                \n                  />\n\n                </Stack.Row>\n                {libraryMenu}\n              </Stack.Col>\n            )}\n          </Section>\n          <UserList\n            className={clsx(\"zen-mode-transition\", {\n              \"transition-right\": zenModeEnabled,\n            })}\n          >\n            {Array.from(appState.collaborators)\n              // Collaborator is either not initialized or is actually the current user.\n              .filter(([_, client]) => Object.keys(client).length !== 0)\n              .map(([clientId, client]) => (\n                <Tooltip\n                  label={client.username || \"Unknown user\"}\n                  key={clientId}\n                >\n                  {actionManager.renderAction(\"goToCollaborator\", clientId)}\n                </Tooltip>\n              ))}\n          </UserList>\n        </div>\n      </FixedSideContainer>\n    );\n  };\n\n  const renderBottomAppMenu = () => {\n    return (\n      <div\n        className={clsx(\"App-menu App-menu_bottom zen-mode-transition\", {\n          \"App-menu_bottom--transition-left\": zenModeEnabled,\n        })}\n      >\n        <Stack.Col gap={2}>\n          <Section heading=\"canvasActions\">\n            <Island padding={1}>\n              <ZoomActions\n                renderAction={actionManager.renderAction}\n                zoom={appState.zoom}\n              />\n            </Island>\n            {renderEncryptedIcon()}\n          </Section>\n        </Stack.Col>\n      </div>\n    );\n  };\n\n  const renderFooter = () => (\n    <footer role=\"contentinfo\" className=\"layer-ui__wrapper__footer\">\n      <div\n        className={clsx(\"zen-mode-transition\", {\n          \"transition-right disable-pointerEvents\": zenModeEnabled,\n        })}\n      >\n        {renderCustomFooter?.(false)}\n        {actionManager.renderAction(\"toggleShortcuts\")}\n      </div>\n      <button\n        className={clsx(\"disable-zen-mode\", {\n          \"disable-zen-mode--visible\": zenModeEnabled,\n        })}\n        onClick={toggleZenMode}\n      >\n        {t(\"buttons.exitZenMode\")}\n      </button>\n      {appState.scrolledOutside && (\n        <button\n          className=\"scroll-back-to-content\"\n          onClick={() => {\n            setAppState({\n              ...calculateScrollCenter(elements, appState, canvas),\n            });\n          }}\n        >\n          {t(\"buttons.scrollBackToContent\")}\n        </button>\n      )}\n    </footer>\n  );\n\n  const dialogs = (\n    <>\n      {appState.isLoading && <LoadingMessage />}\n      {appState.errorMessage && (\n        <ErrorDialog\n          message={appState.errorMessage}\n          onClose={() => setAppState({ errorMessage: null })}\n        />\n      )}\n      {appState.showHelpDialog && (\n        <HelpDialog onClose={() => setAppState({ showHelpDialog: false })} />\n      )}\n      {appState.pasteDialog.shown && (\n        <PasteChartDialog\n          setAppState={setAppState}\n          appState={appState}\n          onInsertChart={onInsertElements}\n          onClose={() =>\n            setAppState({\n              pasteDialog: { shown: false, data: null },\n            })\n          }\n        />\n      )}\n    </>\n  );\n\n  return isMobile ? (\n    <>\n      {dialogs}\n      <MobileMenu\n        appState={appState}\n        elements={elements}\n        actionManager={actionManager}\n        libraryMenu={libraryMenu}\n        exportButton={renderExportDialog()}\n        setAppState={setAppState}\n        onCollabButtonClick={onCollabButtonClick}\n        onLockToggle={onLockToggle}\n        canvas={canvas}\n        onDocUploadClick={onDocUploadClick}\n        isCollaborating={isCollaborating}\n        renderCustomFooter={renderCustomFooter}\n      />\n    </>\n  ) : (\n      <div className=\"layer-ui__wrapper\">\n        {dialogs}\n        {renderFixedSideContainer()}\n        {renderBottomAppMenu()}\n        {\n          <aside\n            className={clsx(\n              \"layer-ui__wrapper__github-corner zen-mode-transition\",\n              {\n                \"transition-right\": zenModeEnabled,\n              },\n            )}\n          >\n            <GitHubCorner appearance={appState.appearance} />\n          </aside>\n        }\n        {renderFooter()}\n      </div>\n    );\n};\n\nconst areEqual = (prev: LayerUIProps, next: LayerUIProps) => {\n  const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n    const {\n      suggestedBindings,\n      startBoundElement: boundElement,\n      ...ret\n    } = appState;\n    return ret;\n  };\n  const prevAppState = getNecessaryObj(prev.appState);\n  const nextAppState = getNecessaryObj(next.appState);\n\n  const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n  return (\n    prev.langCode === next.langCode &&\n    prev.elements === next.elements &&\n    keys.every((key) => prevAppState[key] === nextAppState[key])\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\resizeTest.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\index.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Popover.tsx",[],["557","558"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ExportDialog.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\gadirections.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\scrollbars.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionFinalize.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionDistribute.tsx",[],["559","560"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\align.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ButtonIconSelect.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\utils.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\typeChecks.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\linearElementEditor.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\register.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\LoadingMessage.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\shapes.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\textElement.ts",[],["561","562"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\collision.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Stack.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\LibraryUnit.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Actions.tsx",[],["563","564"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionDeleteSelected.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionExport.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\renderer\\roundRect.ts",[],["565","566"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ProjectName.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionAlign.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\MobileMenu.tsx",["567"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\App.tsx",["568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\appState.ts",["656","657"],"import oc from \"open-color\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_TEXT_ALIGN,\n} from \"./constants\";\nimport { t } from \"./i18n\";\nimport { AppState, FlooredNumber, NormalizedZoomValue } from \"./types\";\nimport { getDateTime } from \"./utils\";\n\nexport const getDefaultAppState = (): Omit<\n  AppState,\n  \"offsetTop\" | \"offsetLeft\"\n> => {\n  return {\n    appearance: \"light\",\n    collaborators: new Map(),\n    currentChartType: \"bar\",\n    currentItemBackgroundColor: \"transparent\",\n    currentItemEndArrowhead: \"arrow\",\n    currentItemFillStyle: \"hachure\",\n    currentItemFontFamily: DEFAULT_FONT_FAMILY,\n    currentItemFontSize: DEFAULT_FONT_SIZE,\n    currentItemLinearStrokeSharpness: \"round\",\n    currentItemOpacity: 100,\n    currentItemRoughness: 1,\n    currentItemStartArrowhead: null,\n    currentItemStrokeColor: oc.black,\n    currentItemStrokeSharpness: \"sharp\",\n    currentItemStrokeStyle: \"solid\",\n    currentItemStrokeWidth: 1,\n    currentItemTextAlign: DEFAULT_TEXT_ALIGN,\n    cursorButton: \"up\",\n    draggingElement: null,\n    editingElement: null,\n    editingGroupId: null,\n    editingLinearElement: null,\n    elementLocked: false,\n    elementType: \"selection\",\n    errorMessage: null,\n    exportBackground: true,\n    exportEmbedScene: false,\n    fileHandle: null,\n    gridSize: null,\n    height: window.innerHeight,\n    isBindingEnabled: true,\n    isLibraryOpen: false,\n    isLoading: false,\n    isResizing: false,\n    isRotating: false,\n    lastPointerDownWith: \"mouse\",\n    multiElement: null,\n    name: `${t(\"labels.untitled\")}-${getDateTime()}`,\n    openMenu: null,\n    pasteDialog: { shown: false, data: null },\n    previousSelectedElementIds: {},\n    resizingElement: null,\n    scrolledOutside: false,\n    scrollX: 0 as FlooredNumber,\n    scrollY: 0 as FlooredNumber,\n    selectedElementIds: {},\n    selectedGroupIds: {},\n    selectionElement: null,\n    shouldAddWatermark: false,\n    shouldCacheIgnoreZoom: false,\n    showHelpDialog: false,\n    showStats: false,\n    startBoundElement: null,\n    suggestedBindings: [],\n    toastMessage: null,\n    uploadedFiles:[],\n    viewBackgroundColor: oc.white,\n    width: window.innerWidth,\n    zenModeEnabled: false,\n    zoom: { value: 1 as NormalizedZoomValue, translation: { x: 0, y: 0 } },\n  };\n};\n\n/**\n * Config containing all AppState keys. Used to determine whether given state\n *  prop should be stripped when exporting to given storage type.\n */\nconst APP_STATE_STORAGE_CONF = (<\n  Values extends {\n    /** whether to keep when storing to browser storage (localStorage/IDB) */\n    browser: boolean;\n    /** whether to keep when exporting to file/database */\n    export: boolean;\n  },\n  T extends Record<keyof AppState, Values>\n>(\n  config: { [K in keyof T]: K extends keyof AppState ? T[K] : never },\n) => config)({\n  appearance: { browser: true, export: false },\n  collaborators: { browser: false, export: false },\n  currentChartType: { browser: true, export: false },\n  currentItemBackgroundColor: { browser: true, export: false },\n  currentItemEndArrowhead: { browser: true, export: false },\n  currentItemFillStyle: { browser: true, export: false },\n  currentItemFontFamily: { browser: true, export: false },\n  currentItemFontSize: { browser: true, export: false },\n  currentItemLinearStrokeSharpness: { browser: true, export: false },\n  currentItemOpacity: { browser: true, export: false },\n  currentItemRoughness: { browser: true, export: false },\n  currentItemStartArrowhead: { browser: true, export: false },\n  currentItemStrokeColor: { browser: true, export: false },\n  currentItemStrokeSharpness: { browser: true, export: false },\n  currentItemStrokeStyle: { browser: true, export: false },\n  currentItemStrokeWidth: { browser: true, export: false },\n  currentItemTextAlign: { browser: true, export: false },\n  cursorButton: { browser: true, export: false },\n  draggingElement: { browser: false, export: false },\n  editingElement: { browser: false, export: false },\n  editingGroupId: { browser: true, export: false },\n  editingLinearElement: { browser: false, export: false },\n  elementLocked: { browser: true, export: false },\n  elementType: { browser: true, export: false },\n  errorMessage: { browser: false, export: false },\n  exportBackground: { browser: true, export: false },\n  exportEmbedScene: { browser: true, export: false },\n  fileHandle: { browser: false, export: false },\n  gridSize: { browser: true, export: true },\n  height: { browser: false, export: false },\n  isBindingEnabled: { browser: false, export: false },\n  isLibraryOpen: { browser: false, export: false },\n  isLoading: { browser: false, export: false },\n  isResizing: { browser: false, export: false },\n  isRotating: { browser: false, export: false },\n  lastPointerDownWith: { browser: true, export: false },\n  multiElement: { browser: false, export: false },\n  name: { browser: true, export: false },\n  offsetLeft: { browser: false, export: false },\n  offsetTop: { browser: false, export: false },\n  openMenu: { browser: true, export: false },\n  pasteDialog: { browser: false, export: false },\n  previousSelectedElementIds: { browser: true, export: false },\n  resizingElement: { browser: false, export: false },\n  scrolledOutside: { browser: true, export: false },\n  scrollX: { browser: true, export: false },\n  scrollY: { browser: true, export: false },\n  selectedElementIds: { browser: true, export: false },\n  selectedGroupIds: { browser: true, export: false },\n  selectionElement: { browser: false, export: false },\n  shouldAddWatermark: { browser: true, export: false },\n  shouldCacheIgnoreZoom: { browser: true, export: false },\n  showHelpDialog: { browser: false, export: false },\n  showStats: { browser: true, export: false },\n  startBoundElement: { browser: false, export: false },\n  suggestedBindings: { browser: false, export: false },\n  toastMessage: { browser: false, export: false },\n  uploadedFiles:{ browser: true, export: true },\n  viewBackgroundColor: { browser: true, export: true },\n  width: { browser: false, export: false },\n  zenModeEnabled: { browser: true, export: false },\n  zoom: { browser: true, export: false },\n});\n\nconst _clearAppStateForStorage = <ExportType extends \"export\" | \"browser\">(\n  appState: Partial<AppState>,\n  exportType: ExportType,\n) => {\n  type ExportableKeys = {\n    [K in keyof typeof APP_STATE_STORAGE_CONF]: typeof APP_STATE_STORAGE_CONF[K][ExportType] extends true\n      ? K\n      : never;\n  }[keyof typeof APP_STATE_STORAGE_CONF];\n  const stateForExport = {} as { [K in ExportableKeys]?: typeof appState[K] };\n  for (const key of Object.keys(appState) as (keyof typeof appState)[]) {\n    const propConfig = APP_STATE_STORAGE_CONF[key];\n    if (propConfig?.[exportType]) {\n      // @ts-ignore see https://github.com/microsoft/TypeScript/issues/31445\n      stateForExport[key] = appState[key];\n    }\n  }\n  return stateForExport;\n};\n\nexport const clearAppStateForLocalStorage = (appState: Partial<AppState>) => {\n  return _clearAppStateForStorage(appState, \"browser\");\n};\n\nexport const cleanAppStateForExport = (appState: Partial<AppState>) => {\n  return _clearAppStateForStorage(appState, \"export\");\n};\n","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\constants.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\i18n.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\collab\\CollabWrapper.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\collab\\Portal.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\is-mobile.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\json.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Island.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\binding.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Toast.tsx",[],["658","659"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\showSelectedShapeActions.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\textWysiwyg.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\renderer\\index.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Tooltip.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\UploadIcon.tsx",["660","661","662","663","664","665","666","667","668"],"import \"./ToolIcon.scss\";\n\nimport React,{BaseSyntheticEvent} from \"react\";\nimport clsx from \"clsx\";\nimport { alignElements } from \"../align\";\n\ntype UploadIconSize = \"s\" | \"m\";\n\ntype UploadIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  onClick?(e:BaseSyntheticEvent): void;\n  size?: UploadIconSize;\n  zenModeEnabled?: boolean;\n};\n\nconst DEFAULT_SIZE: UploadIconSize = \"m\";\n\nconst ICONS = {\n  DEFAULT: (\n\n    <svg height=\"30\" width=\"200\">\n      <text x=\"0\" y=\"15\" fill=\"black\">+</text>\n    </svg>\n\n  )\n};\n\nexport const UploadIcon = (props: UploadIconProps) => {\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon__lock ToolIcon_type_floating zen-mode-visibility\",\n        `ToolIcon_size_${props.size || DEFAULT_SIZE}`,\n        {\n          \"zen-mode-visibility--hidden\": props.zenModeEnabled,\n        },\n      )}\n      title={`${props.title} — Q`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"file\"\n        name={props.name}\n        id={props.id}\n        onChange={props.onClick}\n        aria-label={props.title}\n      />\n    \n      <div className=\"ToolIcon__icon\">\n        {ICONS.DEFAULT}\n      </div>\n    </label>\n  );\n};\n","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\LockIcon.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\renderer\\renderScene.ts",["669","670"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\encode.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\clients.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\HelpIcon.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Avatar.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\serviceWorker.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ErrorDialog.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\colors.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\data\\index.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\clipboard.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\renderer\\renderElement.ts",["671"],"import {\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  Arrowhead,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { isTextElement, isLinearElement } from \"../element/typeChecks\";\nimport {\n  getDiamondPoints,\n  getElementAbsoluteCoords,\n  getArrowheadPoints,\n} from \"../element/bounds\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { Drawable, Options } from \"roughjs/bin/core\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport { RoughGenerator } from \"roughjs/bin/generator\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  SVG_NS,\n  distance,\n  getFontString,\n  getFontFamilyString,\n  isRTL,\n} from \"../utils\";\nimport { isPathALoop } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { Zoom } from \"../types\";\nimport { getDefaultAppState } from \"../appState\";\n\nconst defaultAppState = getDefaultAppState();\n\nconst CANVAS_PADDING = 20;\n\nconst DASHARRAY_DASHED = [12, 8];\nconst DASHARRAY_DOTTED = [3, 6];\n\nexport interface ExcalidrawElementWithCanvas {\n  element: ExcalidrawElement | ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  canvasZoom: Zoom[\"value\"];\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n}\n\nconst generateElementCanvas = (\n  element: NonDeletedExcalidrawElement,\n  zoom: Zoom,\n): ExcalidrawElementWithCanvas => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\")!;\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  if (isLinearElement(element)) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      CANVAS_PADDING * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      CANVAS_PADDING * zoom.value * 2;\n\n    canvasOffsetX =\n      element.x > x1\n        ? Math.floor(distance(element.x, x1)) *\n          window.devicePixelRatio *\n          zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? Math.floor(distance(element.y, y1)) *\n          window.devicePixelRatio *\n          zoom.value\n        : 0;\n\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      CANVAS_PADDING * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      CANVAS_PADDING * zoom.value * 2;\n  }\n\n  context.translate(CANVAS_PADDING * zoom.value, CANVAS_PADDING * zoom.value);\n\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value,\n  );\n\n  const rc = rough.canvas(canvas);\n  drawElementOnCanvas(element, rc, context);\n  context.translate(\n    -(CANVAS_PADDING * zoom.value),\n    -(CANVAS_PADDING * zoom.value),\n  );\n  context.scale(\n    1 / (window.devicePixelRatio * zoom.value),\n    1 / (window.devicePixelRatio * zoom.value),\n  );\n  return {\n    element,\n    canvas,\n    canvasZoom: zoom.value,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      rc.draw(getShapeForElement(element) as Drawable);\n      break;\n    }\n    case \"arrow\":\n    case \"draw\":\n    case \"line\": {\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        rc.draw(shape);\n      });\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const rtl = isRTL(element.text);\n        const shouldTemporarilyAttach = rtl && !context.canvas.isConnected;\n        if (shouldTemporarilyAttach) {\n          // to correctly render RTL text mixed with LTR, we have to append it\n          // to the DOM\n          document.body.appendChild(context.canvas);\n        }\n        context.canvas.setAttribute(\"dir\", rtl ? \"rtl\" : \"ltr\");\n        const font = context.font;\n        context.font = getFontString(element);\n        const fillStyle = context.fillStyle;\n        context.fillStyle = element.strokeColor;\n        const textAlign = context.textAlign;\n        context.textAlign = element.textAlign as CanvasTextAlign;\n\n        // Canvas does not support multiline text by default\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        for (let index = 0; index < lines.length; index++) {\n          context.fillText(\n            lines[index],\n            horizontalOffset,\n            (index + 1) * lineHeight - verticalOffset,\n          );\n        }\n        context.fillText(\"Hello\",horizontalOffset,200)\n        context.fillStyle = fillStyle;\n        context.font = font;\n        context.textAlign = textAlign;\n        if (shouldTemporarilyAttach) {\n          context.canvas.remove();\n        }\n      } else {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst elementWithCanvasCache = new WeakMap<\n  ExcalidrawElement,\n  ExcalidrawElementWithCanvas\n>();\n\nconst shapeCache = new WeakMap<\n  ExcalidrawElement,\n  Drawable | Drawable[] | null\n>();\n\nexport const getShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.get(element);\n\nexport const invalidateShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.delete(element);\n\nexport const generateRoughOptions = (element: ExcalidrawElement): Options => {\n  const options: Options = {\n    seed: element.seed,\n    strokeLineDash:\n      element.strokeStyle === \"dashed\"\n        ? DASHARRAY_DASHED\n        : element.strokeStyle === \"dotted\"\n        ? DASHARRAY_DOTTED\n        : undefined,\n    // for non-solid strokes, disable multiStroke because it tends to make\n    // dashes/dots overlay each other\n    disableMultiStroke: element.strokeStyle !== \"solid\",\n    // for non-solid strokes, increase the width a bit to make it visually\n    // similar to solid strokes, because we're also disabling multiStroke\n    strokeWidth:\n      element.strokeStyle !== \"solid\"\n        ? element.strokeWidth + 0.5\n        : element.strokeWidth,\n    // when increasing strokeWidth, we must explicitly set fillWeight and\n    // hachureGap because if not specified, roughjs uses strokeWidth to\n    // calculate them (and we don't want the fills to be modified)\n    fillWeight: element.strokeWidth / 2,\n    hachureGap: element.strokeWidth * 4,\n    roughness: element.roughness,\n    stroke: element.strokeColor,\n  };\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      options.fillStyle = element.fillStyle;\n      options.fill =\n        element.backgroundColor === \"transparent\"\n          ? undefined\n          : element.backgroundColor;\n      if (element.type === \"ellipse\") {\n        options.curveFitting = 1;\n      }\n      return options;\n    }\n    case \"line\":\n    case \"draw\": {\n      // If shape is a line and is a closed shape,\n      // fill the shape if a color is set.\n      if (isPathALoop(element.points)) {\n        options.fillStyle = element.fillStyle;\n        options.fill =\n          element.backgroundColor === \"transparent\"\n            ? undefined\n            : element.backgroundColor;\n      }\n      return options;\n    }\n    case \"arrow\":\n      return options;\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nconst generateElementShape = (\n  element: NonDeletedExcalidrawElement,\n  generator: RoughGenerator,\n) => {\n  let shape = shapeCache.get(element) || null;\n  if (!shape) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\":\n        if (element.strokeSharpness === \"round\") {\n          const w = element.width;\n          const h = element.height;\n          const r = Math.min(w, h) * 0.25;\n          shape = generator.path(\n            `M ${r} 0 L ${w - r} 0 Q ${w} 0, ${w} ${r} L ${w} ${\n              h - r\n            } Q ${w} ${h}, ${w - r} ${h} L ${r} ${h} Q 0 ${h}, 0 ${\n              h - r\n            } L 0 ${r} Q 0 0, ${r} 0`,\n            generateRoughOptions(element),\n          );\n        } else {\n          shape = generator.rectangle(\n            0,\n            0,\n            element.width,\n            element.height,\n            generateRoughOptions(element),\n          );\n        }\n        break;\n      case \"diamond\": {\n        const [\n          topX,\n          topY,\n          rightX,\n          rightY,\n          bottomX,\n          bottomY,\n          leftX,\n          leftY,\n        ] = getDiamondPoints(element);\n        shape = generator.polygon(\n          [\n            [topX, topY],\n            [rightX, rightY],\n            [bottomX, bottomY],\n            [leftX, leftY],\n          ],\n          generateRoughOptions(element),\n        );\n        break;\n      }\n      case \"ellipse\":\n        shape = generator.ellipse(\n          element.width / 2,\n          element.height / 2,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n        break;\n      case \"line\":\n      case \"draw\":\n      case \"arrow\": {\n        const options = generateRoughOptions(element);\n\n        // points array can be empty in the beginning, so it is important to add\n        // initial position to it\n        const points = element.points.length ? element.points : [[0, 0]];\n\n        // curve is always the first element\n        // this simplifies finding the curve for an element\n        if (element.strokeSharpness === \"sharp\") {\n          if (options.fill) {\n            shape = [generator.polygon(points as [number, number][], options)];\n          } else {\n            shape = [\n              generator.linearPath(points as [number, number][], options),\n            ];\n          }\n        } else {\n          shape = [generator.curve(points as [number, number][], options)];\n        }\n\n        // add lines only in arrow\n        if (element.type === \"arrow\") {\n          const { startArrowhead = null, endArrowhead = \"arrow\" } = element;\n\n          function getArrowheadShapes(\n            element: ExcalidrawLinearElement,\n            shape: Drawable[],\n            position: \"start\" | \"end\",\n            arrowhead: Arrowhead,\n          ) {\n            const arrowheadPoints = getArrowheadPoints(\n              element,\n              shape,\n              position,\n              arrowhead,\n            );\n\n            if (arrowheadPoints === null) {\n              return [];\n            }\n\n            // Other arrowheads here...\n            if (arrowhead === \"dot\") {\n              const [x, y, r] = arrowheadPoints;\n\n              return [\n                generator.circle(x, y, r, {\n                  ...options,\n                  fill: element.strokeColor,\n                  fillStyle: \"solid\",\n                }),\n              ];\n            }\n\n            // Arrow arrowheads\n            const [x2, y2, x3, y3, x4, y4] = arrowheadPoints;\n            if (element.strokeStyle === \"dotted\") {\n              // for dotted arrows caps, reduce gap to make it more legible\n              options.strokeLineDash = [3, 4];\n            } else {\n              // for solid/dashed, keep solid arrow cap\n              delete options.strokeLineDash;\n            }\n            return [\n              generator.line(x3, y3, x2, y2, options),\n              generator.line(x4, y4, x2, y2, options),\n            ];\n          }\n\n          if (startArrowhead !== null) {\n            const shapes = getArrowheadShapes(\n              element,\n              shape,\n              \"start\",\n              startArrowhead,\n            );\n            shape.push(...shapes);\n          }\n\n          if (endArrowhead !== null) {\n            if (endArrowhead === undefined) {\n              // Hey, we have an old arrow here!\n            }\n\n            const shapes = getArrowheadShapes(\n              element,\n              shape,\n              \"end\",\n              endArrowhead,\n            );\n            shape.push(...shapes);\n          }\n        }\n        break;\n      }\n      case \"text\": {\n        // just to ensure we don't regenerate element.canvas on rerenders\n        shape = [];\n        break;\n      }\n    }\n    shapeCache.set(element, shape);\n  }\n};\n\nconst generateElementWithCanvas = (\n  element: NonDeletedExcalidrawElement,\n  sceneState?: SceneState,\n) => {\n  const zoom: Zoom = sceneState ? sceneState.zoom : defaultAppState.zoom;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  const shouldRegenerateBecauseZoom =\n    prevElementWithCanvas &&\n    prevElementWithCanvas.canvasZoom !== zoom.value &&\n    !sceneState?.shouldCacheIgnoreZoom;\n  if (!prevElementWithCanvas || shouldRegenerateBecauseZoom) {\n    const elementWithCanvas = generateElementCanvas(element, zoom);\n    elementWithCanvasCache.set(element, elementWithCanvas);\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n};\n\nconst drawElementFromCanvas = (\n  elementWithCanvas: ExcalidrawElementWithCanvas,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n) => {\n  const element = elementWithCanvas.element;\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = ((x1 + x2) / 2 + sceneState.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + sceneState.scrollY) * window.devicePixelRatio;\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.rotate(element.angle);\n  context.drawImage(\n    elementWithCanvas.canvas!,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (CANVAS_PADDING * elementWithCanvas.canvasZoom) /\n        elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (CANVAS_PADDING * elementWithCanvas.canvasZoom) /\n        elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.height / elementWithCanvas.canvasZoom,\n  );\n  context.rotate(-element.angle);\n  context.translate(-cx, -cy);\n  context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  // Clear the nested element we appended to the DOM\n};\n\nexport const renderElement = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderOptimizations: boolean,\n  sceneState: SceneState,\n) => {\n  const generator = rc.generator;\n  switch (element.type) {\n    case \"selection\": {\n      context.translate(\n        element.x + sceneState.scrollX,\n        element.y + sceneState.scrollY,\n      );\n      const fillStyle = context.fillStyle;\n      context.fillStyle = \"rgba(0, 0, 255, 0.10)\";\n      context.fillRect(0, 0, element.width, element.height);\n      context.fillStyle = fillStyle;\n      context.translate(\n        -element.x - sceneState.scrollX,\n        -element.y - sceneState.scrollY,\n      );\n      break;\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\":\n    case \"line\":\n    case \"draw\":\n    case \"arrow\":\n    case \"text\": {\n      generateElementShape(element, generator);\n      if (renderOptimizations) {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          sceneState,\n        );\n        drawElementFromCanvas(elementWithCanvas, rc, context, sceneState);\n      } else {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + sceneState.scrollX;\n        const cy = (y1 + y2) / 2 + sceneState.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context);\n        context.translate(shiftX, shiftY);\n        context.rotate(-element.angle);\n        context.translate(-cx, -cy);\n      }\n      break;\n    }\n    default: {\n      // @ts-ignore\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nexport const renderElementToSvg = (\n  element: NonDeletedExcalidrawElement,\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  offsetX?: number,\n  offsetY?: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2 - (element.x - x1);\n  const cy = (y2 - y1) / 2 - (element.y - y1);\n  const degree = (180 * element.angle) / Math.PI;\n  const generator = rsvg.generator;\n  switch (element.type) {\n    case \"selection\": {\n      // Since this is used only during editing experience, which is canvas based,\n      // this should not happen\n      throw new Error(\"Selection rendering is not supported for SVG\");\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      generateElementShape(element, generator);\n      const node = rsvg.draw(getShapeForElement(element) as Drawable);\n      const opacity = element.opacity / 100;\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      svgRoot.appendChild(node);\n      break;\n    }\n    case \"line\":\n    case \"draw\":\n    case \"arrow\": {\n      generateElementShape(element, generator);\n      const group = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      const opacity = element.opacity / 100;\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        const node = rsvg.draw(shape);\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        if (\n          (element.type === \"line\" || element.type === \"draw\") &&\n          isPathALoop(element.points) &&\n          element.backgroundColor !== \"transparent\"\n        ) {\n          node.setAttribute(\"fill-rule\", \"evenodd\");\n        }\n        group.appendChild(node);\n      });\n      svgRoot.appendChild(group);\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const opacity = element.opacity / 100;\n        const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const direction = isRTL(element.text) ? \"rtl\" : \"ltr\";\n        const textAnchor =\n          element.textAlign === \"center\"\n            ? \"middle\"\n            : element.textAlign === \"right\" || direction === \"rtl\"\n            ? \"end\"\n            : \"start\";\n        for (let i = 0; i < lines.length; i++) {\n          const text = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"text\");\n          text.textContent = lines[i];\n          text.setAttribute(\"x\", `${horizontalOffset}`);\n          text.setAttribute(\"y\", `${(i + 1) * lineHeight - verticalOffset}`);\n          text.setAttribute(\"font-family\", getFontFamilyString(element));\n          text.setAttribute(\"font-size\", `${element.fontSize}px`);\n          text.setAttribute(\"fill\", element.strokeColor);\n          text.setAttribute(\"text-anchor\", textAnchor);\n          text.setAttribute(\"style\", \"white-space: pre;\");\n          text.setAttribute(\"direction\", direction);\n          node.appendChild(text);\n        }\n        svgRoot.appendChild(node);\n      } else {\n        // @ts-ignore\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n};\n","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ContextMenu.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\dragElements.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\export.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\index.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\HelpDialog.tsx",["672"],"import React from \"react\";\nimport { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { Dialog } from \"./Dialog\";\nimport { getShortcutKey } from \"../utils\";\nimport \"./HelpDialog.scss\";\n\nconst Header = () => (\n  <div className=\"HelpDialog--header\">\n  </div>\n);\n\nconst Section = (props: { title: string; children: React.ReactNode }) => (\n  <>\n    <h3>{props.title}</h3>\n    {props.children}\n  </>\n);\n\nconst Columns = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst Column = (props: { children: React.ReactNode }) => (\n  <div style={{ width: \"49%\" }}>{props.children}</div>\n);\n\nconst ShortcutIsland = (props: {\n  caption: string;\n  children: React.ReactNode;\n}) => (\n  <div className=\"HelpDialog--island\">\n    <h3 className=\"HelpDialog--island-title\">{props.caption}</h3>\n    {props.children}\n  </div>\n);\n\nconst Shortcut = (props: {\n  label: string;\n  shortcuts: string[];\n  isOr: boolean;\n}) => {\n  return (\n    <div className=\"HelpDialog--shortcut\">\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0\",\n          padding: \"4px 8px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            lineHeight: 1.4,\n          }}\n        >\n          {props.label}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"0 0 auto\",\n            justifyContent: \"flex-end\",\n            marginInlineStart: \"auto\",\n            minWidth: \"30%\",\n          }}\n        >\n          {props.shortcuts.map((shortcut, index) => (\n            <React.Fragment key={index}>\n              <ShortcutKey>{shortcut}</ShortcutKey>\n              {props.isOr &&\n                index !== props.shortcuts.length - 1 &&\n                t(\"helpDialog.or\")}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShortcut.defaultProps = {\n  isOr: true,\n};\n\nconst ShortcutKey = (props: { children: React.ReactNode }) => (\n  <kbd className=\"HelpDialog--key\" {...props} />\n);\n\nexport const HelpDialog = ({ onClose }: { onClose?: () => void }) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      <Dialog\n        onCloseRequest={handleClose}\n        title={t(\"helpDialog.title\")}\n        className={\"HelpDialog\"}\n      >\n        <Header />\n        <Section title={t(\"helpDialog.shortcuts\")}>\n          <Columns>\n            <Column>\n              <ShortcutIsland caption={t(\"helpDialog.shapes\")}>\n                <Shortcut\n                  label={t(\"toolBar.selection\")}\n                  shortcuts={[\"V\", \"1\"]}\n                />\n                <Shortcut\n                  label={t(\"toolBar.rectangle\")}\n                  shortcuts={[\"R\", \"2\"]}\n                />\n                <Shortcut label={t(\"toolBar.diamond\")} shortcuts={[\"D\", \"3\"]} />\n                <Shortcut label={t(\"toolBar.ellipse\")} shortcuts={[\"E\", \"4\"]} />\n                <Shortcut label={t(\"toolBar.arrow\")} shortcuts={[\"A\", \"5\"]} />\n                <Shortcut label={t(\"toolBar.line\")} shortcuts={[\"P\", \"6\"]} />\n                <Shortcut\n                  label={t(\"toolBar.draw\")}\n                  shortcuts={[\"Shift+P\", \"7\"]}\n                />\n                <Shortcut label={t(\"toolBar.text\")} shortcuts={[\"T\", \"8\"]} />\n                <Shortcut\n                  label={t(\"helpDialog.textNewLine\")}\n                  shortcuts={[\n                    getShortcutKey(\"Enter\"),\n                    getShortcutKey(\"Shift+Enter\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.textFinish\")}\n                  shortcuts={[\n                    getShortcutKey(\"Esc\"),\n                    getShortcutKey(\"CtrlOrCmd+Enter\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.curvedArrow\")}\n                  shortcuts={[\n                    \"A\",\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                  ]}\n                  isOr={false}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.curvedLine\")}\n                  shortcuts={[\n                    \"L\",\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                  ]}\n                  isOr={false}\n                />\n                <Shortcut label={t(\"toolBar.lock\")} shortcuts={[\"Q\"]} />\n                <Shortcut\n                  label={t(\"helpDialog.preventBinding\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd\")]}\n                />\n              </ShortcutIsland>\n              <ShortcutIsland caption={t(\"helpDialog.view\")}>\n                <Shortcut\n                  label={t(\"buttons.zoomIn\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd++\")]}\n                />\n                <Shortcut\n                  label={t(\"buttons.zoomOut\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+-\")]}\n                />\n                <Shortcut\n                  label={t(\"buttons.resetZoom\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+0\")]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.zoomToFit\")}\n                  shortcuts={[\"Shift+1\"]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.zoomToSelection\")}\n                  shortcuts={[\"Shift+2\"]}\n                />\n                <Shortcut label={t(\"buttons.fullScreen\")} shortcuts={[\"F\"]} />\n                <Shortcut\n                  label={t(\"buttons.zenMode\")}\n                  shortcuts={[getShortcutKey(\"Alt+Z\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.gridMode\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+'\")]}\n                />\n              </ShortcutIsland>\n            </Column>\n            <Column>\n              <ShortcutIsland caption={t(\"helpDialog.editor\")}>\n                <Shortcut\n                  label={t(\"labels.selectAll\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+A\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.multiSelect\")}\n                  shortcuts={[getShortcutKey(`Shift+${t(\"helpDialog.click\")}`)]}\n                />\n                <Shortcut\n                  label={t(\"labels.moveCanvas\")}\n                  shortcuts={[\n                    getShortcutKey(`Space+${t(\"helpDialog.drag\")}`),\n                    getShortcutKey(`Wheel+${t(\"helpDialog.drag\")}`),\n                  ]}\n                  isOr={true}\n                />\n                <Shortcut\n                  label={t(\"labels.cut\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+X\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.copy\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+C\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.paste\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+V\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.copyAsPng\")}\n                  shortcuts={[getShortcutKey(\"Shift+Alt+C\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.copyStyles\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+C\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.pasteStyles\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+V\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.delete\")}\n                  shortcuts={[getShortcutKey(\"Del\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.sendToBack\")}\n                  shortcuts={[\n                    isDarwin\n                      ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n                      : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"labels.bringToFront\")}\n                  shortcuts={[\n                    isDarwin\n                      ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n                      : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"labels.sendBackward\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+[\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.bringForward\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+]\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignTop\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Up\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignBottom\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Down\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignLeft\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Left\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignRight\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Right\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.duplicateSelection\")}\n                  shortcuts={[\n                    getShortcutKey(\"CtrlOrCmd+D\"),\n                    getShortcutKey(`Alt+${t(\"helpDialog.drag\")}`),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"buttons.undo\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Z\")]}\n                />\n                <Shortcut\n                  label={t(\"buttons.redo\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Z\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.group\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+G\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.ungroup\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+G\")]}\n                />\n              </ShortcutIsland>\n            </Column>\n          </Columns>\n        </Section>\n      </Dialog>\n    </>\n  );\n};\n","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\GitHubCorner.tsx",["673","674","675"],"import oc from \"open-color\";\nimport React from \"react\";\n\n// https://github.com/tholman/github-corners\nexport const GitHubCorner = React.memo(\n  ({ appearance }: { appearance: \"light\" | \"dark\" }) => (\n    <span>\n    </span>\n  ),\n);\n","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\BackgroundPickerAndDarkModeToggle.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\scroll.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\selection.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\data\\localStorage.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\collab\\RoomDialog.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\library.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\math.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\zoom.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\transformHandles.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\index.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\PasteChartDialog.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\ga.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionGroup.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ColorPicker.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\excalidraw-app\\index.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\blob.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\points.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\CollabButton.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\scene\\comparisons.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\IconPicker.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\packages\\excalidraw\\index.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionHistory.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\history.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\sizeHelpers.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\newElement.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\FixedSideContainer.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\galines.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionCanvas.tsx",["676","677","678","679","680","681","682"],"import React from \"react\";\nimport { getDefaultAppState } from \"../appState\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { resetZoom, trash, zoomIn, zoomOut, chat } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { getCommonBounds, getNonDeletedElements } from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { CODES, KEYS } from \"../keys\";\nimport { getNormalizedZoom, getSelectedElements } from \"../scene\";\nimport { centerScrollOn } from \"../scene/scroll\";\nimport { getNewZoom } from \"../scene/zoom\";\nimport { AppState, NormalizedZoomValue } from \"../types\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport { AiFillWechat, AiOutlineWechat } from \"react-icons/ai\"\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, viewBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={(color) => updateData(color)}\n        />\n      </div>\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState: AppState) => {\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        appearance: appState.appearance,\n        elementLocked: appState.elementLocked,\n        exportBackground: appState.exportBackground,\n        exportEmbedScene: appState.exportEmbedScene,\n        gridSize: appState.gridSize,\n        shouldAddWatermark: appState.shouldAddWatermark,\n        showStats: appState.showStats,\n        pasteDialog: appState.pasteDialog,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"buttons.clearReset\")}\n      aria-label={t(\"buttons.clearReset\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          updateData(null);\n        }\n      }}\n    />\n  ),\n});\n\nconst ZOOM_STEP = 0.1;\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    const zoom = getNewZoom(\n      getNormalizedZoom(appState.zoom.value + ZOOM_STEP),\n      appState.zoom,\n      { left: appState.offsetLeft, top: appState.offsetTop },\n      { x: appState.width / 2, y: appState.height / 2 },\n    );\n    return {\n      appState: {\n        ...appState,\n        zoom,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.EQUAL || event.code === CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    const zoom = getNewZoom(\n      getNormalizedZoom(appState.zoom.value - ZOOM_STEP),\n      appState.zoom,\n      { left: appState.offsetLeft, top: appState.offsetTop },\n      { x: appState.width / 2, y: appState.height / 2 },\n    );\n\n    return {\n      appState: {\n        ...appState,\n        zoom,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.MINUS || event.code === CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNewZoom(\n          1 as NormalizedZoomValue,\n          appState.zoom,\n          { left: appState.offsetLeft, top: appState.offsetTop },\n          {\n            x: appState.width / 2,\n            y: appState.height / 2,\n          },\n        ),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={resetZoom}\n      title={t(\"buttons.resetZoom\")}\n      aria-label={t(\"buttons.resetZoom\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.ZERO || event.code === CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nconst zoomValueToFitBoundsOnViewport = (\n  bounds: [number, number, number, number],\n  viewportDimensions: { width: number; height: number },\n) => {\n  const [x1, y1, x2, y2] = bounds;\n  const commonBoundsWidth = x2 - x1;\n  const zoomValueForWidth = viewportDimensions.width / commonBoundsWidth;\n  const commonBoundsHeight = y2 - y1;\n  const zoomValueForHeight = viewportDimensions.height / commonBoundsHeight;\n  const smallestZoomValue = Math.min(zoomValueForWidth, zoomValueForHeight);\n  const zoomAdjustedToSteps =\n    Math.floor(smallestZoomValue / ZOOM_STEP) * ZOOM_STEP;\n  const clampedZoomValueToFitElements = Math.min(\n    Math.max(zoomAdjustedToSteps, ZOOM_STEP),\n    1,\n  );\n  return clampedZoomValueToFitElements as NormalizedZoomValue;\n};\n\nconst zoomToFitElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  zoomToSelection: boolean,\n) => {\n  const nonDeletedElements = getNonDeletedElements(elements);\n  const selectedElements = getSelectedElements(nonDeletedElements, appState);\n\n  const commonBounds =\n    zoomToSelection && selectedElements.length > 0\n      ? getCommonBounds(selectedElements)\n      : getCommonBounds(nonDeletedElements);\n\n  const zoomValue = zoomValueToFitBoundsOnViewport(commonBounds, {\n    width: appState.width,\n    height: appState.height,\n  });\n  const newZoom = getNewZoom(zoomValue, appState.zoom, {\n    left: appState.offsetLeft,\n    top: appState.offsetTop,\n  });\n\n  const [x1, y1, x2, y2] = commonBounds;\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n  return {\n    appState: {\n      ...appState,\n      ...centerScrollOn({\n        scenePoint: { x: centerX, y: centerY },\n        viewportDimensions: {\n          width: appState.width,\n          height: appState.height,\n        },\n        zoom: newZoom,\n      }),\n      zoom: newZoom,\n    },\n    commitToHistory: false,\n  };\n};\n\nexport const actionZoomToSelected = register({\n  name: \"zoomToSelection\",\n  perform: (elements, appState) => zoomToFitElements(elements, appState, true),\n  keyTest: (event) =>\n    event.code === CODES.TWO &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\nexport const actionStartChat = register({\n  name: 'Startchat',\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, viewBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={chat}\n      title={t(\"buttons.startChat\")}\n      aria-label={t(\"buttons.startChat\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n\n})\n\nexport const actionZoomToFit = register({\n  name: \"zoomToFit\",\n  perform: (elements, appState) => zoomToFitElements(elements, appState, false),\n  keyTest: (event) =>\n    event.code === CODES.ONE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n","C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ButtonSelect.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionProperties.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\analytics.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\InitializeApp.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\random.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\mutateElement.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\manager.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\element\\bounds.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\DarkModeToggle.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\keys.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\gesture.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\data\\image.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\gapoints.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionAddToLibrary.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\constants\\urls.ts",["683"],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\errors.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Stats.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\Section.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionStyles.ts",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\bug-issue-template.js",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\components\\ToolButton.tsx",[],"C:\\Users\\PC\\Desktop\\Shareboard\\Shareboard-adishTest\\shareboard\\src\\actions\\actionMenu.tsx",[],{"ruleId":"684","replacedBy":"685"},{"ruleId":"686","replacedBy":"687"},{"ruleId":"684","replacedBy":"688"},{"ruleId":"686","replacedBy":"689"},{"ruleId":"684","replacedBy":"690"},{"ruleId":"686","replacedBy":"691"},{"ruleId":"684","replacedBy":"692"},{"ruleId":"686","replacedBy":"693"},{"ruleId":"684","replacedBy":"694"},{"ruleId":"686","replacedBy":"695"},{"ruleId":"696","severity":1,"message":"697","line":31,"column":28,"nodeType":"698","messageId":"699","endLine":31,"endColumn":34},{"ruleId":"700","severity":1,"message":"697","line":31,"column":28,"nodeType":"698","messageId":"699","endLine":31,"endColumn":34},{"ruleId":"701","severity":1,"message":"702","line":39,"column":9,"nodeType":null,"endLine":39,"endColumn":19,"fix":"703"},{"ruleId":"701","severity":1,"message":"704","line":56,"column":20,"nodeType":null,"endLine":56,"endColumn":42,"fix":"705"},{"ruleId":"701","severity":1,"message":"706","line":278,"column":9,"nodeType":null,"endLine":278,"endColumn":11,"fix":"707"},{"ruleId":"701","severity":1,"message":"706","line":279,"column":1,"nodeType":null,"endLine":279,"endColumn":3,"fix":"708"},{"ruleId":"701","severity":1,"message":"709","line":280,"column":1,"nodeType":null,"endLine":280,"endColumn":13,"fix":"710"},{"ruleId":"701","severity":1,"message":"706","line":281,"column":11,"nodeType":null,"endLine":281,"endColumn":13,"fix":"711"},{"ruleId":"701","severity":1,"message":"709","line":282,"column":1,"nodeType":null,"endLine":282,"endColumn":13,"fix":"712"},{"ruleId":"701","severity":1,"message":"706","line":283,"column":1,"nodeType":null,"endLine":283,"endColumn":3,"fix":"713"},{"ruleId":"701","severity":1,"message":"706","line":284,"column":1,"nodeType":null,"endLine":284,"endColumn":3,"fix":"714"},{"ruleId":"701","severity":1,"message":"706","line":285,"column":9,"nodeType":null,"endLine":285,"endColumn":11,"fix":"715"},{"ruleId":"701","severity":1,"message":"706","line":286,"column":1,"nodeType":null,"endLine":286,"endColumn":3,"fix":"716"},{"ruleId":"701","severity":1,"message":"717","line":356,"column":1,"nodeType":null,"endLine":356,"endColumn":15,"fix":"718"},{"ruleId":"701","severity":1,"message":"719","line":357,"column":1,"nodeType":null,"endLine":357,"endColumn":1,"fix":"720"},{"ruleId":"701","severity":1,"message":"719","line":358,"column":1,"nodeType":null,"endLine":358,"endColumn":1,"fix":"721"},{"ruleId":"701","severity":1,"message":"722","line":489,"column":19,"nodeType":null,"endLine":490,"endColumn":1,"fix":"723"},{"ruleId":"701","severity":1,"message":"724","line":491,"column":1,"nodeType":null,"endLine":491,"endColumn":19,"fix":"725"},{"ruleId":"701","severity":1,"message":"719","line":492,"column":1,"nodeType":null,"endLine":492,"endColumn":1,"fix":"726"},{"ruleId":"701","severity":1,"message":"727","line":493,"column":1,"nodeType":null,"endLine":495,"endColumn":1,"fix":"728"},{"ruleId":"701","severity":1,"message":"706","line":624,"column":5,"nodeType":null,"endLine":624,"endColumn":7,"fix":"729"},{"ruleId":"701","severity":1,"message":"706","line":625,"column":7,"nodeType":null,"endLine":625,"endColumn":9,"fix":"730"},{"ruleId":"701","severity":1,"message":"731","line":626,"column":1,"nodeType":null,"endLine":626,"endColumn":9,"fix":"732"},{"ruleId":"701","severity":1,"message":"706","line":627,"column":7,"nodeType":null,"endLine":627,"endColumn":9,"fix":"733"},{"ruleId":"701","severity":1,"message":"706","line":628,"column":1,"nodeType":null,"endLine":628,"endColumn":3,"fix":"734"},{"ruleId":"701","severity":1,"message":"706","line":629,"column":9,"nodeType":null,"endLine":629,"endColumn":11,"fix":"735"},{"ruleId":"701","severity":1,"message":"706","line":630,"column":1,"nodeType":null,"endLine":630,"endColumn":3,"fix":"736"},{"ruleId":"701","severity":1,"message":"706","line":631,"column":1,"nodeType":null,"endLine":631,"endColumn":3,"fix":"737"},{"ruleId":"701","severity":1,"message":"706","line":632,"column":13,"nodeType":null,"endLine":632,"endColumn":15,"fix":"738"},{"ruleId":"701","severity":1,"message":"739","line":633,"column":1,"nodeType":null,"endLine":633,"endColumn":17,"fix":"740"},{"ruleId":"701","severity":1,"message":"706","line":634,"column":13,"nodeType":null,"endLine":634,"endColumn":15,"fix":"741"},{"ruleId":"701","severity":1,"message":"706","line":635,"column":1,"nodeType":null,"endLine":635,"endColumn":3,"fix":"742"},{"ruleId":"701","severity":1,"message":"706","line":636,"column":9,"nodeType":null,"endLine":636,"endColumn":11,"fix":"743"},{"ruleId":"701","severity":1,"message":"706","line":637,"column":1,"nodeType":null,"endLine":637,"endColumn":3,"fix":"744"},{"ruleId":"701","severity":1,"message":"745","line":638,"column":1,"nodeType":null,"endLine":638,"endColumn":11,"fix":"746"},{"ruleId":"701","severity":1,"message":"706","line":639,"column":7,"nodeType":null,"endLine":639,"endColumn":9,"fix":"747"},{"ruleId":"701","severity":1,"message":"706","line":640,"column":1,"nodeType":null,"endLine":640,"endColumn":3,"fix":"748"},{"ruleId":"701","severity":1,"message":"706","line":641,"column":5,"nodeType":null,"endLine":641,"endColumn":7,"fix":"749"},{"ruleId":"701","severity":1,"message":"706","line":642,"column":1,"nodeType":null,"endLine":642,"endColumn":3,"fix":"750"},{"ruleId":"684","replacedBy":"751"},{"ruleId":"686","replacedBy":"752"},{"ruleId":"684","replacedBy":"753"},{"ruleId":"686","replacedBy":"754"},{"ruleId":"684","replacedBy":"755"},{"ruleId":"686","replacedBy":"756"},{"ruleId":"684","replacedBy":"757"},{"ruleId":"686","replacedBy":"758"},{"ruleId":"684","replacedBy":"759"},{"ruleId":"686","replacedBy":"760"},{"ruleId":"701","severity":1,"message":"761","line":31,"column":24,"nodeType":null,"endLine":31,"endColumn":24,"fix":"762"},{"ruleId":"696","severity":1,"message":"763","line":13,"column":10,"nodeType":"698","messageId":"699","endLine":13,"endColumn":20},{"ruleId":"700","severity":1,"message":"763","line":13,"column":10,"nodeType":"698","messageId":"699","endLine":13,"endColumn":20},{"ruleId":"701","severity":1,"message":"764","line":401,"column":57,"nodeType":null,"endLine":401,"endColumn":58,"fix":"765"},{"ruleId":"701","severity":1,"message":"766","line":656,"column":1,"nodeType":null,"endLine":660,"endColumn":1,"fix":"767"},{"ruleId":"701","severity":1,"message":"768","line":667,"column":22,"nodeType":null,"endLine":669,"endColumn":3,"fix":"769"},{"ruleId":"701","severity":1,"message":"770","line":752,"column":72,"nodeType":null,"endLine":757,"endColumn":1,"fix":"771"},{"ruleId":"701","severity":1,"message":"772","line":895,"column":1,"nodeType":null,"endLine":901,"endColumn":1,"fix":"773"},{"ruleId":"701","severity":1,"message":"774","line":1182,"column":1,"nodeType":null,"endLine":1183,"endColumn":1,"fix":"775"},{"ruleId":"776","severity":1,"message":"777","line":1184,"column":5,"nodeType":"778","messageId":"779","endLine":1184,"endColumn":58,"fix":"780"},{"ruleId":"701","severity":1,"message":"781","line":1184,"column":19,"nodeType":null,"endLine":1184,"endColumn":57,"fix":"782"},{"ruleId":"776","severity":1,"message":"777","line":1185,"column":5,"nodeType":"778","messageId":"779","endLine":1185,"endColumn":58,"fix":"783"},{"ruleId":"701","severity":1,"message":"781","line":1185,"column":19,"nodeType":null,"endLine":1185,"endColumn":57,"fix":"784"},{"ruleId":"701","severity":1,"message":"785","line":1186,"column":69,"nodeType":null,"endLine":1186,"endColumn":69,"fix":"786"},{"ruleId":"701","severity":1,"message":"787","line":1190,"column":20,"nodeType":null,"endLine":1190,"endColumn":24,"fix":"788"},{"ruleId":"701","severity":1,"message":"789","line":1192,"column":23,"nodeType":null,"endLine":1196,"endColumn":7,"fix":"790"},{"ruleId":"701","severity":1,"message":"791","line":1197,"column":23,"nodeType":null,"endLine":1197,"endColumn":40,"fix":"792"},{"ruleId":"776","severity":1,"message":"777","line":1198,"column":7,"nodeType":"778","messageId":"779","endLine":1206,"endColumn":9,"fix":"793"},{"ruleId":"701","severity":1,"message":"794","line":1201,"column":11,"nodeType":null,"endLine":1201,"endColumn":27,"fix":"795"},{"ruleId":"701","severity":1,"message":"796","line":1202,"column":1,"nodeType":null,"endLine":1205,"endColumn":1,"fix":"797"},{"ruleId":"701","severity":1,"message":"774","line":1206,"column":9,"nodeType":null,"endLine":1207,"endColumn":1,"fix":"798"},{"ruleId":"701","severity":1,"message":"799","line":1209,"column":12,"nodeType":null,"endLine":1209,"endColumn":75,"fix":"800"},{"ruleId":"801","severity":1,"message":"802","line":1209,"column":18,"nodeType":"803","messageId":"804","endLine":1209,"endColumn":50,"fix":"805"},{"ruleId":"701","severity":1,"message":"806","line":1210,"column":9,"nodeType":null,"endLine":1210,"endColumn":9,"fix":"807"},{"ruleId":"808","severity":1,"message":"809","line":1211,"column":11,"nodeType":"810","messageId":"811","endLine":1211,"endColumn":22},{"ruleId":"701","severity":1,"message":"785","line":1211,"column":27,"nodeType":null,"endLine":1211,"endColumn":27,"fix":"812"},{"ruleId":"701","severity":1,"message":"813","line":1212,"column":50,"nodeType":null,"endLine":1212,"endColumn":58,"fix":"814"},{"ruleId":"701","severity":1,"message":"815","line":1213,"column":15,"nodeType":null,"endLine":1213,"endColumn":71,"fix":"816"},{"ruleId":"701","severity":1,"message":"719","line":1214,"column":13,"nodeType":null,"endLine":1214,"endColumn":13,"fix":"817"},{"ruleId":"701","severity":1,"message":"818","line":1216,"column":21,"nodeType":null,"endLine":1216,"endColumn":46,"fix":"819"},{"ruleId":"701","severity":1,"message":"820","line":1217,"column":16,"nodeType":null,"endLine":1218,"endColumn":14,"fix":"821"},{"ruleId":"701","severity":1,"message":"785","line":1220,"column":13,"nodeType":null,"endLine":1220,"endColumn":13,"fix":"822"},{"ruleId":"701","severity":1,"message":"823","line":1221,"column":8,"nodeType":null,"endLine":1221,"endColumn":8,"fix":"824"},{"ruleId":"701","severity":1,"message":"825","line":1223,"column":7,"nodeType":null,"endLine":1226,"endColumn":5,"fix":"826"},{"ruleId":"701","severity":1,"message":"827","line":1228,"column":52,"nodeType":null,"endLine":1229,"endColumn":1,"fix":"828"},{"ruleId":"701","severity":1,"message":"829","line":1230,"column":6,"nodeType":null,"endLine":1231,"endColumn":4,"fix":"830"},{"ruleId":"701","severity":1,"message":"785","line":1232,"column":57,"nodeType":null,"endLine":1232,"endColumn":57,"fix":"831"},{"ruleId":"701","severity":1,"message":"832","line":1234,"column":1,"nodeType":null,"endLine":1239,"endColumn":1,"fix":"833"},{"ruleId":"701","severity":1,"message":"719","line":1314,"column":13,"nodeType":null,"endLine":1314,"endColumn":13,"fix":"834"},{"ruleId":"701","severity":1,"message":"719","line":1315,"column":1,"nodeType":null,"endLine":1315,"endColumn":1,"fix":"835"},{"ruleId":"808","severity":1,"message":"809","line":1687,"column":5,"nodeType":"810","messageId":"811","endLine":1687,"endColumn":16},{"ruleId":"701","severity":1,"message":"785","line":1687,"column":28,"nodeType":null,"endLine":1687,"endColumn":28,"fix":"836"},{"ruleId":"701","severity":1,"message":"837","line":1688,"column":44,"nodeType":null,"endLine":1688,"endColumn":46,"fix":"838"},{"ruleId":"701","severity":1,"message":"839","line":1689,"column":9,"nodeType":null,"endLine":1689,"endColumn":55,"fix":"840"},{"ruleId":"841","severity":1,"message":"842","line":1691,"column":9,"nodeType":"843","messageId":"844","endLine":1691,"endColumn":16,"fix":"845"},{"ruleId":"701","severity":1,"message":"785","line":1693,"column":7,"nodeType":null,"endLine":1693,"endColumn":7,"fix":"846"},{"ruleId":"701","severity":1,"message":"719","line":1707,"column":9,"nodeType":null,"endLine":1707,"endColumn":9,"fix":"847"},{"ruleId":"701","severity":1,"message":"719","line":1708,"column":1,"nodeType":null,"endLine":1708,"endColumn":1,"fix":"848"},{"ruleId":"701","severity":1,"message":"719","line":1709,"column":11,"nodeType":null,"endLine":1709,"endColumn":11,"fix":"849"},{"ruleId":"701","severity":1,"message":"719","line":1710,"column":1,"nodeType":null,"endLine":1710,"endColumn":1,"fix":"850"},{"ruleId":"701","severity":1,"message":"719","line":1711,"column":11,"nodeType":null,"endLine":1711,"endColumn":11,"fix":"851"},{"ruleId":"701","severity":1,"message":"719","line":1712,"column":1,"nodeType":null,"endLine":1712,"endColumn":1,"fix":"852"},{"ruleId":"701","severity":1,"message":"719","line":1713,"column":9,"nodeType":null,"endLine":1713,"endColumn":9,"fix":"853"},{"ruleId":"701","severity":1,"message":"854","line":1714,"column":1,"nodeType":null,"endLine":1714,"endColumn":9,"fix":"855"},{"ruleId":"701","severity":1,"message":"719","line":1715,"column":1,"nodeType":null,"endLine":1715,"endColumn":1,"fix":"856"},{"ruleId":"701","severity":1,"message":"719","line":1716,"column":9,"nodeType":null,"endLine":1716,"endColumn":9,"fix":"857"},{"ruleId":"701","severity":1,"message":"854","line":1717,"column":1,"nodeType":null,"endLine":1717,"endColumn":9,"fix":"858"},{"ruleId":"701","severity":1,"message":"719","line":1718,"column":9,"nodeType":null,"endLine":1718,"endColumn":9,"fix":"859"},{"ruleId":"701","severity":1,"message":"854","line":1719,"column":1,"nodeType":null,"endLine":1719,"endColumn":9,"fix":"860"},{"ruleId":"701","severity":1,"message":"719","line":1720,"column":1,"nodeType":null,"endLine":1720,"endColumn":1,"fix":"861"},{"ruleId":"701","severity":1,"message":"719","line":1721,"column":9,"nodeType":null,"endLine":1721,"endColumn":9,"fix":"862"},{"ruleId":"701","severity":1,"message":"719","line":1722,"column":1,"nodeType":null,"endLine":1722,"endColumn":1,"fix":"863"},{"ruleId":"701","severity":1,"message":"719","line":1723,"column":9,"nodeType":null,"endLine":1723,"endColumn":9,"fix":"864"},{"ruleId":"701","severity":1,"message":"854","line":1724,"column":1,"nodeType":null,"endLine":1724,"endColumn":9,"fix":"865"},{"ruleId":"701","severity":1,"message":"719","line":1725,"column":11,"nodeType":null,"endLine":1725,"endColumn":11,"fix":"866"},{"ruleId":"701","severity":1,"message":"867","line":1726,"column":1,"nodeType":null,"endLine":1726,"endColumn":11,"fix":"868"},{"ruleId":"701","severity":1,"message":"719","line":1727,"column":1,"nodeType":null,"endLine":1727,"endColumn":1,"fix":"869"},{"ruleId":"701","severity":1,"message":"719","line":1728,"column":11,"nodeType":null,"endLine":1728,"endColumn":11,"fix":"870"},{"ruleId":"701","severity":1,"message":"719","line":1729,"column":1,"nodeType":null,"endLine":1729,"endColumn":1,"fix":"871"},{"ruleId":"701","severity":1,"message":"719","line":1730,"column":1,"nodeType":null,"endLine":1730,"endColumn":1,"fix":"872"},{"ruleId":"701","severity":1,"message":"706","line":3399,"column":11,"nodeType":null,"endLine":3399,"endColumn":13,"fix":"873"},{"ruleId":"701","severity":1,"message":"706","line":3400,"column":1,"nodeType":null,"endLine":3400,"endColumn":3,"fix":"874"},{"ruleId":"701","severity":1,"message":"706","line":3460,"column":9,"nodeType":null,"endLine":3460,"endColumn":11,"fix":"875"},{"ruleId":"701","severity":1,"message":"706","line":3461,"column":11,"nodeType":null,"endLine":3461,"endColumn":13,"fix":"876"},{"ruleId":"701","severity":1,"message":"709","line":3462,"column":1,"nodeType":null,"endLine":3462,"endColumn":13,"fix":"877"},{"ruleId":"701","severity":1,"message":"706","line":3463,"column":11,"nodeType":null,"endLine":3463,"endColumn":13,"fix":"878"},{"ruleId":"701","severity":1,"message":"706","line":3464,"column":1,"nodeType":null,"endLine":3464,"endColumn":3,"fix":"879"},{"ruleId":"701","severity":1,"message":"706","line":3485,"column":9,"nodeType":null,"endLine":3485,"endColumn":11,"fix":"880"},{"ruleId":"701","severity":1,"message":"706","line":3486,"column":1,"nodeType":null,"endLine":3486,"endColumn":3,"fix":"881"},{"ruleId":"701","severity":1,"message":"719","line":3718,"column":11,"nodeType":null,"endLine":3718,"endColumn":11,"fix":"882"},{"ruleId":"701","severity":1,"message":"719","line":3719,"column":1,"nodeType":null,"endLine":3719,"endColumn":1,"fix":"883"},{"ruleId":"701","severity":1,"message":"884","line":3720,"column":1,"nodeType":null,"endLine":3720,"endColumn":13,"fix":"885"},{"ruleId":"701","severity":1,"message":"719","line":3721,"column":1,"nodeType":null,"endLine":3721,"endColumn":1,"fix":"886"},{"ruleId":"701","severity":1,"message":"719","line":3722,"column":1,"nodeType":null,"endLine":3722,"endColumn":1,"fix":"887"},{"ruleId":"701","severity":1,"message":"719","line":3724,"column":11,"nodeType":null,"endLine":3724,"endColumn":11,"fix":"888"},{"ruleId":"701","severity":1,"message":"719","line":3725,"column":1,"nodeType":null,"endLine":3725,"endColumn":1,"fix":"889"},{"ruleId":"701","severity":1,"message":"884","line":3726,"column":1,"nodeType":null,"endLine":3726,"endColumn":13,"fix":"890"},{"ruleId":"701","severity":1,"message":"719","line":3727,"column":1,"nodeType":null,"endLine":3727,"endColumn":1,"fix":"891"},{"ruleId":"701","severity":1,"message":"719","line":3728,"column":1,"nodeType":null,"endLine":3728,"endColumn":1,"fix":"892"},{"ruleId":"701","severity":1,"message":"761","line":71,"column":19,"nodeType":null,"endLine":71,"endColumn":19,"fix":"893"},{"ruleId":"701","severity":1,"message":"761","line":151,"column":17,"nodeType":null,"endLine":151,"endColumn":17,"fix":"894"},{"ruleId":"684","replacedBy":"895"},{"ruleId":"686","replacedBy":"896"},{"ruleId":"701","severity":1,"message":"897","line":3,"column":14,"nodeType":null,"endLine":3,"endColumn":33,"fix":"898"},{"ruleId":"696","severity":1,"message":"899","line":5,"column":10,"nodeType":"698","messageId":"699","endLine":5,"endColumn":23},{"ruleId":"700","severity":1,"message":"899","line":5,"column":10,"nodeType":"698","messageId":"699","endLine":5,"endColumn":23},{"ruleId":"701","severity":1,"message":"761","line":13,"column":14,"nodeType":null,"endLine":13,"endColumn":14,"fix":"900"},{"ruleId":"701","severity":1,"message":"774","line":22,"column":1,"nodeType":null,"endLine":23,"endColumn":1,"fix":"901"},{"ruleId":"701","severity":1,"message":"902","line":24,"column":39,"nodeType":null,"endLine":24,"endColumn":40,"fix":"903"},{"ruleId":"701","severity":1,"message":"904","line":26,"column":1,"nodeType":null,"endLine":27,"endColumn":4,"fix":"905"},{"ruleId":"701","severity":1,"message":"906","line":50,"column":1,"nodeType":null,"endLine":50,"endColumn":5,"fix":"907"},{"ruleId":"701","severity":1,"message":"908","line":51,"column":39,"nodeType":null,"endLine":53,"endColumn":7,"fix":"909"},{"ruleId":"701","severity":1,"message":"910","line":225,"column":3,"nodeType":null,"endLine":226,"endColumn":3,"fix":"911"},{"ruleId":"701","severity":1,"message":"912","line":227,"column":76,"nodeType":null,"endLine":228,"endColumn":5,"fix":"913"},{"ruleId":"701","severity":1,"message":"914","line":170,"column":34,"nodeType":null,"endLine":170,"endColumn":55,"fix":"915"},{"ruleId":"701","severity":1,"message":"916","line":8,"column":22,"nodeType":null,"endLine":11,"endColumn":2,"fix":"917"},{"ruleId":"696","severity":1,"message":"918","line":1,"column":8,"nodeType":"698","messageId":"699","endLine":1,"endColumn":10},{"ruleId":"700","severity":1,"message":"918","line":1,"column":8,"nodeType":"698","messageId":"699","endLine":1,"endColumn":10},{"ruleId":"701","severity":1,"message":"919","line":6,"column":57,"nodeType":null,"endLine":9,"endColumn":4,"fix":"920"},{"ruleId":"696","severity":1,"message":"921","line":18,"column":10,"nodeType":"698","messageId":"699","endLine":18,"endColumn":22},{"ruleId":"700","severity":1,"message":"921","line":18,"column":10,"nodeType":"698","messageId":"699","endLine":18,"endColumn":22},{"ruleId":"696","severity":1,"message":"922","line":18,"column":24,"nodeType":"698","messageId":"699","endLine":18,"endColumn":39},{"ruleId":"700","severity":1,"message":"922","line":18,"column":24,"nodeType":"698","messageId":"699","endLine":18,"endColumn":39},{"ruleId":"701","severity":1,"message":"785","line":18,"column":63,"nodeType":null,"endLine":18,"endColumn":63,"fix":"923"},{"ruleId":"701","severity":1,"message":"924","line":254,"column":9,"nodeType":null,"endLine":254,"endColumn":20,"fix":"925"},{"ruleId":"701","severity":1,"message":"926","line":272,"column":1,"nodeType":null,"endLine":273,"endColumn":3,"fix":"927"},{"ruleId":"701","severity":1,"message":"928","line":4,"column":11,"nodeType":null,"endLine":4,"endColumn":49,"fix":"929"},"no-native-reassign",["930"],"no-negated-in-lhs",["931"],["930"],["931"],["930"],["931"],["930"],["931"],["930"],["931"],"no-unused-vars","'logout' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","prettier/prettier","Replace `UploadIcon` with `·UploadIcon·`",{"range":"932","text":"933"},"Replace `(e:BaseSyntheticEvent)` with `·(e:·BaseSyntheticEvent)·`",{"range":"934","text":"935"},"Delete `··`",{"range":"936","text":"937"},{"range":"938","text":"937"},"Replace `············` with `··········`",{"range":"939","text":"940"},{"range":"941","text":"937"},{"range":"942","text":"940"},{"range":"943","text":"937"},{"range":"944","text":"937"},{"range":"945","text":"937"},{"range":"946","text":"937"},"Replace `··············` with `················`",{"range":"947","text":"948"},"Insert `··`",{"range":"949","text":"950"},{"range":"951","text":"950"},"Replace `·<UploadIcon·⏎` with `<UploadIcon⏎··`",{"range":"952","text":"953"},"Replace `··················` with `····················`",{"range":"954","text":"955"},{"range":"956","text":"950"},"Replace `················⏎··················/>⏎` with `··················/>`",{"range":"957","text":"958"},{"range":"959","text":"937"},{"range":"960","text":"937"},"Replace `········` with `······`",{"range":"961","text":"962"},{"range":"963","text":"937"},{"range":"964","text":"937"},{"range":"965","text":"937"},{"range":"966","text":"937"},{"range":"967","text":"937"},{"range":"968","text":"937"},"Replace `················` with `··············`",{"range":"969","text":"970"},{"range":"971","text":"937"},{"range":"972","text":"937"},{"range":"973","text":"937"},{"range":"974","text":"937"},"Replace `··········` with `········`",{"range":"975","text":"976"},{"range":"977","text":"937"},{"range":"978","text":"937"},{"range":"979","text":"937"},{"range":"980","text":"937"},["930"],["931"],["930"],["931"],["930"],["931"],["930"],["931"],["930"],["931"],"Insert `·`",{"range":"981","text":"982"},"'APIService' is defined but never used.","Delete `·`",{"range":"983","text":"937"},"Delete `⏎···⏎···⏎⏎`",{"range":"984","text":"937"},"Delete `⏎⏎··`",{"range":"985","text":"937"},"Delete `⏎⏎····⏎····⏎⏎`",{"range":"986","text":"937"},"Replace `⏎····⏎····⏎··}⏎⏎⏎` with `··}`",{"range":"987","text":"988"},"Delete `⏎`",{"range":"989","text":"937"},"no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"990","text":"991"},"Replace `(this.state.uploadedFiles.length·*·10)` with `this.state.uploadedFiles.length·*·10`",{"range":"992","text":"993"},{"range":"994","text":"991"},{"range":"995","text":"993"},"Insert `;`",{"range":"996","text":"997"},"Replace `'')·` with `\"\")`",{"range":"998","text":"999"},"Replace `⏎········\"document\",⏎········e.target.files[0],⏎········e.target.files[0].name⏎······` with `\"document\",·e.target.files[0],·e.target.files[0].name`",{"range":"1000","text":"1001"},"Replace `'roomId',·roomID)` with `\"roomId\",·roomID);`",{"range":"1002","text":"1003"},{"range":"1004","text":"991"},"Replace `'authorization':` with `authorization:⏎···········`",{"range":"1005","text":"1006"},"Replace `⏎········}⏎⏎` with `········},`",{"range":"1007","text":"1008"},{"range":"1009","text":"937"},"Replace `.post(URLS.BASEURL+\"/room/pinDocument\",·formData,·config).then(` with `⏎········.post(URLS.BASEURL·+·\"/room/pinDocument\",·formData,·config)`",{"range":"1010","text":"1011"},"prefer-template","Unexpected string concatenation.","BinaryExpression","unexpectedStringConcatenation",{"range":"1012","text":"1013"},"Insert `.then(`",{"range":"1014","text":"1015"},"no-console","Unexpected console statement.","MemberExpression","unexpected",{"range":"1016","text":"997"},"Replace `index)=>` with `·index)·=>·`",{"range":"1017","text":"1018"},"Replace `(res.data.data.documentName·===·e.target.files[0].name)·` with `·(res.data.data.documentName·===·e.target.files[0].name)`",{"range":"1019","text":"1020"},{"range":"1021","text":"950"},"Replace `·:·res.data.data.filePath` with `:·res.data.data.filePath,`",{"range":"1022","text":"1023"},"Replace `⏎·············` with `;`",{"range":"1024","text":"997"},{"range":"1025","text":"997"},"Insert `·});`",{"range":"1026","text":"1027"},"Delete `··}⏎······)⏎⏎····`",{"range":"1028","text":"937"},"Replace `⏎` with `;`",{"range":"1029","text":"997"},"Delete `⏎···`",{"range":"1030","text":"937"},{"range":"1031","text":"997"},"Replace `⏎⏎··}⏎⏎··⏎` with `··};`",{"range":"1032","text":"1033"},{"range":"1034","text":"950"},{"range":"1035","text":"950"},{"range":"1036","text":"997"},"Replace `=>` with `·=>·`",{"range":"1037","text":"1038"},"Replace `(file.file.name·===·existingTextElement?.text)` with `·(file.file.name·===·existingTextElement?.text)·`",{"range":"1039","text":"1040"},"no-useless-return","Unnecessary return statement.","ReturnStatement","unnecessaryReturn",{"range":"1041","text":"1042"},{"range":"1043","text":"997"},{"range":"1044","text":"950"},{"range":"1045","text":"950"},{"range":"1046","text":"950"},{"range":"1047","text":"950"},{"range":"1048","text":"950"},{"range":"1049","text":"950"},{"range":"1050","text":"950"},"Replace `········` with `··········`",{"range":"1051","text":"940"},{"range":"1052","text":"950"},{"range":"1053","text":"950"},{"range":"1054","text":"940"},{"range":"1055","text":"950"},{"range":"1056","text":"940"},{"range":"1057","text":"950"},{"range":"1058","text":"950"},{"range":"1059","text":"950"},{"range":"1060","text":"950"},{"range":"1061","text":"940"},{"range":"1062","text":"950"},"Replace `··········` with `············`",{"range":"1063","text":"1064"},{"range":"1065","text":"950"},{"range":"1066","text":"950"},{"range":"1067","text":"950"},{"range":"1068","text":"950"},{"range":"1069","text":"937"},{"range":"1070","text":"937"},{"range":"1071","text":"937"},{"range":"1072","text":"937"},{"range":"1073","text":"940"},{"range":"1074","text":"937"},{"range":"1075","text":"937"},{"range":"1076","text":"937"},{"range":"1077","text":"937"},{"range":"1078","text":"950"},{"range":"1079","text":"950"},"Replace `············` with `··············`",{"range":"1080","text":"970"},{"range":"1081","text":"950"},{"range":"1082","text":"950"},{"range":"1083","text":"950"},{"range":"1084","text":"950"},{"range":"1085","text":"970"},{"range":"1086","text":"950"},{"range":"1087","text":"950"},{"range":"1088","text":"982"},{"range":"1089","text":"982"},["930"],["931"],"Replace `{BaseSyntheticEvent` with `·{·BaseSyntheticEvent·`",{"range":"1090","text":"1091"},"'alignElements' is defined but never used.",{"range":"1092","text":"982"},{"range":"1093","text":"937"},"Replace `+` with `⏎········+⏎······`",{"range":"1094","text":"1095"},"Replace `⏎··)` with `··),`",{"range":"1096","text":"1097"},"Delete `····`",{"range":"1098","text":"937"},"Replace `⏎········{ICONS.DEFAULT}⏎······` with `{ICONS.DEFAULT}`",{"range":"1099","text":"1100"},"Delete `··⏎··`",{"range":"1101","text":"937"},"Delete `⏎····`",{"range":"1102","text":"937"},"Replace `horizontalOffset,200)` with `·horizontalOffset,·200);`",{"range":"1103","text":"1104"},"Replace `(⏎··<div·className=\"HelpDialog--header\">⏎··</div>⏎)` with `<div·className=\"HelpDialog--header\"></div>`",{"range":"1105","text":"1106"},"'oc' is defined but never used.","Replace `(⏎····<span>⏎····</span>⏎··)` with `<span></span>`",{"range":"1107","text":"1108"},"'AiFillWechat' is defined but never used.","'AiOutlineWechat' is defined but never used.",{"range":"1109","text":"997"},"Replace `'Startchat'` with `\"Startchat\"`",{"range":"1110","text":"1111"},"Replace `⏎})` with `});`",{"range":"1112","text":"1113"},"Replace `\"https://uat.sharewhiteboard.com:9002\"` with `·\"https://uat.sharewhiteboard.com:9002\",`",{"range":"1114","text":"1115"},"no-global-assign","no-unsafe-negation",[1642,1652]," UploadIcon ",[2293,2315]," (e: BaseSyntheticEvent) ",[8505,8507],"",[8525,8527],[8560,8572],"          ",[8622,8624],[8654,8666],[8696,8698],[8742,8744],[8788,8790],[8793,8795],[10601,10615],"                ",[10636,10636],"  ",[10699,10699],[14853,14867],"<UploadIcon\n  ",[14917,14935],"                    ",[14950,14950],[14995,15033],"                  />",[18673,18675],[18717,18719],[18729,18737],"      ",[18772,18774],[18798,18800],[18816,18818],[18825,18827],[18854,18856],[18936,18938],[18940,18956],"              ",[19004,19006],[19009,19011],[19032,19034],[19036,19038],[19098,19108],"        ",[19123,19125],[19127,19129],[19156,19158],[19165,19167],[1300,1300]," ",[12510,12511],[19670,19680],[19858,19862],[22610,22623],[27112,27129],"  }",[34763,34764],[34823,34826],"let",[34837,34875],"this.state.uploadedFiles.length * 10",[34881,34884],[34895,34933],[35003,35003],";",[35132,35136],"\"\")",[35200,35285],"\"document\", e.target.files[0], e.target.files[0].name",[35310,35327],"\"roomId\", roomID);",[35334,35337],[35451,35467],"authorization:\n           ",[35851,35863],"        },",[35872,35873],[35886,35949],"\n        .post(URLS.BASEURL + \"/room/pinDocument\", formData, config)",[35892,35924],"`${URLS.BASEURL}/room/pinDocument`",[35958,35958],".then(",[35995,35995],[36045,36053]," index) => ",[36069,36125]," (res.data.data.documentName === e.target.files[0].name)",[36140,36140],[36221,36246],": res.data.data.filePath,",[36262,36276],[36303,36303],[36311,36311]," });",[36319,36336],[36440,36441],[36447,36451],[36515,36515],[36522,36532],"  };",[38468,38468],[38479,38479],[49017,49017],[49061,49063]," => ",[49073,49119]," (file.file.name === existingTextElement?.text) ",[49055,49182],"(file)=>{\n      if(file.file.name === existingTextElement?.text){\n        window.open(file.path);\n        \n      }\n    }",[49183,49183],[49514,49514],[49538,49538],[49596,49596],[49606,49606],[49648,49648],[49686,49686],[49714,49714],[49762,49770],[49826,49826],[49886,49886],[49934,49942],[49998,49998],[50042,50050],[50090,50090],[50162,50162],[50172,50172],[50230,50230],[50276,50284],[50326,50326],[50337,50347],"            ",[50382,50382],[50436,50436],[50447,50447],[50483,50483],[103872,103874],[103933,103935],[105569,105571],[105620,105622],[105637,105649],[105692,105694],[105718,105720],[106357,106359],[106381,106383],[113419,113419],[113444,113444],[113483,113495],[113525,113525],[113572,113572],[113643,113643],[113668,113668],[113707,113719],[113749,113749],[113796,113796],[2100,2100],[5887,5887],[40,59]," { BaseSyntheticEvent ",[265,265],[421,422],[494,495],"\n        +\n      ",[514,518],"  ),",[1090,1094],[1133,1164],"{ICONS.DEFAULT}",[6313,6318],[6402,6407],[4990,5011]," horizontalOffset, 200);",[220,271],"<div className=\"HelpDialog--header\"></div>",[198,226],"<span></span>",[921,921],[7416,7427],"\"Startchat\"",[7824,7827],"});",[90,128]," \"https://uat.sharewhiteboard.com:9002\","]