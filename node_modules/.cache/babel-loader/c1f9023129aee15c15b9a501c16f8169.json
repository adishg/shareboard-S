{"ast":null,"code":"import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { selectGroupsForSelectedElements } from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      return false;\n    }\n\n    return {\n      appState: selectGroupsForSelectedElements({ ...appState,\n        editingGroupId: null,\n        selectedElementIds: elements.reduce((map, element) => {\n          if (!element.isDeleted) {\n            map[element.id] = true;\n          }\n\n          return map;\n        }, {})\n      }, getNonDeletedElements(elements)),\n      commitToHistory: true\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.A\n});","map":{"version":3,"sources":["/var/www/html/excalidraw/src/actions/actionSelectAll.ts"],"names":["KEYS","register","selectGroupsForSelectedElements","getNonDeletedElements","actionSelectAll","name","perform","elements","appState","editingLinearElement","editingGroupId","selectedElementIds","reduce","map","element","isDeleted","id","commitToHistory","contextItemLabel","keyTest","event","CTRL_OR_CMD","key","A"],"mappings":"AAAA,SAASA,IAAT,QAAqB,SAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,+BAAT,QAAgD,WAAhD;AACA,SAASC,qBAAT,QAAsC,YAAtC;AAEA,OAAO,MAAMC,eAAe,GAAGH,QAAQ,CAAC;AACtCI,EAAAA,IAAI,EAAE,WADgC;AAEtCC,EAAAA,OAAO,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/B,QAAIA,QAAQ,CAACC,oBAAb,EAAmC;AACjC,aAAO,KAAP;AACD;;AACD,WAAO;AACLD,MAAAA,QAAQ,EAAEN,+BAA+B,CACvC,EACE,GAAGM,QADL;AAEEE,QAAAA,cAAc,EAAE,IAFlB;AAGEC,QAAAA,kBAAkB,EAAEJ,QAAQ,CAACK,MAAT,CAAgB,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACpD,cAAI,CAACA,OAAO,CAACC,SAAb,EAAwB;AACtBF,YAAAA,GAAG,CAACC,OAAO,CAACE,EAAT,CAAH,GAAkB,IAAlB;AACD;;AACD,iBAAOH,GAAP;AACD,SALmB,EAKjB,EALiB;AAHtB,OADuC,EAWvCV,qBAAqB,CAACI,QAAD,CAXkB,CADpC;AAcLU,MAAAA,eAAe,EAAE;AAdZ,KAAP;AAgBD,GAtBqC;AAuBtCC,EAAAA,gBAAgB,EAAE,kBAvBoB;AAwBtCC,EAAAA,OAAO,EAAGC,KAAD,IAAWA,KAAK,CAACpB,IAAI,CAACqB,WAAN,CAAL,IAA2BD,KAAK,CAACE,GAAN,KAActB,IAAI,CAACuB;AAxB5B,CAAD,CAAhC","sourcesContent":["import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { selectGroupsForSelectedElements } from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      return false;\n    }\n    return {\n      appState: selectGroupsForSelectedElements(\n        {\n          ...appState,\n          editingGroupId: null,\n          selectedElementIds: elements.reduce((map, element) => {\n            if (!element.isDeleted) {\n              map[element.id] = true;\n            }\n            return map;\n          }, {} as any),\n        },\n        getNonDeletedElements(elements),\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.A,\n});\n"]},"metadata":{},"sourceType":"module"}