{"ast":null,"code":"import colors from \"./colors\";\nimport { CURSOR_TYPE, DEFAULT_VERSION, FONT_FAMILY, WINDOWS_EMOJI_FALLBACK_FONT } from \"./constants\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { isDarwin } from \"./keys\";\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\nlet mockDateTime = null;\nexport const setDateTimeForTests = dateTime => {\n  mockDateTime = dateTime;\n};\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\nexport const capitalizeString = str => str.charAt(0).toUpperCase() + str.slice(1);\nexport const isToolIcon = target => target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\nexport const isInputLike = target => target instanceof HTMLElement && target.dataset.type === \"wysiwyg\" || target instanceof HTMLBRElement || // newline in wysiwyg\ntarget instanceof HTMLInputElement || target instanceof HTMLTextAreaElement || target instanceof HTMLSelectElement;\nexport const isWritableElement = target => target instanceof HTMLElement && target.dataset.type === \"wysiwyg\" || target instanceof HTMLBRElement || // newline in wysiwyg\ntarget instanceof HTMLTextAreaElement || target instanceof HTMLInputElement && (target.type === \"text\" || target.type === \"number\");\nexport const getFontFamilyString = ({\n  fontFamily\n}) => {\n  return `${FONT_FAMILY[fontFamily]}, ${WINDOWS_EMOJI_FALLBACK_FONT}`;\n};\n/** returns fontSize+fontFamily string for assignment to DOM elements */\n\nexport const getFontString = ({\n  fontSize,\n  fontFamily\n}) => {\n  return `${fontSize}px ${getFontFamilyString({\n    fontFamily\n  })}`;\n}; // https://github.com/grassator/canvas-text-editor/blob/master/lib/FontMetrics.js\n\nexport const measureText = (text, font) => {\n  const line = document.createElement(\"div\");\n  const body = document.body;\n  line.style.position = \"absolute\";\n  line.style.whiteSpace = \"pre\";\n  line.style.font = font;\n  body.appendChild(line);\n  line.innerText = text.split(\"\\n\") // replace empty lines with single space because leading/trailing empty\n  // lines would be stripped from computation\n  .map(x => x || \" \").join(\"\\n\");\n  const width = line.offsetWidth;\n  const height = line.offsetHeight; // Now creating 1px sized item that will be aligned to baseline\n  // to calculate baseline shift\n\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  span.style.overflow = \"hidden\";\n  span.style.width = \"1px\";\n  span.style.height = \"1px\";\n  line.appendChild(span); // Baseline is important for positioning text on canvas\n\n  const baseline = span.offsetTop + span.offsetHeight;\n  document.body.removeChild(line);\n  return {\n    width,\n    height,\n    baseline\n  };\n};\nexport const debounce = (fn, timeout) => {\n  let handle = 0;\n  let lastArgs;\n\n  const ret = (...args) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => fn(...args), timeout);\n  };\n\n  ret.flush = () => {\n    clearTimeout(handle);\n\n    if (lastArgs) {\n      fn(...lastArgs);\n    }\n  };\n\n  ret.cancel = () => {\n    clearTimeout(handle);\n  };\n\n  return ret;\n};\nexport const selectNode = node => {\n  const selection = window.getSelection();\n\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\nexport const removeSelection = () => {\n  const selection = window.getSelection();\n\n  if (selection) {\n    selection.removeAllRanges();\n  }\n};\nexport const distance = (x, y) => Math.abs(x - y);\nexport const resetCursor = () => {\n  document.documentElement.style.cursor = \"\";\n};\nexport const setCursorForShape = shape => {\n  if (shape === \"selection\") {\n    resetCursor();\n  } else {\n    document.documentElement.style.cursor = CURSOR_TYPE.CROSSHAIR;\n  }\n};\nexport const isFullScreen = () => {\n  var _document$fullscreenE;\n\n  return ((_document$fullscreenE = document.fullscreenElement) === null || _document$fullscreenE === void 0 ? void 0 : _document$fullscreenE.nodeName) === \"HTML\";\n};\nexport const allowFullScreen = () => document.documentElement.requestFullscreen();\nexport const exitFullScreen = () => document.exitFullscreen();\nexport const getShortcutKey = shortcut => {\n  shortcut = shortcut.replace(/\\bAlt\\b/i, \"Alt\").replace(/\\bShift\\b/i, \"Shift\").replace(/\\b(Enter|Return)\\b/i, \"Enter\").replace(/\\bDel\\b/i, \"Delete\");\n\n  if (isDarwin) {\n    return shortcut.replace(/\\bCtrlOrCmd\\b/i, \"Cmd\").replace(/\\bAlt\\b/i, \"Option\");\n  }\n\n  return shortcut.replace(/\\bCtrlOrCmd\\b/i, \"Ctrl\");\n};\nexport const viewportCoordsToSceneCoords = ({\n  clientX,\n  clientY\n}, {\n  zoom,\n  offsetLeft,\n  offsetTop,\n  scrollX,\n  scrollY\n}) => {\n  const invScale = 1 / zoom.value;\n  const x = (clientX - zoom.translation.x - offsetLeft) * invScale - scrollX;\n  const y = (clientY - zoom.translation.y - offsetTop) * invScale - scrollY;\n  return {\n    x,\n    y\n  };\n};\nexport const sceneCoordsToViewportCoords = ({\n  sceneX,\n  sceneY\n}, {\n  zoom,\n  offsetLeft,\n  offsetTop,\n  scrollX,\n  scrollY\n}) => {\n  const x = (sceneX + scrollX + offsetLeft) * zoom.value + zoom.translation.x;\n  const y = (sceneY + scrollY + offsetTop) * zoom.value + zoom.translation.y;\n  return {\n    x,\n    y\n  };\n};\nexport const getGlobalCSSVariable = name => getComputedStyle(document.documentElement).getPropertyValue(`--${name}`);\nconst RS_LTR_CHARS = \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" + \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\";\nconst RS_RTL_CHARS = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\";\nconst RE_RTL_CHECK = new RegExp(`^[^${RS_LTR_CHARS}]*[${RS_RTL_CHARS}]`);\n/**\n * Checks whether first directional character is RTL. Meaning whether it starts\n *  with RTL characters, or indeterminate (numbers etc.) characters followed by\n *  RTL.\n * See https://github.com/excalidraw/excalidraw/pull/1722#discussion_r436340171\n */\n\nexport const isRTL = text => RE_RTL_CHECK.test(text);\nexport const tupleToCoors = xyTuple => {\n  const [x, y] = xyTuple;\n  return {\n    x,\n    y\n  };\n};\n/** use as a rejectionHandler to mute filesystem Abort errors */\n\nexport const muteFSAbortError = error => {\n  if ((error === null || error === void 0 ? void 0 : error.name) === \"AbortError\") {\n    return;\n  }\n\n  throw error;\n};\nexport const findIndex = (array, cb, fromIndex = 0) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n\n  fromIndex = Math.min(array.length, Math.max(fromIndex, 0));\n  let index = fromIndex - 1;\n\n  while (++index < array.length) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n};\nexport const findLastIndex = (array, cb, fromIndex = array.length - 1) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n\n  fromIndex = Math.min(array.length - 1, Math.max(fromIndex, 0));\n  let index = fromIndex + 1;\n\n  while (--index > -1) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n};\nexport const isTransparent = color => {\n  const isRGBTransparent = color.length === 5 && color.substr(4, 1) === \"0\";\n  const isRRGGBBTransparent = color.length === 9 && color.substr(7, 2) === \"00\";\n  return isRGBTransparent || isRRGGBBTransparent || color === colors.elementBackground[0];\n};\nexport const resolvablePromise = () => {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n};\n/**\n * @param func handler taking at most single parameter (event).\n */\n\nexport const withBatchedUpdates = func => event => {\n  unstable_batchedUpdates(func, event);\n}; //https://stackoverflow.com/a/9462382/8418\n\nexport const nFormatter = (num, digits) => {\n  const si = [{\n    value: 1,\n    symbol: \"b\"\n  }, {\n    value: 1e3,\n    symbol: \"k\"\n  }, {\n    value: 1e6,\n    symbol: \"M\"\n  }, {\n    value: 1e9,\n    symbol: \"G\"\n  }];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let index;\n\n  for (index = si.length - 1; index > 0; index--) {\n    if (num >= si[index].value) {\n      break;\n    }\n  }\n\n  return (num / si[index].value).toFixed(digits).replace(rx, \"$1\") + si[index].symbol;\n};\nexport const getVersion = () => {\n  var _document$querySelect;\n\n  return ((_document$querySelect = document.querySelector('meta[name=\"version\"]')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.content) || DEFAULT_VERSION;\n};","map":{"version":3,"sources":["/var/www/html/excalidraw/src/utils.ts"],"names":["colors","CURSOR_TYPE","DEFAULT_VERSION","FONT_FAMILY","WINDOWS_EMOJI_FALLBACK_FONT","unstable_batchedUpdates","isDarwin","SVG_NS","mockDateTime","setDateTimeForTests","dateTime","getDateTime","date","Date","year","getFullYear","month","getMonth","padStart","day","getDate","hr","getHours","min","getMinutes","capitalizeString","str","charAt","toUpperCase","slice","isToolIcon","target","HTMLElement","className","includes","isInputLike","dataset","type","HTMLBRElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","isWritableElement","getFontFamilyString","fontFamily","getFontString","fontSize","measureText","text","font","line","document","createElement","body","style","position","whiteSpace","appendChild","innerText","split","map","x","join","width","offsetWidth","height","offsetHeight","span","display","overflow","baseline","offsetTop","removeChild","debounce","fn","timeout","handle","lastArgs","ret","args","clearTimeout","window","setTimeout","flush","cancel","selectNode","node","selection","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","removeSelection","distance","y","Math","abs","resetCursor","documentElement","cursor","setCursorForShape","shape","CROSSHAIR","isFullScreen","fullscreenElement","nodeName","allowFullScreen","requestFullscreen","exitFullScreen","exitFullscreen","getShortcutKey","shortcut","replace","viewportCoordsToSceneCoords","clientX","clientY","zoom","offsetLeft","scrollX","scrollY","invScale","value","translation","sceneCoordsToViewportCoords","sceneX","sceneY","getGlobalCSSVariable","name","getComputedStyle","getPropertyValue","RS_LTR_CHARS","RS_RTL_CHARS","RE_RTL_CHECK","RegExp","isRTL","test","tupleToCoors","xyTuple","muteFSAbortError","error","findIndex","array","cb","fromIndex","length","max","index","findLastIndex","isTransparent","color","isRGBTransparent","substr","isRRGGBBTransparent","elementBackground","resolvablePromise","resolve","reject","promise","Promise","_resolve","_reject","withBatchedUpdates","func","event","nFormatter","num","digits","si","symbol","rx","toFixed","getVersion","querySelector","content"],"mappings":"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","sourcesContent":["import colors from \"./colors\";\nimport {\n  CURSOR_TYPE,\n  DEFAULT_VERSION,\n  FONT_FAMILY,\n  WINDOWS_EMOJI_FALLBACK_FONT,\n} from \"./constants\";\nimport { FontFamily, FontString } from \"./element/types\";\nimport { Zoom } from \"./types\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { isDarwin } from \"./keys\";\n\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nlet mockDateTime: string | null = null;\n\nexport const setDateTimeForTests = (dateTime: string) => {\n  mockDateTime = dateTime;\n};\n\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\n\nexport const capitalizeString = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const isToolIcon = (\n  target: Element | EventTarget | null,\n): target is HTMLElement =>\n  target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\n\nexport const isInputLike = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLSelectElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLInputElement ||\n  target instanceof HTMLTextAreaElement ||\n  target instanceof HTMLSelectElement;\n\nexport const isWritableElement = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLTextAreaElement ||\n  (target instanceof HTMLInputElement &&\n    (target.type === \"text\" || target.type === \"number\"));\n\nexport const getFontFamilyString = ({\n  fontFamily,\n}: {\n  fontFamily: FontFamily;\n}) => {\n  return `${FONT_FAMILY[fontFamily]}, ${WINDOWS_EMOJI_FALLBACK_FONT}`;\n};\n\n/** returns fontSize+fontFamily string for assignment to DOM elements */\nexport const getFontString = ({\n  fontSize,\n  fontFamily,\n}: {\n  fontSize: number;\n  fontFamily: FontFamily;\n}) => {\n  return `${fontSize}px ${getFontFamilyString({ fontFamily })}` as FontString;\n};\n\n// https://github.com/grassator/canvas-text-editor/blob/master/lib/FontMetrics.js\nexport const measureText = (text: string, font: FontString) => {\n  const line = document.createElement(\"div\");\n  const body = document.body;\n  line.style.position = \"absolute\";\n  line.style.whiteSpace = \"pre\";\n  line.style.font = font;\n  body.appendChild(line);\n  line.innerText = text\n    .split(\"\\n\")\n    // replace empty lines with single space because leading/trailing empty\n    // lines would be stripped from computation\n    .map((x) => x || \" \")\n    .join(\"\\n\");\n  const width = line.offsetWidth;\n  const height = line.offsetHeight;\n  // Now creating 1px sized item that will be aligned to baseline\n  // to calculate baseline shift\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  span.style.overflow = \"hidden\";\n  span.style.width = \"1px\";\n  span.style.height = \"1px\";\n  line.appendChild(span);\n  // Baseline is important for positioning text on canvas\n  const baseline = span.offsetTop + span.offsetHeight;\n  document.body.removeChild(line);\n\n  return { width, height, baseline };\n};\n\nexport const debounce = <T extends any[]>(\n  fn: (...args: T) => void,\n  timeout: number,\n) => {\n  let handle = 0;\n  let lastArgs: T;\n  const ret = (...args: T) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => fn(...args), timeout);\n  };\n  ret.flush = () => {\n    clearTimeout(handle);\n    if (lastArgs) {\n      fn(...lastArgs);\n    }\n  };\n  ret.cancel = () => {\n    clearTimeout(handle);\n  };\n  return ret;\n};\n\nexport const selectNode = (node: Element) => {\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\nexport const removeSelection = () => {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n  }\n};\n\nexport const distance = (x: number, y: number) => Math.abs(x - y);\n\nexport const resetCursor = () => {\n  document.documentElement.style.cursor = \"\";\n};\n\nexport const setCursorForShape = (shape: string) => {\n  if (shape === \"selection\") {\n    resetCursor();\n  } else {\n    document.documentElement.style.cursor = CURSOR_TYPE.CROSSHAIR;\n  }\n};\n\nexport const isFullScreen = () =>\n  document.fullscreenElement?.nodeName === \"HTML\";\n\nexport const allowFullScreen = () =>\n  document.documentElement.requestFullscreen();\n\nexport const exitFullScreen = () => document.exitFullscreen();\n\nexport const getShortcutKey = (shortcut: string): string => {\n  shortcut = shortcut\n    .replace(/\\bAlt\\b/i, \"Alt\")\n    .replace(/\\bShift\\b/i, \"Shift\")\n    .replace(/\\b(Enter|Return)\\b/i, \"Enter\")\n    .replace(/\\bDel\\b/i, \"Delete\");\n\n  if (isDarwin) {\n    return shortcut\n      .replace(/\\bCtrlOrCmd\\b/i, \"Cmd\")\n      .replace(/\\bAlt\\b/i, \"Option\");\n  }\n  return shortcut.replace(/\\bCtrlOrCmd\\b/i, \"Ctrl\");\n};\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY }: { clientX: number; clientY: number },\n  {\n    zoom,\n    offsetLeft,\n    offsetTop,\n    scrollX,\n    scrollY,\n  }: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const invScale = 1 / zoom.value;\n  const x = (clientX - zoom.translation.x - offsetLeft) * invScale - scrollX;\n  const y = (clientY - zoom.translation.y - offsetTop) * invScale - scrollY;\n  return { x, y };\n};\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY }: { sceneX: number; sceneY: number },\n  {\n    zoom,\n    offsetLeft,\n    offsetTop,\n    scrollX,\n    scrollY,\n  }: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const x = (sceneX + scrollX + offsetLeft) * zoom.value + zoom.translation.x;\n  const y = (sceneY + scrollY + offsetTop) * zoom.value + zoom.translation.y;\n  return { x, y };\n};\n\nexport const getGlobalCSSVariable = (name: string) =>\n  getComputedStyle(document.documentElement).getPropertyValue(`--${name}`);\n\nconst RS_LTR_CHARS =\n  \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" +\n  \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\";\nconst RS_RTL_CHARS = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\";\nconst RE_RTL_CHECK = new RegExp(`^[^${RS_LTR_CHARS}]*[${RS_RTL_CHARS}]`);\n/**\n * Checks whether first directional character is RTL. Meaning whether it starts\n *  with RTL characters, or indeterminate (numbers etc.) characters followed by\n *  RTL.\n * See https://github.com/excalidraw/excalidraw/pull/1722#discussion_r436340171\n */\nexport const isRTL = (text: string) => RE_RTL_CHECK.test(text);\n\nexport const tupleToCoors = (\n  xyTuple: readonly [number, number],\n): { x: number; y: number } => {\n  const [x, y] = xyTuple;\n  return { x, y };\n};\n\n/** use as a rejectionHandler to mute filesystem Abort errors */\nexport const muteFSAbortError = (error?: Error) => {\n  if (error?.name === \"AbortError\") {\n    return;\n  }\n  throw error;\n};\n\nexport const findIndex = <T>(\n  array: readonly T[],\n  cb: (element: T, index: number, array: readonly T[]) => boolean,\n  fromIndex: number = 0,\n) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n  fromIndex = Math.min(array.length, Math.max(fromIndex, 0));\n  let index = fromIndex - 1;\n  while (++index < array.length) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n\nexport const findLastIndex = <T>(\n  array: readonly T[],\n  cb: (element: T, index: number, array: readonly T[]) => boolean,\n  fromIndex: number = array.length - 1,\n) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n  fromIndex = Math.min(array.length - 1, Math.max(fromIndex, 0));\n  let index = fromIndex + 1;\n  while (--index > -1) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n\nexport const isTransparent = (color: string) => {\n  const isRGBTransparent = color.length === 5 && color.substr(4, 1) === \"0\";\n  const isRRGGBBTransparent = color.length === 9 && color.substr(7, 2) === \"00\";\n  return (\n    isRGBTransparent ||\n    isRRGGBBTransparent ||\n    color === colors.elementBackground[0]\n  );\n};\n\nexport type ResolvablePromise<T> = Promise<T> & {\n  resolve: [T] extends [undefined] ? (value?: T) => void : (value: T) => void;\n  reject: (error: Error) => void;\n};\nexport const resolvablePromise = <T>() => {\n  let resolve!: any;\n  let reject!: any;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  (promise as any).resolve = resolve;\n  (promise as any).reject = reject;\n  return promise as ResolvablePromise<T>;\n};\n\n/**\n * @param func handler taking at most single parameter (event).\n */\nexport const withBatchedUpdates = <\n  TFunction extends ((event: any) => void) | (() => void)\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) =>\n  ((event) => {\n    unstable_batchedUpdates(func as TFunction, event);\n  }) as TFunction;\n\n//https://stackoverflow.com/a/9462382/8418\nexport const nFormatter = (num: number, digits: number): string => {\n  const si = [\n    { value: 1, symbol: \"b\" },\n    { value: 1e3, symbol: \"k\" },\n    { value: 1e6, symbol: \"M\" },\n    { value: 1e9, symbol: \"G\" },\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let index;\n  for (index = si.length - 1; index > 0; index--) {\n    if (num >= si[index].value) {\n      break;\n    }\n  }\n  return (\n    (num / si[index].value).toFixed(digits).replace(rx, \"$1\") + si[index].symbol\n  );\n};\n\nexport const getVersion = () => {\n  return (\n    document.querySelector<HTMLMetaElement>('meta[name=\"version\"]')?.content ||\n    DEFAULT_VERSION\n  );\n};\n"]},"metadata":{},"sourceType":"module"}