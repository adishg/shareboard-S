{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/excalidraw/src/components/Popover.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.scss\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nexport const Popover = ({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false\n}) => {\n  _s();\n\n  const popoverRef = useRef(null); // ensure the popover doesn't overflow the viewport\n\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current) {\n      const element = popoverRef.current;\n      const {\n        x,\n        y,\n        width,\n        height\n      } = element.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n\n      if (x + width > viewportWidth) {\n        element.style.left = `${viewportWidth - width}px`;\n      }\n\n      const viewportHeight = window.innerHeight;\n\n      if (y + height > viewportHeight) {\n        element.style.top = `${viewportHeight - height}px`;\n      }\n    }\n  }, [fitInViewport]);\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = event => {\n        var _popoverRef$current;\n\n        if (!((_popoverRef$current = popoverRef.current) === null || _popoverRef$current === void 0 ? void 0 : _popoverRef$current.contains(event.target))) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popover\",\n    style: {\n      top,\n      left\n    },\n    ref: popoverRef,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Popover, \"ntmOnByVwHsKURuvwePNBakQ1/s=\");\n\n_c = Popover;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popover\");","map":{"version":3,"sources":["/var/www/html/excalidraw/src/components/Popover.tsx"],"names":["React","useLayoutEffect","useRef","useEffect","unstable_batchedUpdates","Popover","children","left","top","onCloseRequest","fitInViewport","popoverRef","current","element","x","y","width","height","getBoundingClientRect","viewportWidth","window","innerWidth","style","viewportHeight","innerHeight","handler","event","contains","target","document","addEventListener","removeEventListener"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,MAAjC,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAO,gBAAP;AACA,SAASC,uBAAT,QAAwC,WAAxC;AAUA,OAAO,MAAMC,OAAO,GAAG,CAAC;AACtBC,EAAAA,QADsB;AAEtBC,EAAAA,IAFsB;AAGtBC,EAAAA,GAHsB;AAItBC,EAAAA,cAJsB;AAKtBC,EAAAA,aAAa,GAAG;AALM,CAAD,KAMV;AAAA;;AACX,QAAMC,UAAU,GAAGT,MAAM,CAAiB,IAAjB,CAAzB,CADW,CAGX;;AACAD,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIS,aAAa,IAAIC,UAAU,CAACC,OAAhC,EAAyC;AACvC,YAAMC,OAAO,GAAGF,UAAU,CAACC,OAA3B;AACA,YAAM;AAAEE,QAAAA,CAAF;AAAKC,QAAAA,CAAL;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAA0BJ,OAAO,CAACK,qBAAR,EAAhC;AAEA,YAAMC,aAAa,GAAGC,MAAM,CAACC,UAA7B;;AACA,UAAIP,CAAC,GAAGE,KAAJ,GAAYG,aAAhB,EAA+B;AAC7BN,QAAAA,OAAO,CAACS,KAAR,CAAcf,IAAd,GAAsB,GAAEY,aAAa,GAAGH,KAAM,IAA9C;AACD;;AACD,YAAMO,cAAc,GAAGH,MAAM,CAACI,WAA9B;;AACA,UAAIT,CAAC,GAAGE,MAAJ,GAAaM,cAAjB,EAAiC;AAC/BV,QAAAA,OAAO,CAACS,KAAR,CAAcd,GAAd,GAAqB,GAAEe,cAAc,GAAGN,MAAO,IAA/C;AACD;AACF;AACF,GAdc,EAcZ,CAACP,aAAD,CAdY,CAAf;AAgBAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,cAAJ,EAAoB;AAClB,YAAMgB,OAAO,GAAIC,KAAD,IAAyB;AAAA;;AACvC,YAAI,yBAACf,UAAU,CAACC,OAAZ,wDAAC,oBAAoBe,QAApB,CAA6BD,KAAK,CAACE,MAAnC,CAAD,CAAJ,EAAyD;AACvDxB,UAAAA,uBAAuB,CAAC,MAAMK,cAAc,CAACiB,KAAD,CAArB,CAAvB;AACD;AACF,OAJD;;AAKAG,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,EAAyCL,OAAzC,EAAkD,KAAlD;AACA,aAAO,MAAMI,QAAQ,CAACE,mBAAT,CAA6B,aAA7B,EAA4CN,OAA5C,EAAqD,KAArD,CAAb;AACD;AACF,GAVQ,EAUN,CAAChB,cAAD,CAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAED,MAAAA,GAAF;AAAOD,MAAAA;AAAP,KAAhC;AAA+C,IAAA,GAAG,EAAEI,UAApD;AAAA,cACGL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3CM;;GAAMD,O;;KAAAA,O","sourcesContent":["import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.scss\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\ntype Props = {\n  top?: number;\n  left?: number;\n  children?: React.ReactNode;\n  onCloseRequest?(event: PointerEvent): void;\n  fitInViewport?: boolean;\n};\n\nexport const Popover = ({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false,\n}: Props) => {\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  // ensure the popover doesn't overflow the viewport\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current) {\n      const element = popoverRef.current;\n      const { x, y, width, height } = element.getBoundingClientRect();\n\n      const viewportWidth = window.innerWidth;\n      if (x + width > viewportWidth) {\n        element.style.left = `${viewportWidth - width}px`;\n      }\n      const viewportHeight = window.innerHeight;\n      if (y + height > viewportHeight) {\n        element.style.top = `${viewportHeight - height}px`;\n      }\n    }\n  }, [fitInViewport]);\n\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = (event: PointerEvent) => {\n        if (!popoverRef.current?.contains(event.target as Node)) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n\n  return (\n    <div className=\"popover\" style={{ top, left }} ref={popoverRef}>\n      {children}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}