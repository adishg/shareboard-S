{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/excalidraw/src/components/ToolButton.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./ToolIcon.scss\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nconst DEFAULT_SIZE = \"m\";\nexport const ToolButton = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: clsx(\"ToolIcon_type_button\", sizeCn, props.className, props.visible && !props.hidden ? \"ToolIcon_type_button--show\" : \"ToolIcon_type_button--hide\", {\n        ToolIcon: !props.hidden,\n        \"ToolIcon--selected\": props.selected\n      }),\n      hidden: props.hidden,\n      title: props.title,\n      \"aria-label\": props[\"aria-label\"],\n      type: \"button\",\n      onClick: props.onClick,\n      ref: innerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ToolIcon__icon\",\n        \"aria-hidden\": \"true\",\n        children: [props.icon || props.label, props.keyBindingLabel && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ToolIcon__keybinding\",\n          children: props.keyBindingLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), props.showAriaLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ToolIcon__label\",\n        children: props[\"aria-label\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: clsx(\"ToolIcon\", props.className),\n    title: props.title,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: `ToolIcon_type_radio ${sizeCn}`,\n      type: \"radio\",\n      name: props.name,\n      \"aria-label\": props[\"aria-label\"],\n      \"aria-keyshortcuts\": props[\"aria-keyshortcuts\"],\n      \"data-testid\": props[\"data-testid\"],\n      id: props.id,\n      onChange: props.onChange,\n      checked: props.checked,\n      ref: innerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ToolIcon__icon\",\n      children: [props.icon, props.keyBindingLabel && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ToolIcon__keybinding\",\n        children: props.keyBindingLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}, \"OPxP59DK1gWkVPYJnsCXME6Bclo=\", false, function () {\n  return [React.useImperativeHandle];\n}));\n_c2 = ToolButton;\nToolButton.defaultProps = {\n  visible: true,\n  className: \"\"\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToolButton$React.forwardRef\");\n$RefreshReg$(_c2, \"ToolButton\");","map":{"version":3,"sources":["/var/www/html/excalidraw/src/components/ToolButton.tsx"],"names":["React","clsx","DEFAULT_SIZE","ToolButton","forwardRef","props","ref","innerRef","useRef","useImperativeHandle","current","sizeCn","size","type","className","visible","hidden","ToolIcon","selected","title","onClick","icon","label","keyBindingLabel","showAriaLabel","children","name","id","onChange","checked","defaultProps"],"mappings":"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","sourcesContent":["import \"./ToolIcon.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype ToolIconSize = \"s\" | \"m\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolIconSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  hidden?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  className?: string;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n\n      checked: boolean;\n      onChange?(): void;\n    });\n\nconst DEFAULT_SIZE: ToolIconSize = \"m\";\n\nexport const ToolButton = React.forwardRef((props: ToolButtonProps, ref) => {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return (\n      <button\n        className={clsx(\n          \"ToolIcon_type_button\",\n          sizeCn,\n          props.className,\n          props.visible && !props.hidden\n            ? \"ToolIcon_type_button--show\"\n            : \"ToolIcon_type_button--hide\",\n          {\n            ToolIcon: !props.hidden,\n            \"ToolIcon--selected\": props.selected,\n          },\n        )}\n        hidden={props.hidden}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type=\"button\"\n        onClick={props.onClick}\n        ref={innerRef}\n      >\n        <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n          {props.icon || props.label}\n          {props.keyBindingLabel && (\n            <span className=\"ToolIcon__keybinding\">\n              {props.keyBindingLabel}\n            </span>\n          )}\n        </div>\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">{props[\"aria-label\"]}</div>\n        )}\n        {props.children}\n      </button>\n    );\n  }\n\n  return (\n    <label className={clsx(\"ToolIcon\", props.className)} title={props.title}>\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        data-testid={props[\"data-testid\"]}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n\nToolButton.defaultProps = {\n  visible: true,\n  className: \"\",\n};\n"]},"metadata":{},"sourceType":"module"}