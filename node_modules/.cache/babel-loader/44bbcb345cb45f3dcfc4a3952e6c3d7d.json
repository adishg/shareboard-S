{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/excalidraw/src/components/ErrorDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { t } from \"../i18n\";\nimport { Dialog } from \"./Dialog\";\nexport const ErrorDialog = ({\n  message,\n  onClose\n}) => {\n  _s();\n\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: modalIsShown && /*#__PURE__*/_jsxDEV(Dialog, {\n      small: true,\n      onCloseRequest: handleClose,\n      title: t(\"errorDialog.title\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message.split(\"\\n\").map(line => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ErrorDialog, \"gwu0gM94KgMM0SiCeHhsXBNcgQk=\");\n\n_c = ErrorDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorDialog\");","map":{"version":3,"sources":["/var/www/html/excalidraw/src/components/ErrorDialog.tsx"],"names":["React","useState","t","Dialog","ErrorDialog","message","onClose","modalIsShown","setModalIsShown","handleClose","useCallback","split","map","line"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,CAAT,QAAkB,SAAlB;AAEA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAC1BC,EAAAA,OAD0B;AAE1BC,EAAAA;AAF0B,CAAD,KAMrB;AAAA;;AACJ,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,CAAC,CAACI,OAAH,CAAhD;AAEA,QAAMI,WAAW,GAAGT,KAAK,CAACU,WAAN,CAAkB,MAAM;AAC1CF,IAAAA,eAAe,CAAC,KAAD,CAAf;;AAEA,QAAIF,OAAJ,EAAa;AACXA,MAAAA,OAAO;AACR;AACF,GANmB,EAMjB,CAACA,OAAD,CANiB,CAApB;AAQA,sBACE;AAAA,cACGC,YAAY,iBACX,QAAC,MAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,cAAc,EAAEE,WAFlB;AAGE,MAAA,KAAK,EAAEP,CAAC,CAAC,mBAAD,CAHV;AAAA,6BAKE;AAAA,kBACGG,OAAO,CAACM,KAAR,CAAc,IAAd,EAAoBC,GAApB,CAAyBC,IAAD,iBACvB;AAAA,qBACGA,IADH,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAoBD,CArCM;;GAAMT,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\n\nexport const ErrorDialog = ({\n  message,\n  onClose,\n}: {\n  message: string;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          small\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div>\n            {message.split(\"\\n\").map((line) => (\n              <>\n                {line}\n                <br />\n              </>\n            ))}\n          </div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}