{"ast":null,"code":"import { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nconst shortcutMap = {\n  cut: [getShortcutKey(\"CtrlOrCmd+X\")],\n  copy: [getShortcutKey(\"CtrlOrCmd+C\")],\n  paste: [getShortcutKey(\"CtrlOrCmd+V\")],\n  copyStyles: [getShortcutKey(\"CtrlOrCmd+Alt+C\")],\n  pasteStyles: [getShortcutKey(\"CtrlOrCmd+Alt+V\")],\n  selectAll: [getShortcutKey(\"CtrlOrCmd+A\")],\n  delete: [getShortcutKey(\"Del\")],\n  duplicateSelection: [getShortcutKey(\"CtrlOrCmd+D\"), getShortcutKey(`Alt+${t(\"shortcutsDialog.drag\")}`)],\n  sendBackward: [getShortcutKey(\"CtrlOrCmd+[\")],\n  bringForward: [getShortcutKey(\"CtrlOrCmd+]\")],\n  sendToBack: [isDarwin ? getShortcutKey(\"CtrlOrCmd+Alt+[\") : getShortcutKey(\"CtrlOrCmd+Shift+[\")],\n  bringToFront: [isDarwin ? getShortcutKey(\"CtrlOrCmd+Alt+]\") : getShortcutKey(\"CtrlOrCmd+Shift+]\")],\n  copyAsPng: [getShortcutKey(\"Shift+Alt+C\")],\n  copyAsSvg: [],\n  group: [getShortcutKey(\"CtrlOrCmd+G\")],\n  ungroup: [getShortcutKey(\"CtrlOrCmd+Shift+G\")],\n  gridMode: [getShortcutKey(\"CtrlOrCmd+'\")],\n  zenMode: [getShortcutKey(\"Alt+Z\")],\n  stats: [],\n  addToLibrary: []\n};\nexport const getShortcutFromShortcutName = name => {\n  const shortcuts = shortcutMap[name]; // if multiple shortcuts availiable, take the first one\n\n  return shortcuts && shortcuts.length > 0 ? shortcuts[0] : \"\";\n};","map":{"version":3,"sources":["/var/www/html/excalidraw/src/actions/shortcuts.ts"],"names":["t","isDarwin","getShortcutKey","shortcutMap","cut","copy","paste","copyStyles","pasteStyles","selectAll","delete","duplicateSelection","sendBackward","bringForward","sendToBack","bringToFront","copyAsPng","copyAsSvg","group","ungroup","gridMode","zenMode","stats","addToLibrary","getShortcutFromShortcutName","name","shortcuts","length"],"mappings":"AAAA,SAASA,CAAT,QAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,cAAT,QAA+B,UAA/B;AAwBA,MAAMC,WAA2C,GAAG;AAClDC,EAAAA,GAAG,EAAE,CAACF,cAAc,CAAC,aAAD,CAAf,CAD6C;AAElDG,EAAAA,IAAI,EAAE,CAACH,cAAc,CAAC,aAAD,CAAf,CAF4C;AAGlDI,EAAAA,KAAK,EAAE,CAACJ,cAAc,CAAC,aAAD,CAAf,CAH2C;AAIlDK,EAAAA,UAAU,EAAE,CAACL,cAAc,CAAC,iBAAD,CAAf,CAJsC;AAKlDM,EAAAA,WAAW,EAAE,CAACN,cAAc,CAAC,iBAAD,CAAf,CALqC;AAMlDO,EAAAA,SAAS,EAAE,CAACP,cAAc,CAAC,aAAD,CAAf,CANuC;AAOlDQ,EAAAA,MAAM,EAAE,CAACR,cAAc,CAAC,KAAD,CAAf,CAP0C;AAQlDS,EAAAA,kBAAkB,EAAE,CAClBT,cAAc,CAAC,aAAD,CADI,EAElBA,cAAc,CAAE,OAAMF,CAAC,CAAC,sBAAD,CAAyB,EAAlC,CAFI,CAR8B;AAYlDY,EAAAA,YAAY,EAAE,CAACV,cAAc,CAAC,aAAD,CAAf,CAZoC;AAalDW,EAAAA,YAAY,EAAE,CAACX,cAAc,CAAC,aAAD,CAAf,CAboC;AAclDY,EAAAA,UAAU,EAAE,CACVb,QAAQ,GACJC,cAAc,CAAC,iBAAD,CADV,GAEJA,cAAc,CAAC,mBAAD,CAHR,CAdsC;AAmBlDa,EAAAA,YAAY,EAAE,CACZd,QAAQ,GACJC,cAAc,CAAC,iBAAD,CADV,GAEJA,cAAc,CAAC,mBAAD,CAHN,CAnBoC;AAwBlDc,EAAAA,SAAS,EAAE,CAACd,cAAc,CAAC,aAAD,CAAf,CAxBuC;AAyBlDe,EAAAA,SAAS,EAAE,EAzBuC;AA0BlDC,EAAAA,KAAK,EAAE,CAAChB,cAAc,CAAC,aAAD,CAAf,CA1B2C;AA2BlDiB,EAAAA,OAAO,EAAE,CAACjB,cAAc,CAAC,mBAAD,CAAf,CA3ByC;AA4BlDkB,EAAAA,QAAQ,EAAE,CAAClB,cAAc,CAAC,aAAD,CAAf,CA5BwC;AA6BlDmB,EAAAA,OAAO,EAAE,CAACnB,cAAc,CAAC,OAAD,CAAf,CA7ByC;AA8BlDoB,EAAAA,KAAK,EAAE,EA9B2C;AA+BlDC,EAAAA,YAAY,EAAE;AA/BoC,CAApD;AAkCA,OAAO,MAAMC,2BAA2B,GAAIC,IAAD,IAAwB;AACjE,QAAMC,SAAS,GAAGvB,WAAW,CAACsB,IAAD,CAA7B,CADiE,CAEjE;;AACA,SAAOC,SAAS,IAAIA,SAAS,CAACC,MAAV,GAAmB,CAAhC,GAAoCD,SAAS,CAAC,CAAD,CAA7C,GAAmD,EAA1D;AACD,CAJM","sourcesContent":["import { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\n\nexport type ShortcutName =\n  | \"cut\"\n  | \"copy\"\n  | \"paste\"\n  | \"copyStyles\"\n  | \"pasteStyles\"\n  | \"selectAll\"\n  | \"delete\"\n  | \"duplicateSelection\"\n  | \"sendBackward\"\n  | \"bringForward\"\n  | \"sendToBack\"\n  | \"bringToFront\"\n  | \"copyAsPng\"\n  | \"copyAsSvg\"\n  | \"group\"\n  | \"ungroup\"\n  | \"gridMode\"\n  | \"zenMode\"\n  | \"stats\"\n  | \"addToLibrary\";\n\nconst shortcutMap: Record<ShortcutName, string[]> = {\n  cut: [getShortcutKey(\"CtrlOrCmd+X\")],\n  copy: [getShortcutKey(\"CtrlOrCmd+C\")],\n  paste: [getShortcutKey(\"CtrlOrCmd+V\")],\n  copyStyles: [getShortcutKey(\"CtrlOrCmd+Alt+C\")],\n  pasteStyles: [getShortcutKey(\"CtrlOrCmd+Alt+V\")],\n  selectAll: [getShortcutKey(\"CtrlOrCmd+A\")],\n  delete: [getShortcutKey(\"Del\")],\n  duplicateSelection: [\n    getShortcutKey(\"CtrlOrCmd+D\"),\n    getShortcutKey(`Alt+${t(\"shortcutsDialog.drag\")}`),\n  ],\n  sendBackward: [getShortcutKey(\"CtrlOrCmd+[\")],\n  bringForward: [getShortcutKey(\"CtrlOrCmd+]\")],\n  sendToBack: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n  ],\n  bringToFront: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n  ],\n  copyAsPng: [getShortcutKey(\"Shift+Alt+C\")],\n  copyAsSvg: [],\n  group: [getShortcutKey(\"CtrlOrCmd+G\")],\n  ungroup: [getShortcutKey(\"CtrlOrCmd+Shift+G\")],\n  gridMode: [getShortcutKey(\"CtrlOrCmd+'\")],\n  zenMode: [getShortcutKey(\"Alt+Z\")],\n  stats: [],\n  addToLibrary: [],\n};\n\nexport const getShortcutFromShortcutName = (name: ShortcutName) => {\n  const shortcuts = shortcutMap[name];\n  // if multiple shortcuts availiable, take the first one\n  return shortcuts && shortcuts.length > 0 ? shortcuts[0] : \"\";\n};\n"]},"metadata":{},"sourceType":"module"}