{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getGlobalObject, logger } from '@sentry/utils'; // See https://github.com/angular/angular.js/blob/v1.4.7/src/minErr.js\n\nvar angularPattern = /^\\[((?:[$a-zA-Z0-9]+:)?(?:[$a-zA-Z0-9]+))\\] (.*?)\\n?(\\S+)$/;\n/**\n * AngularJS integration\n *\n * Provides an $exceptionHandler for AngularJS\n */\n\nvar Angular =\n/** @class */\nfunction () {\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function Angular(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    this.name = Angular.id;\n    logger.log('You are still using the Angular integration, consider moving to @sentry/angular'); // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n\n    this._angular = options.angular || getGlobalObject().angular;\n\n    if (!this._angular) {\n      logger.error('AngularIntegration is missing an Angular instance');\n      return;\n    } // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n\n    this._module = this._angular.module(Angular.moduleName, []);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  Angular.prototype.setupOnce = function (_, getCurrentHub) {\n    var _this = this;\n\n    if (!this._module) {\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub; // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n    this._module.config(['$provide', // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function ($provide) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      $provide.decorator('$exceptionHandler', ['$delegate', _this._$exceptionHandlerDecorator.bind(_this)]);\n    }]);\n  };\n  /**\n   * Angular's exceptionHandler for Sentry integration\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  Angular.prototype._$exceptionHandlerDecorator = function ($delegate) {\n    var _this = this;\n\n    return function (exception, cause) {\n      var hub = _this._getCurrentHub && _this._getCurrentHub();\n\n      if (hub && hub.getIntegration(Angular)) {\n        hub.withScope(function (scope) {\n          if (cause) {\n            scope.setExtra('cause', cause);\n          }\n\n          scope.addEventProcessor(function (event) {\n            var ex = event.exception && event.exception.values && event.exception.values[0];\n\n            if (ex) {\n              var matches = angularPattern.exec(ex.value || '');\n\n              if (matches) {\n                // This type now becomes something like: $rootScope:inprog\n                ex.type = matches[1];\n                ex.value = matches[2];\n                event.message = ex.type + \": \" + ex.value; // auto set a new tag specifically for the angular error url\n\n                event.extra = __assign(__assign({}, event.extra), {\n                  angularDocs: matches[3].substr(0, 250)\n                });\n              }\n            }\n\n            return event;\n          });\n          hub.captureException(exception);\n        });\n      }\n\n      $delegate(exception, cause);\n    };\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Angular.id = 'AngularJS';\n  /**\n   * moduleName used in Angular's DI resolution algorithm\n   */\n\n  Angular.moduleName = 'ngSentry';\n  return Angular;\n}();\n\nexport { Angular };","map":{"version":3,"sources":["../src/angular.ts"],"names":[],"mappings":"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","sourcesContent":["import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\n// See https://github.com/angular/angular.js/blob/v1.4.7/src/minErr.js\nconst angularPattern = /^\\[((?:[$a-zA-Z0-9]+:)?(?:[$a-zA-Z0-9]+))\\] (.*?)\\n?(\\S+)$/;\n\n/**\n * AngularJS integration\n *\n * Provides an $exceptionHandler for AngularJS\n */\nexport class Angular implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'AngularJS';\n\n  /**\n   * moduleName used in Angular's DI resolution algorithm\n   */\n  public static moduleName: string = 'ngSentry';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Angular.id;\n\n  /**\n   * Angular's instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly _angular: any;\n\n  /**\n   * ngSentry module instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly _module: any;\n\n  /**\n   * Returns current hub.\n   */\n  private _getCurrentHub?: () => Hub;\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public constructor(options: { angular?: any } = {}) {\n    logger.log('You are still using the Angular integration, consider moving to @sentry/angular');\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    this._angular = options.angular || getGlobalObject<any>().angular;\n\n    if (!this._angular) {\n      logger.error('AngularIntegration is missing an Angular instance');\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this._module = this._angular.module(Angular.moduleName, []);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!this._module) {\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this._module.config([\n      '$provide',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ($provide: any): void => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        $provide.decorator('$exceptionHandler', ['$delegate', this._$exceptionHandlerDecorator.bind(this)]);\n      },\n    ]);\n  }\n\n  /**\n   * Angular's exceptionHandler for Sentry integration\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _$exceptionHandlerDecorator($delegate: any): any {\n    return (exception: Error, cause?: string): void => {\n      const hub = this._getCurrentHub && this._getCurrentHub();\n\n      if (hub && hub.getIntegration(Angular)) {\n        hub.withScope(scope => {\n          if (cause) {\n            scope.setExtra('cause', cause);\n          }\n\n          scope.addEventProcessor((event: Event) => {\n            const ex = event.exception && event.exception.values && event.exception.values[0];\n\n            if (ex) {\n              const matches = angularPattern.exec(ex.value || '');\n\n              if (matches) {\n                // This type now becomes something like: $rootScope:inprog\n                ex.type = matches[1];\n                ex.value = matches[2];\n                event.message = `${ex.type}: ${ex.value}`;\n                // auto set a new tag specifically for the angular error url\n                event.extra = {\n                  ...event.extra,\n                  angularDocs: matches[3].substr(0, 250),\n                };\n              }\n            }\n\n            return event;\n          });\n\n          hub.captureException(exception);\n        });\n      }\n      $delegate(exception, cause);\n    };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}