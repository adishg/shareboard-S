{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/excalidraw/src/components/Modal.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./Modal.scss\";\nimport React, { useState, useLayoutEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport clsx from \"clsx\";\nimport { KEYS } from \"../keys\";\nexport const Modal = props => {\n  _s();\n\n  const modalRoot = useBodyRoot();\n\n  if (!modalRoot) {\n    return null;\n  }\n\n  const handleKeydown = event => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      props.onCloseRequest();\n    }\n  };\n\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(\"Modal\", props.className),\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    onKeyDown: handleKeydown,\n    \"aria-labelledby\": props.labelledBy,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Modal__background\",\n      onClick: props.onCloseRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Modal__content\",\n      style: {\n        \"--max-width\": `${props.maxWidth}px`\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), modalRoot);\n};\n\n_s(Modal, \"qWSet8jX9nV8OE9XTb5IiYD7gy8=\", false, function () {\n  return [useBodyRoot];\n});\n\n_c = Modal;\n\nconst useBodyRoot = () => {\n  _s2();\n\n  const [div, setDiv] = useState(null);\n  useLayoutEffect(() => {\n    var _document$querySelect;\n\n    const isDarkTheme = !!((_document$querySelect = document.querySelector(\".excalidraw\")) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.classList.contains(\"Appearance_dark\"));\n    const div = document.createElement(\"div\");\n    div.classList.add(\"excalidraw\");\n\n    if (isDarkTheme) {\n      div.classList.add(\"Appearance_dark\");\n      div.classList.add(\"Appearance_dark-background-none\");\n    }\n\n    document.body.appendChild(div);\n    setDiv(div);\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, []);\n  return div;\n};\n\n_s2(useBodyRoot, \"RxsEN3QRt45HRvhHVCK6K+WNTwI=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/var/www/html/excalidraw/src/components/Modal.tsx"],"names":["React","useState","useLayoutEffect","createPortal","clsx","KEYS","Modal","props","modalRoot","useBodyRoot","handleKeydown","event","key","ESCAPE","nativeEvent","stopImmediatePropagation","onCloseRequest","className","labelledBy","maxWidth","children","div","setDiv","isDarkTheme","document","querySelector","classList","contains","createElement","add","body","appendChild","removeChild"],"mappings":";;;;;;AAAA,OAAO,cAAP;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,eAA1B,QAAiD,OAAjD;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAMf;AAAA;;AACJ,QAAMC,SAAS,GAAGC,WAAW,EAA7B;;AAEA,MAAI,CAACD,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,QAAME,aAAa,GAAIC,KAAD,IAAgC;AACpD,QAAIA,KAAK,CAACC,GAAN,KAAcP,IAAI,CAACQ,MAAvB,EAA+B;AAC7BF,MAAAA,KAAK,CAACG,WAAN,CAAkBC,wBAAlB;AACAR,MAAAA,KAAK,CAACS,cAAN;AACD;AACF,GALD;;AAOA,sBAAOb,YAAY,eACjB;AACE,IAAA,SAAS,EAAEC,IAAI,CAAC,OAAD,EAAUG,KAAK,CAACU,SAAhB,CADjB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,kBAAW,MAHb;AAIE,IAAA,SAAS,EAAEP,aAJb;AAKE,uBAAiBH,KAAK,CAACW,UALzB;AAAA,4BAOE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,OAAO,EAAEX,KAAK,CAACS;AAAlD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,KAAK,EAAE;AAAE,uBAAgB,GAAET,KAAK,CAACY,QAAS;AAAnC,OAFT;AAAA,gBAIGZ,KAAK,CAACa;AAJT;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB,EAgBjBZ,SAhBiB,CAAnB;AAkBD,CAtCM;;GAAMF,K;UAOOG,W;;;KAPPH,K;;AAwCb,MAAMG,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBrB,QAAQ,CAAwB,IAAxB,CAA9B;AAEAC,EAAAA,eAAe,CAAC,MAAM;AAAA;;AACpB,UAAMqB,WAAW,GAAG,CAAC,2BAACC,QAAQ,CAC3BC,aADmB,CACL,aADK,CAAD,0DAAC,sBAElBC,SAFkB,CAERC,QAFQ,CAEC,iBAFD,CAAD,CAArB;AAGA,UAAMN,GAAG,GAAGG,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAZ;AAEAP,IAAAA,GAAG,CAACK,SAAJ,CAAcG,GAAd,CAAkB,YAAlB;;AAEA,QAAIN,WAAJ,EAAiB;AACfF,MAAAA,GAAG,CAACK,SAAJ,CAAcG,GAAd,CAAkB,iBAAlB;AACAR,MAAAA,GAAG,CAACK,SAAJ,CAAcG,GAAd,CAAkB,iCAAlB;AACD;;AACDL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BV,GAA1B;AAEAC,IAAAA,MAAM,CAACD,GAAD,CAAN;AAEA,WAAO,MAAM;AACXG,MAAAA,QAAQ,CAACM,IAAT,CAAcE,WAAd,CAA0BX,GAA1B;AACD,KAFD;AAGD,GAnBc,EAmBZ,EAnBY,CAAf;AAqBA,SAAOA,GAAP;AACD,CAzBD;;IAAMZ,W","sourcesContent":["import \"./Modal.scss\";\n\nimport React, { useState, useLayoutEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport clsx from \"clsx\";\nimport { KEYS } from \"../keys\";\n\nexport const Modal = (props: {\n  className?: string;\n  children: React.ReactNode;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  labelledBy: string;\n}) => {\n  const modalRoot = useBodyRoot();\n\n  if (!modalRoot) {\n    return null;\n  }\n\n  const handleKeydown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      props.onCloseRequest();\n    }\n  };\n\n  return createPortal(\n    <div\n      className={clsx(\"Modal\", props.className)}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onKeyDown={handleKeydown}\n      aria-labelledby={props.labelledBy}\n    >\n      <div className=\"Modal__background\" onClick={props.onCloseRequest}></div>\n      <div\n        className=\"Modal__content\"\n        style={{ \"--max-width\": `${props.maxWidth}px` }}\n      >\n        {props.children}\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nconst useBodyRoot = () => {\n  const [div, setDiv] = useState<HTMLDivElement | null>(null);\n\n  useLayoutEffect(() => {\n    const isDarkTheme = !!document\n      .querySelector(\".excalidraw\")\n      ?.classList.contains(\"Appearance_dark\");\n    const div = document.createElement(\"div\");\n\n    div.classList.add(\"excalidraw\");\n\n    if (isDarkTheme) {\n      div.classList.add(\"Appearance_dark\");\n      div.classList.add(\"Appearance_dark-background-none\");\n    }\n    document.body.appendChild(div);\n\n    setDiv(div);\n\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, []);\n\n  return div;\n};\n"]},"metadata":{},"sourceType":"module"}