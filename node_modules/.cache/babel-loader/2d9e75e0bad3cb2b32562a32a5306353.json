{"ast":null,"code":"import { register } from \"./register\";\nimport { getSelectedElements } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport { deepCopyElement } from \"../element/newElement\";\nimport { Library } from \"../data/library\";\nexport const actionAddToLibrary = register({\n  name: \"addToLibrary\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(getNonDeletedElements(elements), appState);\n    Library.loadLibrary().then(items => {\n      Library.saveLibrary([...items, selectedElements.map(deepCopyElement)]);\n    });\n    return false;\n  },\n  contextMenuOrder: 6,\n  contextItemLabel: \"labels.addToLibrary\"\n});","map":{"version":3,"sources":["/var/www/html/excalidraw/src/actions/actionAddToLibrary.ts"],"names":["register","getSelectedElements","getNonDeletedElements","deepCopyElement","Library","actionAddToLibrary","name","perform","elements","appState","selectedElements","loadLibrary","then","items","saveLibrary","map","contextMenuOrder","contextItemLabel"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,SAASC,qBAAT,QAAsC,YAAtC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,MAAMC,kBAAkB,GAAGL,QAAQ,CAAC;AACzCM,EAAAA,IAAI,EAAE,cADmC;AAEzCC,EAAAA,OAAO,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/B,UAAMC,gBAAgB,GAAGT,mBAAmB,CAC1CC,qBAAqB,CAACM,QAAD,CADqB,EAE1CC,QAF0C,CAA5C;AAKAL,IAAAA,OAAO,CAACO,WAAR,GAAsBC,IAAtB,CAA4BC,KAAD,IAAW;AACpCT,MAAAA,OAAO,CAACU,WAAR,CAAoB,CAAC,GAAGD,KAAJ,EAAWH,gBAAgB,CAACK,GAAjB,CAAqBZ,eAArB,CAAX,CAApB;AACD,KAFD;AAGA,WAAO,KAAP;AACD,GAZwC;AAazCa,EAAAA,gBAAgB,EAAE,CAbuB;AAczCC,EAAAA,gBAAgB,EAAE;AAduB,CAAD,CAAnC","sourcesContent":["import { register } from \"./register\";\nimport { getSelectedElements } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport { deepCopyElement } from \"../element/newElement\";\nimport { Library } from \"../data/library\";\n\nexport const actionAddToLibrary = register({\n  name: \"addToLibrary\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n\n    Library.loadLibrary().then((items) => {\n      Library.saveLibrary([...items, selectedElements.map(deepCopyElement)]);\n    });\n    return false;\n  },\n  contextMenuOrder: 6,\n  contextItemLabel: \"labels.addToLibrary\",\n});\n"]},"metadata":{},"sourceType":"module"}