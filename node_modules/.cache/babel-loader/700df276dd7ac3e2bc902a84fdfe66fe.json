{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/excalidraw/src/components/Actions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { getNonDeletedElements } from \"../element\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { canChangeSharpness, canHaveArrowheads, getTargetElements, hasBackground, hasStroke, hasText } from \"../scene\";\nimport { SHAPES } from \"../shapes\";\nimport { capitalizeString, isTransparent, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nexport const SelectedShapeActions = ({\n  appState,\n  elements,\n  renderAction,\n  elementType\n}) => {\n  _s();\n\n  const targetElements = getTargetElements(getNonDeletedElements(elements), appState);\n  const isEditing = Boolean(appState.editingElement);\n  const isMobile = useIsMobile();\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n  const showFillIcons = hasBackground(elementType) || targetElements.some(element => hasBackground(element.type) && !isTransparent(element.backgroundColor));\n  const showChangeBackgroundIcons = hasBackground(elementType) || targetElements.some(element => hasBackground(element.type));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panelColumn\",\n    children: [renderAction(\"changeStrokeColor\"), showChangeBackgroundIcons && renderAction(\"changeBackgroundColor\"), showFillIcons && renderAction(\"changeFillStyle\"), (hasStroke(elementType) || targetElements.some(element => hasStroke(element.type))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderAction(\"changeStrokeWidth\"), renderAction(\"changeStrokeStyle\"), renderAction(\"changeSloppiness\")]\n    }, void 0, true), (canChangeSharpness(elementType) || targetElements.some(element => canChangeSharpness(element.type))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderAction(\"changeSharpness\")\n    }, void 0, false), (hasText(elementType) || targetElements.some(element => hasText(element.type))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderAction(\"changeFontSize\"), renderAction(\"changeFontFamily\"), renderAction(\"changeTextAlign\")]\n    }, void 0, true), (canHaveArrowheads(elementType) || targetElements.some(element => canHaveArrowheads(element.type))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderAction(\"changeArrowhead\")\n    }, void 0, false), renderAction(\"changeOpacity\"), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: t(\"labels.layers\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonList\",\n        children: [renderAction(\"sendToBack\"), renderAction(\"sendBackward\"), renderAction(\"bringToFront\"), renderAction(\"bringForward\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), targetElements.length > 1 && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: t(\"labels.align\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonList\",\n        children: [isRTL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [renderAction(\"alignRight\"), renderAction(\"alignHorizontallyCentered\"), renderAction(\"alignLeft\")]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [renderAction(\"alignLeft\"), renderAction(\"alignHorizontallyCentered\"), renderAction(\"alignRight\")]\n        }, void 0, true), targetElements.length > 2 && renderAction(\"distributeHorizontally\"), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"iconRow\",\n          children: [renderAction(\"alignTop\"), renderAction(\"alignVerticallyCentered\"), renderAction(\"alignBottom\"), targetElements.length > 2 && renderAction(\"distributeVertically\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), !isMobile && !isEditing && targetElements.length > 0 && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: t(\"labels.actions\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonList\",\n        children: [renderAction(\"duplicateSelection\"), renderAction(\"deleteSelectedElements\"), renderAction(\"group\"), renderAction(\"ungroup\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectedShapeActions, \"zdJ8C3X+YlDYVai5EPOd8CzoqSU=\", false, function () {\n  return [useIsMobile];\n});\n\n_c = SelectedShapeActions;\n\nconst LIBRARY_ICON =\n/*#__PURE__*/\n// fa-th-large\n_jsxDEV(\"svg\", {\n  viewBox: \"0 0 512 512\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M296 32h192c13.255 0 24 10.745 24 24v160c0 13.255-10.745 24-24 24H296c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24zm-80 0H24C10.745 32 0 42.745 0 56v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zM0 296v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm296 184h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H296c-13.255 0-24 10.745-24 24v160c0 13.255 10.745 24 24 24z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 148,\n  columnNumber: 3\n}, this);\n\nexport const ShapesSwitcher = ({\n  elementType,\n  setAppState,\n  isLibraryOpen\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [SHAPES.map(({\n    value,\n    icon,\n    key\n  }, index) => {\n    const label = t(`toolBar.${value}`);\n    const letter = typeof key === \"string\" ? key : key[0];\n    const shortcut = `${capitalizeString(letter)} ${t(\"shortcutsDialog.or\")} ${index + 1}`;\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      className: \"Shape\",\n      type: \"radio\",\n      icon: icon,\n      checked: elementType === value,\n      name: \"editor-current-shape\",\n      title: `${capitalizeString(label)} — ${shortcut}`,\n      keyBindingLabel: `${index + 1}`,\n      \"aria-label\": capitalizeString(label),\n      \"aria-keyshortcuts\": shortcut,\n      \"data-testid\": value,\n      onChange: () => {\n        setAppState({\n          elementType: value,\n          multiElement: null,\n          selectedElementIds: {}\n        });\n        setCursorForShape(value);\n        setAppState({});\n      }\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this);\n  }), /*#__PURE__*/_jsxDEV(ToolButton, {\n    className: \"Shape ToolIcon_type_button__library\",\n    type: \"button\",\n    icon: LIBRARY_ICON,\n    name: \"editor-library\",\n    keyBindingLabel: \"9\",\n    \"aria-keyshortcuts\": \"9\",\n    title: `${capitalizeString(t(\"toolBar.library\"))} — 9`,\n    \"aria-label\": capitalizeString(t(\"toolBar.library\")),\n    onClick: () => {\n      setAppState({\n        isLibraryOpen: !isLibraryOpen\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c2 = ShapesSwitcher;\nexport const ZoomActions = ({\n  renderAction,\n  zoom\n}) => /*#__PURE__*/_jsxDEV(Stack.Col, {\n  gap: 1,\n  children: /*#__PURE__*/_jsxDEV(Stack.Row, {\n    gap: 1,\n    align: \"center\",\n    children: [renderAction(\"zoomIn\"), renderAction(\"zoomOut\"), renderAction(\"resetZoom\"), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginInlineStart: 4\n      },\n      children: [(zoom.value * 100).toFixed(0), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 217,\n  columnNumber: 3\n}, this);\n_c3 = ZoomActions;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SelectedShapeActions\");\n$RefreshReg$(_c2, \"ShapesSwitcher\");\n$RefreshReg$(_c3, \"ZoomActions\");","map":{"version":3,"sources":["/var/www/html/excalidraw/src/components/Actions.tsx"],"names":["React","getNonDeletedElements","t","useIsMobile","canChangeSharpness","canHaveArrowheads","getTargetElements","hasBackground","hasStroke","hasText","SHAPES","capitalizeString","isTransparent","setCursorForShape","Stack","ToolButton","SelectedShapeActions","appState","elements","renderAction","elementType","targetElements","isEditing","Boolean","editingElement","isMobile","isRTL","document","documentElement","getAttribute","showFillIcons","some","element","type","backgroundColor","showChangeBackgroundIcons","length","LIBRARY_ICON","ShapesSwitcher","setAppState","isLibraryOpen","map","value","icon","key","index","label","letter","shortcut","multiElement","selectedElementIds","ZoomActions","zoom","marginInlineStart","toFixed"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport {\n  canChangeSharpness,\n  canHaveArrowheads,\n  getTargetElements,\n  hasBackground,\n  hasStroke,\n  hasText,\n} from \"../scene\";\nimport { SHAPES } from \"../shapes\";\nimport { AppState, Zoom } from \"../types\";\nimport { capitalizeString, isTransparent, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\n\nexport const SelectedShapeActions = ({\n  appState,\n  elements,\n  renderAction,\n  elementType,\n}: {\n  appState: AppState;\n  elements: readonly ExcalidrawElement[];\n  renderAction: ActionManager[\"renderAction\"];\n  elementType: ExcalidrawElement[\"type\"];\n}) => {\n  const targetElements = getTargetElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  const isEditing = Boolean(appState.editingElement);\n  const isMobile = useIsMobile();\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const showFillIcons =\n    hasBackground(elementType) ||\n    targetElements.some(\n      (element) =>\n        hasBackground(element.type) && !isTransparent(element.backgroundColor),\n    );\n  const showChangeBackgroundIcons =\n    hasBackground(elementType) ||\n    targetElements.some((element) => hasBackground(element.type));\n\n  return (\n    <div className=\"panelColumn\">\n      {renderAction(\"changeStrokeColor\")}\n      {showChangeBackgroundIcons && renderAction(\"changeBackgroundColor\")}\n      {showFillIcons && renderAction(\"changeFillStyle\")}\n\n      {(hasStroke(elementType) ||\n        targetElements.some((element) => hasStroke(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeWidth\")}\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(canChangeSharpness(elementType) ||\n        targetElements.some((element) => canChangeSharpness(element.type))) && (\n        <>{renderAction(\"changeSharpness\")}</>\n      )}\n\n      {(hasText(elementType) ||\n        targetElements.some((element) => hasText(element.type))) && (\n        <>\n          {renderAction(\"changeFontSize\")}\n\n          {renderAction(\"changeFontFamily\")}\n\n          {renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {(canHaveArrowheads(elementType) ||\n        targetElements.some((element) => canHaveArrowheads(element.type))) && (\n        <>{renderAction(\"changeArrowhead\")}</>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringToFront\")}\n          {renderAction(\"bringForward\")}\n        </div>\n      </fieldset>\n\n      {targetElements.length > 1 && (\n        <fieldset>\n          <legend>{t(\"labels.align\")}</legend>\n          <div className=\"buttonList\">\n            {\n              // swap this order for RTL so the button positions always match their action\n              // (i.e. the leftmost button aligns left)\n            }\n            {isRTL ? (\n              <>\n                {renderAction(\"alignRight\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignLeft\")}\n              </>\n            ) : (\n              <>\n                {renderAction(\"alignLeft\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignRight\")}\n              </>\n            )}\n            {targetElements.length > 2 &&\n              renderAction(\"distributeHorizontally\")}\n            <div className=\"iconRow\">\n              {renderAction(\"alignTop\")}\n              {renderAction(\"alignVerticallyCentered\")}\n              {renderAction(\"alignBottom\")}\n              {targetElements.length > 2 &&\n                renderAction(\"distributeVertically\")}\n            </div>\n          </div>\n        </fieldset>\n      )}\n      {!isMobile && !isEditing && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {renderAction(\"duplicateSelection\")}\n            {renderAction(\"deleteSelectedElements\")}\n            {renderAction(\"group\")}\n            {renderAction(\"ungroup\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nconst LIBRARY_ICON = (\n  // fa-th-large\n  <svg viewBox=\"0 0 512 512\">\n    <path d=\"M296 32h192c13.255 0 24 10.745 24 24v160c0 13.255-10.745 24-24 24H296c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24zm-80 0H24C10.745 32 0 42.745 0 56v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zM0 296v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm296 184h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H296c-13.255 0-24 10.745-24 24v160c0 13.255 10.745 24 24 24z\" />\n  </svg>\n);\n\nexport const ShapesSwitcher = ({\n  elementType,\n  setAppState,\n  isLibraryOpen,\n}: {\n  elementType: ExcalidrawElement[\"type\"];\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  isLibraryOpen: boolean;\n}) => (\n  <>\n    {SHAPES.map(({ value, icon, key }, index) => {\n      const label = t(`toolBar.${value}`);\n      const letter = typeof key === \"string\" ? key : key[0];\n      const shortcut = `${capitalizeString(letter)} ${t(\n        \"shortcutsDialog.or\",\n      )} ${index + 1}`;\n      return (\n        <ToolButton\n          className=\"Shape\"\n          key={value}\n          type=\"radio\"\n          icon={icon}\n          checked={elementType === value}\n          name=\"editor-current-shape\"\n          title={`${capitalizeString(label)} — ${shortcut}`}\n          keyBindingLabel={`${index + 1}`}\n          aria-label={capitalizeString(label)}\n          aria-keyshortcuts={shortcut}\n          data-testid={value}\n          onChange={() => {\n            setAppState({\n              elementType: value,\n              multiElement: null,\n              selectedElementIds: {},\n            });\n            setCursorForShape(value);\n            setAppState({});\n          }}\n        />\n      );\n    })}\n    <ToolButton\n      className=\"Shape ToolIcon_type_button__library\"\n      type=\"button\"\n      icon={LIBRARY_ICON}\n      name=\"editor-library\"\n      keyBindingLabel=\"9\"\n      aria-keyshortcuts=\"9\"\n      title={`${capitalizeString(t(\"toolBar.library\"))} — 9`}\n      aria-label={capitalizeString(t(\"toolBar.library\"))}\n      onClick={() => {\n        setAppState({ isLibraryOpen: !isLibraryOpen });\n      }}\n    />\n  </>\n);\n\nexport const ZoomActions = ({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: Zoom;\n}) => (\n  <Stack.Col gap={1}>\n    <Stack.Row gap={1} align=\"center\">\n      {renderAction(\"zoomIn\")}\n      {renderAction(\"zoomOut\")}\n      {renderAction(\"resetZoom\")}\n      <div style={{ marginInlineStart: 4 }}>\n        {(zoom.value * 100).toFixed(0)}%\n      </div>\n    </Stack.Row>\n  </Stack.Col>\n);\n"]},"metadata":{},"sourceType":"module"}