{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/excalidraw/src/actions/actionZindex.tsx\";\nimport React from \"react\";\nimport { moveOneLeft, moveOneRight, moveAllLeft, moveAllRight } from \"../zindex\";\nimport { KEYS, isDarwin, CODES } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport { SendBackwardIcon, BringToFrontIcon, SendToBackIcon, BringForwardIcon } from \"../components/icons\";\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneLeft(elements, appState),\n      appState,\n      commitToHistory: true\n    };\n  },\n  contextItemLabel: \"labels.sendBackward\",\n  keyPriority: 40,\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({\n    updateData,\n    appState\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"zIndexButton\",\n    onClick: () => updateData(null),\n    title: `${t(\"labels.sendBackward\")} — ${getShortcutKey(\"CtrlOrCmd+[\")}`,\n    children: /*#__PURE__*/_jsxDEV(SendBackwardIcon, {\n      appearance: appState.appearance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n});\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneRight(elements, appState),\n      appState,\n      commitToHistory: true\n    };\n  },\n  contextItemLabel: \"labels.bringForward\",\n  keyPriority: 40,\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({\n    updateData,\n    appState\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"zIndexButton\",\n    onClick: () => updateData(null),\n    title: `${t(\"labels.bringForward\")} — ${getShortcutKey(\"CtrlOrCmd+]\")}`,\n    children: /*#__PURE__*/_jsxDEV(BringForwardIcon, {\n      appearance: appState.appearance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this)\n});\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllLeft(elements, appState),\n      appState,\n      commitToHistory: true\n    };\n  },\n  contextItemLabel: \"labels.sendToBack\",\n  keyTest: event => isDarwin ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.BRACKET_LEFT : event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({\n    updateData,\n    appState\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"zIndexButton\",\n    onClick: () => updateData(null),\n    title: `${t(\"labels.sendToBack\")} — ${isDarwin ? getShortcutKey(\"CtrlOrCmd+Alt+[\") : getShortcutKey(\"CtrlOrCmd+Shift+[\")}`,\n    children: /*#__PURE__*/_jsxDEV(SendToBackIcon, {\n      appearance: appState.appearance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this)\n});\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllRight(elements, appState),\n      appState,\n      commitToHistory: true\n    };\n  },\n  contextItemLabel: \"labels.bringToFront\",\n  keyTest: event => isDarwin ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.BRACKET_RIGHT : event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({\n    updateData,\n    appState\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"zIndexButton\",\n    onClick: event => updateData(null),\n    title: `${t(\"labels.bringToFront\")} — ${isDarwin ? getShortcutKey(\"CtrlOrCmd+Alt+]\") : getShortcutKey(\"CtrlOrCmd+Shift+]\")}`,\n    children: /*#__PURE__*/_jsxDEV(BringToFrontIcon, {\n      appearance: appState.appearance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this)\n});","map":{"version":3,"sources":["/var/www/html/excalidraw/src/actions/actionZindex.tsx"],"names":["React","moveOneLeft","moveOneRight","moveAllLeft","moveAllRight","KEYS","isDarwin","CODES","t","getShortcutKey","register","SendBackwardIcon","BringToFrontIcon","SendToBackIcon","BringForwardIcon","actionSendBackward","name","perform","elements","appState","commitToHistory","contextItemLabel","keyPriority","keyTest","event","CTRL_OR_CMD","shiftKey","code","BRACKET_LEFT","PanelComponent","updateData","appearance","actionBringForward","BRACKET_RIGHT","actionSendToBack","altKey","actionBringToFront"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  moveOneLeft,\n  moveOneRight,\n  moveAllLeft,\n  moveAllRight,\n} from \"../zindex\";\nimport { KEYS, isDarwin, CODES } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport {\n  SendBackwardIcon,\n  BringToFrontIcon,\n  SendToBackIcon,\n  BringForwardIcon,\n} from \"../components/icons\";\n\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneLeft(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendBackward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendBackward\")} — ${getShortcutKey(\"CtrlOrCmd+[\")}`}\n    >\n      <SendBackwardIcon appearance={appState.appearance} />\n    </button>\n  ),\n});\n\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneRight(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringForward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.bringForward\")} — ${getShortcutKey(\"CtrlOrCmd+]\")}`}\n    >\n      <BringForwardIcon appearance={appState.appearance} />\n    </button>\n  ),\n});\n\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllLeft(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendToBack\",\n  keyTest: (event) =>\n    isDarwin\n      ? event[KEYS.CTRL_OR_CMD] &&\n        event.altKey &&\n        event.code === CODES.BRACKET_LEFT\n      : event[KEYS.CTRL_OR_CMD] &&\n        event.shiftKey &&\n        event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendToBack\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+[\")\n      }`}\n    >\n      <SendToBackIcon appearance={appState.appearance} />\n    </button>\n  ),\n});\n\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllRight(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringToFront\",\n  keyTest: (event) =>\n    isDarwin\n      ? event[KEYS.CTRL_OR_CMD] &&\n        event.altKey &&\n        event.code === CODES.BRACKET_RIGHT\n      : event[KEYS.CTRL_OR_CMD] &&\n        event.shiftKey &&\n        event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={(event) => updateData(null)}\n      title={`${t(\"labels.bringToFront\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+]\")\n      }`}\n    >\n      <BringToFrontIcon appearance={appState.appearance} />\n    </button>\n  ),\n});\n"]},"metadata":{},"sourceType":"module"}