{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/excalidraw/src/excalidraw-app/collab/RoomDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { copyTextToSystemClipboard } from \"../../clipboard\";\nimport { Dialog } from \"../../components/Dialog\";\nimport { clipboard, start, stop } from \"../../components/icons\";\nimport { ToolButton } from \"../../components/ToolButton\";\nimport { t } from \"../../i18n\";\nimport \"./RoomDialog.scss\";\n\nconst RoomDialog = ({\n  handleClose,\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n  setErrorMessage\n}) => {\n  _s();\n\n  const roomLinkInput = useRef(null);\n\n  const copyRoomLink = async () => {\n    try {\n      await copyTextToSystemClipboard(activeRoomLink);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  };\n\n  const selectInput = event => {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      event.target.select();\n    }\n  };\n\n  const renderRoomDialog = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RoomDialog-modal\",\n      children: [!activeRoomLink && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t(\"roomDialog.desc_intro\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `ðŸ”’ ${t(\"roomDialog.desc_privacy\")}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RoomDialog-sessionStartButtonContainer\",\n          children: /*#__PURE__*/_jsxDEV(ToolButton, {\n            className: \"RoomDialog-startSession\",\n            type: \"button\",\n            icon: start,\n            title: t(\"roomDialog.button_startSession\"),\n            \"aria-label\": t(\"roomDialog.button_startSession\"),\n            showAriaLabel: true,\n            onClick: onRoomCreate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeRoomLink && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t(\"roomDialog.desc_inProgressIntro\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t(\"roomDialog.desc_shareLink\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RoomDialog-linkContainer\",\n          children: [/*#__PURE__*/_jsxDEV(ToolButton, {\n            type: \"button\",\n            icon: clipboard,\n            title: t(\"labels.copy\"),\n            \"aria-label\": t(\"labels.copy\"),\n            onClick: copyRoomLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: activeRoomLink,\n            readOnly: true,\n            className: \"RoomDialog-link\",\n            ref: roomLinkInput,\n            onPointerDown: selectInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RoomDialog-usernameContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"RoomDialog-usernameLabel\",\n            htmlFor: \"username\",\n            children: t(\"labels.yourName\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            value: username || \"\",\n            className: \"RoomDialog-username TextInput\",\n            onChange: event => onUsernameChange(event.target.value),\n            onKeyPress: event => event.key === \"Enter\" && handleClose()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-hidden\": \"true\",\n            className: \"RoomDialog-emoji\",\n            children: \"ðŸ”’\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), \" \", t(\"roomDialog.desc_privacy\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t(\"roomDialog.desc_exitSession\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RoomDialog-sessionStartButtonContainer\",\n          children: /*#__PURE__*/_jsxDEV(ToolButton, {\n            className: \"RoomDialog-stopSession\",\n            type: \"button\",\n            icon: stop,\n            title: t(\"roomDialog.button_stopSession\"),\n            \"aria-label\": t(\"roomDialog.button_stopSession\"),\n            showAriaLabel: true,\n            onClick: onRoomDestroy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    small: true,\n    onCloseRequest: handleClose,\n    title: t(\"labels.createRoom\"),\n    children: renderRoomDialog()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoomDialog, \"y2bWixD5Qss3hqtXCSsQWzWvKQ4=\");\n\n_c = RoomDialog;\nexport default RoomDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomDialog\");","map":{"version":3,"sources":["/var/www/html/excalidraw/src/excalidraw-app/collab/RoomDialog.tsx"],"names":["React","useRef","copyTextToSystemClipboard","Dialog","clipboard","start","stop","ToolButton","t","RoomDialog","handleClose","activeRoomLink","username","onUsernameChange","onRoomCreate","onRoomDestroy","setErrorMessage","roomLinkInput","copyRoomLink","error","message","current","select","selectInput","event","target","document","activeElement","preventDefault","renderRoomDialog","value","key"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { copyTextToSystemClipboard } from \"../../clipboard\";\nimport { Dialog } from \"../../components/Dialog\";\nimport { clipboard, start, stop } from \"../../components/icons\";\nimport { ToolButton } from \"../../components/ToolButton\";\nimport { t } from \"../../i18n\";\nimport \"./RoomDialog.scss\";\n\nconst RoomDialog = ({\n  handleClose,\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n  setErrorMessage,\n}: {\n  handleClose: () => void;\n  activeRoomLink: string;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n  setErrorMessage: (message: string) => void;\n}) => {\n  const roomLinkInput = useRef<HTMLInputElement>(null);\n\n  const copyRoomLink = async () => {\n    try {\n      await copyTextToSystemClipboard(activeRoomLink);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  };\n\n  const selectInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).select();\n    }\n  };\n\n  const renderRoomDialog = () => {\n    return (\n      <div className=\"RoomDialog-modal\">\n        {!activeRoomLink && (\n          <>\n            <p>{t(\"roomDialog.desc_intro\")}</p>\n            <p>{`ðŸ”’ ${t(\"roomDialog.desc_privacy\")}`}</p>\n            <div className=\"RoomDialog-sessionStartButtonContainer\">\n              <ToolButton\n                className=\"RoomDialog-startSession\"\n                type=\"button\"\n                icon={start}\n                title={t(\"roomDialog.button_startSession\")}\n                aria-label={t(\"roomDialog.button_startSession\")}\n                showAriaLabel={true}\n                onClick={onRoomCreate}\n              />\n            </div>\n          </>\n        )}\n        {activeRoomLink && (\n          <>\n            <p>{t(\"roomDialog.desc_inProgressIntro\")}</p>\n            <p>{t(\"roomDialog.desc_shareLink\")}</p>\n            <div className=\"RoomDialog-linkContainer\">\n              <ToolButton\n                type=\"button\"\n                icon={clipboard}\n                title={t(\"labels.copy\")}\n                aria-label={t(\"labels.copy\")}\n                onClick={copyRoomLink}\n              />\n              <input\n                value={activeRoomLink}\n                readOnly={true}\n                className=\"RoomDialog-link\"\n                ref={roomLinkInput}\n                onPointerDown={selectInput}\n              />\n            </div>\n            <div className=\"RoomDialog-usernameContainer\">\n              <label className=\"RoomDialog-usernameLabel\" htmlFor=\"username\">\n                {t(\"labels.yourName\")}\n              </label>\n              <input\n                id=\"username\"\n                value={username || \"\"}\n                className=\"RoomDialog-username TextInput\"\n                onChange={(event) => onUsernameChange(event.target.value)}\n                onKeyPress={(event) => event.key === \"Enter\" && handleClose()}\n              />\n            </div>\n            <p>\n              <span role=\"img\" aria-hidden=\"true\" className=\"RoomDialog-emoji\">\n                {\"ðŸ”’\"}\n              </span>{\" \"}\n              {t(\"roomDialog.desc_privacy\")}\n            </p>\n            <p>{t(\"roomDialog.desc_exitSession\")}</p>\n            <div className=\"RoomDialog-sessionStartButtonContainer\">\n              <ToolButton\n                className=\"RoomDialog-stopSession\"\n                type=\"button\"\n                icon={stop}\n                title={t(\"roomDialog.button_stopSession\")}\n                aria-label={t(\"roomDialog.button_stopSession\")}\n                showAriaLabel={true}\n                onClick={onRoomDestroy}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    );\n  };\n  return (\n    <Dialog small onCloseRequest={handleClose} title={t(\"labels.createRoom\")}>\n      {renderRoomDialog()}\n    </Dialog>\n  );\n};\n\nexport default RoomDialog;\n"]},"metadata":{},"sourceType":"module"}