{"ast":null,"code":"import { clearAppStateForLocalStorage, getDefaultAppState } from \"../../appState\";\nimport { clearElementsForLocalStorage } from \"../../element\";\nimport { STORAGE_KEYS as APP_STORAGE_KEYS } from \"../../constants\";\nexport const STORAGE_KEYS = {\n  LOCAL_STORAGE_ELEMENTS: \"excalidraw\",\n  LOCAL_STORAGE_APP_STATE: \"excalidraw-state\",\n  LOCAL_STORAGE_COLLAB: \"excalidraw-collab\",\n  LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG: \"collabLinkForceLoadFlag\"\n};\nexport const saveUsernameToLocalStorage = username => {\n  try {\n    localStorage.setItem(STORAGE_KEYS.LOCAL_STORAGE_COLLAB, JSON.stringify({\n      username\n    }));\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\nexport const importUsernameFromLocalStorage = () => {\n  try {\n    const data = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_COLLAB);\n\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n};\nexport const saveToLocalStorage = (elements, appState) => {\n  try {\n    localStorage.setItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS, JSON.stringify(clearElementsForLocalStorage(elements)));\n    localStorage.setItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE, JSON.stringify(clearAppStateForLocalStorage(appState)));\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\nexport const importFromLocalStorage = () => {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS);\n    savedState = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements = [];\n\n  if (savedElements) {\n    try {\n      elements = clearElementsForLocalStorage(JSON.parse(savedElements));\n    } catch (error) {\n      console.error(error); // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n\n  if (savedState) {\n    try {\n      appState = { ...getDefaultAppState(),\n        ...clearAppStateForLocalStorage(JSON.parse(savedState))\n      };\n    } catch (error) {\n      console.error(error); // Do nothing because appState is already null\n    }\n  }\n\n  return {\n    elements,\n    appState\n  };\n};\nexport const getElementsStorageSize = () => {\n  try {\n    const elements = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS);\n    const elementsSize = elements ? JSON.stringify(elements).length : 0;\n    return elementsSize;\n  } catch (error) {\n    console.error(error);\n    return 0;\n  }\n};\nexport const getTotalStorageSize = () => {\n  try {\n    const appState = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE);\n    const collab = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_COLLAB);\n    const library = localStorage.getItem(APP_STORAGE_KEYS.LOCAL_STORAGE_LIBRARY);\n    const appStateSize = appState ? JSON.stringify(appState).length : 0;\n    const collabSize = collab ? JSON.stringify(collab).length : 0;\n    const librarySize = library ? JSON.stringify(library).length : 0;\n    return appStateSize + collabSize + librarySize + getElementsStorageSize();\n  } catch (error) {\n    console.error(error);\n    return 0;\n  }\n};","map":{"version":3,"sources":["/var/www/html/excalidraw/src/excalidraw-app/data/localStorage.ts"],"names":["clearAppStateForLocalStorage","getDefaultAppState","clearElementsForLocalStorage","STORAGE_KEYS","APP_STORAGE_KEYS","LOCAL_STORAGE_ELEMENTS","LOCAL_STORAGE_APP_STATE","LOCAL_STORAGE_COLLAB","LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG","saveUsernameToLocalStorage","username","localStorage","setItem","JSON","stringify","error","console","importUsernameFromLocalStorage","data","getItem","parse","saveToLocalStorage","elements","appState","importFromLocalStorage","savedElements","savedState","getElementsStorageSize","elementsSize","length","getTotalStorageSize","collab","library","LOCAL_STORAGE_LIBRARY","appStateSize","collabSize","librarySize"],"mappings":"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","sourcesContent":["import { ExcalidrawElement } from \"../../element/types\";\nimport { AppState } from \"../../types\";\nimport {\n  clearAppStateForLocalStorage,\n  getDefaultAppState,\n} from \"../../appState\";\nimport { clearElementsForLocalStorage } from \"../../element\";\nimport { STORAGE_KEYS as APP_STORAGE_KEYS } from \"../../constants\";\n\nexport const STORAGE_KEYS = {\n  LOCAL_STORAGE_ELEMENTS: \"excalidraw\",\n  LOCAL_STORAGE_APP_STATE: \"excalidraw-state\",\n  LOCAL_STORAGE_COLLAB: \"excalidraw-collab\",\n  LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG: \"collabLinkForceLoadFlag\",\n};\n\nexport const saveUsernameToLocalStorage = (username: string) => {\n  try {\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_COLLAB,\n      JSON.stringify({ username }),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const importUsernameFromLocalStorage = (): string | null => {\n  try {\n    const data = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_COLLAB);\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n};\n\nexport const saveToLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  try {\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS,\n      JSON.stringify(clearElementsForLocalStorage(elements)),\n    );\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_APP_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const importFromLocalStorage = () => {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS);\n    savedState = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements: ExcalidrawElement[] = [];\n  if (savedElements) {\n    try {\n      elements = clearElementsForLocalStorage(JSON.parse(savedElements));\n    } catch (error) {\n      console.error(error);\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = {\n        ...getDefaultAppState(),\n        ...clearAppStateForLocalStorage(\n          JSON.parse(savedState) as Partial<AppState>,\n        ),\n      };\n    } catch (error) {\n      console.error(error);\n      // Do nothing because appState is already null\n    }\n  }\n  return { elements, appState };\n};\n\nexport const getElementsStorageSize = () => {\n  try {\n    const elements = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS);\n    const elementsSize = elements ? JSON.stringify(elements).length : 0;\n    return elementsSize;\n  } catch (error) {\n    console.error(error);\n    return 0;\n  }\n};\n\nexport const getTotalStorageSize = () => {\n  try {\n    const appState = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE);\n    const collab = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_COLLAB);\n    const library = localStorage.getItem(\n      APP_STORAGE_KEYS.LOCAL_STORAGE_LIBRARY,\n    );\n\n    const appStateSize = appState ? JSON.stringify(appState).length : 0;\n    const collabSize = collab ? JSON.stringify(collab).length : 0;\n    const librarySize = library ? JSON.stringify(library).length : 0;\n\n    return appStateSize + collabSize + librarySize + getElementsStorageSize();\n  } catch (error) {\n    console.error(error);\n    return 0;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}