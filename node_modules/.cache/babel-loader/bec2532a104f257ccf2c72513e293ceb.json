{"ast":null,"code":"import { normalizeScroll } from \"./scene\";\nexport const getCenter = pointers => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: normalizeScroll(sum(allCoords, coords => coords.x) / allCoords.length),\n    y: normalizeScroll(sum(allCoords, coords => coords.y) / allCoords.length)\n  };\n};\nexport const getDistance = ([a, b]) => Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = (array, mapper) => array.reduce((acc, item) => acc + mapper(item), 0);","map":{"version":3,"sources":["/var/www/html/excalidraw/src/gesture.ts"],"names":["normalizeScroll","getCenter","pointers","allCoords","Array","from","values","x","sum","coords","length","y","getDistance","a","b","Math","hypot","array","mapper","reduce","acc","item"],"mappings":"AACA,SAASA,eAAT,QAAgC,SAAhC;AAEA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAA0C;AACjE,QAAMC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWH,QAAQ,CAACI,MAAT,EAAX,CAAlB;AACA,SAAO;AACLC,IAAAA,CAAC,EAAEP,eAAe,CAACQ,GAAG,CAACL,SAAD,EAAaM,MAAD,IAAYA,MAAM,CAACF,CAA/B,CAAH,GAAuCJ,SAAS,CAACO,MAAlD,CADb;AAELC,IAAAA,CAAC,EAAEX,eAAe,CAACQ,GAAG,CAACL,SAAD,EAAaM,MAAD,IAAYA,MAAM,CAACE,CAA/B,CAAH,GAAuCR,SAAS,CAACO,MAAlD;AAFb,GAAP;AAID,CANM;AAQP,OAAO,MAAME,WAAW,GAAG,CAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD,KACzBC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACN,CAAF,GAAMO,CAAC,CAACP,CAAnB,EAAsBM,CAAC,CAACF,CAAF,GAAMG,CAAC,CAACH,CAA9B,CADK;;AAGP,MAAMH,GAAG,GAAG,CAAIS,KAAJ,EAAyBC,MAAzB,KACVD,KAAK,CAACE,MAAN,CAAa,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGF,MAAM,CAACG,IAAD,CAAxC,EAAgD,CAAhD,CADF","sourcesContent":["import { PointerCoords } from \"./types\";\nimport { normalizeScroll } from \"./scene\";\n\nexport const getCenter = (pointers: Map<number, PointerCoords>) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: normalizeScroll(sum(allCoords, (coords) => coords.x) / allCoords.length),\n    y: normalizeScroll(sum(allCoords, (coords) => coords.y) / allCoords.length),\n  };\n};\n\nexport const getDistance = ([a, b]: readonly PointerCoords[]) =>\n  Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = <T>(array: readonly T[], mapper: (item: T) => number): number =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n"]},"metadata":{},"sourceType":"module"}