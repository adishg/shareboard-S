{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/excalidraw/src/components/ColorPicker.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Popover } from \"./Popover\";\nimport \"./ColorPicker.scss\";\nimport { isArrowKey, KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\n\nconst isValidColor = color => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nconst getColor = color => {\n  if (color === \"transparent\") {\n    return color;\n  }\n\n  return isValidColor(color) ? color : isValidColor(`#${color}`) ? `#${color}` : null;\n}; // This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\n\n\nconst keyBindings = [[\"1\", \"2\", \"3\", \"4\", \"5\"], [\"q\", \"w\", \"e\", \"r\", \"t\"], [\"a\", \"s\", \"d\", \"f\", \"g\"]].flat();\n\nconst Picker = ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n  type\n}) => {\n  _s();\n\n  const firstItem = React.useRef();\n  const activeItem = React.useRef();\n  const gallery = React.useRef();\n  const colorInput = React.useRef();\n  React.useEffect(() => {\n    // After the component is first mounted focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    } else if (gallery.current) {\n      gallery.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = event => {\n    if (event.key === KEYS.TAB) {\n      const {\n        activeElement\n      } = document;\n\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          var _colorInput$current;\n\n          (_colorInput$current = colorInput.current) === null || _colorInput$current === void 0 ? void 0 : _colorInput$current.focus();\n          event.preventDefault();\n        }\n      } else if (activeElement === colorInput.current) {\n        var _firstItem$current;\n\n        (_firstItem$current = firstItem.current) === null || _firstItem$current === void 0 ? void 0 : _firstItem$current.focus();\n        event.preventDefault();\n      }\n    } else if (isArrowKey(event.key)) {\n      const {\n        activeElement\n      } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(gallery.current.children, activeElement);\n\n      if (index !== -1) {\n        const length = gallery.current.children.length - (showInput ? 1 : 0);\n        const nextIndex = event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT) ? (index + 1) % length : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT) ? (length + index - 1) % length : event.key === KEYS.ARROW_DOWN ? (index + 5) % length : event.key === KEYS.ARROW_UP ? (length + index - 5) % length : index;\n        gallery.current.children[nextIndex].focus();\n      }\n\n      event.preventDefault();\n    } else if (keyBindings.includes(event.key.toLowerCase()) && !isWritableElement(event.target)) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      gallery.current.children[index].focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `color-picker color-picker-type-${type}`,\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": t(\"labels.colorPicker\"),\n    onKeyDown: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker-triangle color-picker-triangle-shadow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker-triangle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker-content\",\n      ref: el => {\n        if (el) {\n          gallery.current = el;\n        }\n      },\n      tabIndex: 0,\n      children: [colors.map((_color, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"color-picker-swatch\",\n        onClick: event => {\n          event.currentTarget.focus();\n          onChange(_color);\n        },\n        title: `${_color} â€” ${keyBindings[i].toUpperCase()}`,\n        \"aria-label\": _color,\n        \"aria-keyshortcuts\": keyBindings[i],\n        style: {\n          color: _color\n        },\n        ref: el => {\n          if (el && i === 0) {\n            firstItem.current = el;\n          }\n\n          if (el && _color === color) {\n            activeItem.current = el;\n          }\n        },\n        onFocus: () => {\n          onChange(_color);\n        },\n        children: [_color === \"transparent\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-picker-transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this) : undefined, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-picker-keybinding\",\n          children: keyBindings[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, _color, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)), showInput && /*#__PURE__*/_jsxDEV(ColorInput, {\n        color: color,\n        label: label,\n        onChange: color => {\n          onChange(color);\n        },\n        ref: colorInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Picker, \"fVaSV/okfs06eknB8EYfO74kAAE=\");\n\n_c = Picker;\nconst ColorInput = /*#__PURE__*/React.forwardRef(_c2 = _s2(({\n  color,\n  onChange,\n  label\n}, ref) => {\n  _s2();\n\n  const [innerValue, setInnerValue] = React.useState(color);\n  const inputRef = React.useRef(null);\n  React.useEffect(() => {\n    setInnerValue(color);\n  }, [color]);\n  React.useImperativeHandle(ref, () => inputRef.current);\n  const changeColor = React.useCallback(inputValue => {\n    const value = inputValue.toLowerCase();\n    const color = getColor(value);\n\n    if (color) {\n      onChange(color);\n    }\n\n    setInnerValue(value);\n  }, [onChange]);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"color-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker-hash\",\n      children: \"#\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      spellCheck: false,\n      className: \"color-picker-input\",\n      \"aria-label\": label,\n      onChange: event => changeColor(event.target.value),\n      value: (innerValue || \"\").replace(/^#/, \"\"),\n      onBlur: () => setInnerValue(color),\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 7\n  }, this);\n}, \"Xnw7s+v4fix2jI5yyjJPVJBQu5U=\", false, function () {\n  return [React.useImperativeHandle];\n}));\n_c3 = ColorInput;\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label\n}) => {\n  _s3();\n\n  const [isActive, setActive] = React.useState(false);\n  const pickerButton = React.useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker-control-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"color-picker-label-swatch\",\n        \"aria-label\": label,\n        style: color ? {\n          \"--swatch-color\": color\n        } : undefined,\n        onClick: () => setActive(!isActive),\n        ref: pickerButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorInput, {\n        color: color,\n        label: label,\n        onChange: color => {\n          onChange(color);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(React.Suspense, {\n      fallback: \"\",\n      children: isActive ? /*#__PURE__*/_jsxDEV(Popover, {\n        onCloseRequest: event => event.target !== pickerButton.current && setActive(false),\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          colors: colors[type],\n          color: color || null,\n          onChange: changedColor => {\n            onChange(changedColor);\n          },\n          onClose: () => {\n            var _pickerButton$current;\n\n            setActive(false);\n            (_pickerButton$current = pickerButton.current) === null || _pickerButton$current === void 0 ? void 0 : _pickerButton$current.focus();\n          },\n          label: label,\n          showInput: false,\n          type: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ColorPicker, \"zqTAgXBGsBmMDYYTL9rJ0qKgamk=\");\n\n_c4 = ColorPicker;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Picker\");\n$RefreshReg$(_c2, \"ColorInput$React.forwardRef\");\n$RefreshReg$(_c3, \"ColorInput\");\n$RefreshReg$(_c4, \"ColorPicker\");","map":{"version":3,"sources":["/var/www/html/excalidraw/src/components/ColorPicker.tsx"],"names":["React","Popover","isArrowKey","KEYS","t","getLanguage","isWritableElement","colors","isValidColor","color","style","Option","getColor","keyBindings","flat","Picker","onChange","onClose","label","showInput","type","firstItem","useRef","activeItem","gallery","colorInput","useEffect","current","focus","handleKeyDown","event","key","TAB","activeElement","document","shiftKey","preventDefault","isRTL","rtl","index","Array","prototype","indexOf","call","children","length","nextIndex","ARROW_LEFT","ARROW_RIGHT","ARROW_DOWN","ARROW_UP","includes","toLowerCase","target","ESCAPE","ENTER","nativeEvent","stopImmediatePropagation","el","map","_color","i","currentTarget","toUpperCase","undefined","ColorInput","forwardRef","ref","innerValue","setInnerValue","useState","inputRef","useImperativeHandle","changeColor","useCallback","inputValue","value","replace","ColorPicker","isActive","setActive","pickerButton","changedColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./ColorPicker.scss\";\nimport { isArrowKey, KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\n\nconst isValidColor = (color: string) => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nconst getColor = (color: string): string | null => {\n  if (color === \"transparent\") {\n    return color;\n  }\n\n  return isValidColor(color)\n    ? color\n    : isValidColor(`#${color}`)\n    ? `#${color}`\n    : null;\n};\n\n// This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\nconst keyBindings = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n].flat();\n\nconst Picker = ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n  type,\n}: {\n  colors: string[];\n  color: string | null;\n  onChange: (color: string) => void;\n  onClose: () => void;\n  label: string;\n  showInput: boolean;\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n}) => {\n  const firstItem = React.useRef<HTMLButtonElement>();\n  const activeItem = React.useRef<HTMLButtonElement>();\n  const gallery = React.useRef<HTMLDivElement>();\n  const colorInput = React.useRef<HTMLInputElement>();\n\n  React.useEffect(() => {\n    // After the component is first mounted focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    } else if (gallery.current) {\n      gallery.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.TAB) {\n      const { activeElement } = document;\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          colorInput.current?.focus();\n          event.preventDefault();\n        }\n      } else if (activeElement === colorInput.current) {\n        firstItem.current?.focus();\n        event.preventDefault();\n      }\n    } else if (isArrowKey(event.key)) {\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        gallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = gallery!.current!.children.length - (showInput ? 1 : 0);\n        const nextIndex =\n          event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT)\n            ? (index + 1) % length\n            : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT)\n            ? (length + index - 1) % length\n            : event.key === KEYS.ARROW_DOWN\n            ? (index + 5) % length\n            : event.key === KEYS.ARROW_UP\n            ? (length + index - 5) % length\n            : index;\n        (gallery!.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (\n      keyBindings.includes(event.key.toLowerCase()) &&\n      !isWritableElement(event.target)\n    ) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      (gallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return (\n    <div\n      className={`color-picker color-picker-type-${type}`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={t(\"labels.colorPicker\")}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"color-picker-triangle color-picker-triangle-shadow\"></div>\n      <div className=\"color-picker-triangle\"></div>\n      <div\n        className=\"color-picker-content\"\n        ref={(el) => {\n          if (el) {\n            gallery.current = el;\n          }\n        }}\n        tabIndex={0}\n      >\n        {colors.map((_color, i) => (\n          <button\n            className=\"color-picker-swatch\"\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(_color);\n            }}\n            title={`${_color} â€” ${keyBindings[i].toUpperCase()}`}\n            aria-label={_color}\n            aria-keyshortcuts={keyBindings[i]}\n            style={{ color: _color }}\n            key={_color}\n            ref={(el) => {\n              if (el && i === 0) {\n                firstItem.current = el;\n              }\n              if (el && _color === color) {\n                activeItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(_color);\n            }}\n          >\n            {_color === \"transparent\" ? (\n              <div className=\"color-picker-transparent\"></div>\n            ) : undefined}\n            <span className=\"color-picker-keybinding\">{keyBindings[i]}</span>\n          </button>\n        ))}\n        {showInput && (\n          <ColorInput\n            color={color}\n            label={label}\n            onChange={(color) => {\n              onChange(color);\n            }}\n            ref={colorInput}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ColorInput = React.forwardRef(\n  (\n    {\n      color,\n      onChange,\n      label,\n    }: {\n      color: string | null;\n      onChange: (color: string) => void;\n      label: string;\n    },\n    ref,\n  ) => {\n    const [innerValue, setInnerValue] = React.useState(color);\n    const inputRef = React.useRef(null);\n\n    React.useEffect(() => {\n      setInnerValue(color);\n    }, [color]);\n\n    React.useImperativeHandle(ref, () => inputRef.current);\n\n    const changeColor = React.useCallback(\n      (inputValue: string) => {\n        const value = inputValue.toLowerCase();\n        const color = getColor(value);\n        if (color) {\n          onChange(color);\n        }\n        setInnerValue(value);\n      },\n      [onChange],\n    );\n\n    return (\n      <label className=\"color-input-container\">\n        <div className=\"color-picker-hash\">#</div>\n        <input\n          spellCheck={false}\n          className=\"color-picker-input\"\n          aria-label={label}\n          onChange={(event) => changeColor(event.target.value)}\n          value={(innerValue || \"\").replace(/^#/, \"\")}\n          onBlur={() => setInnerValue(color)}\n          ref={inputRef}\n        />\n      </label>\n    );\n  },\n);\n\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label,\n}: {\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  color: string | null;\n  onChange: (color: string) => void;\n  label: string;\n}) => {\n  const [isActive, setActive] = React.useState(false);\n  const pickerButton = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <div>\n      <div className=\"color-picker-control-container\">\n        <button\n          className=\"color-picker-label-swatch\"\n          aria-label={label}\n          style={color ? { \"--swatch-color\": color } : undefined}\n          onClick={() => setActive(!isActive)}\n          ref={pickerButton}\n        />\n        <ColorInput\n          color={color}\n          label={label}\n          onChange={(color) => {\n            onChange(color);\n          }}\n        />\n      </div>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <Popover\n            onCloseRequest={(event) =>\n              event.target !== pickerButton.current && setActive(false)\n            }\n          >\n            <Picker\n              colors={colors[type]}\n              color={color || null}\n              onChange={(changedColor) => {\n                onChange(changedColor);\n              }}\n              onClose={() => {\n                setActive(false);\n                pickerButton.current?.focus();\n              }}\n              label={label}\n              showInput={false}\n              type={type}\n            />\n          </Popover>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}