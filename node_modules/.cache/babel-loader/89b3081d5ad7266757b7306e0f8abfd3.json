{"ast":null,"code":"/* crc32.js (C) 2014-2015 SheetJS -- http://sheetjs.com */\n\n/* vim: set ts=2: */\nvar CRC32;\n\n(function (factory) {\n  if (typeof DO_NOT_EXPORT_CRC === 'undefined') {\n    if ('object' === typeof exports) {\n      factory(exports);\n    } else if ('function' === typeof define && define.amd) {\n      define(function () {\n        var module = {};\n        factory(module);\n        return module;\n      });\n    } else {\n      factory(CRC32 = {});\n    }\n  } else {\n    factory(CRC32 = {});\n  }\n})(function (CRC32) {\n  CRC32.version = '0.3.0';\n  /* see perf/crc32table.js */\n\n  function signed_crc_table() {\n    var c = 0,\n        table = new Array(256);\n\n    for (var n = 0; n != 256; ++n) {\n      c = n;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      table[n] = c;\n    }\n\n    return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n  }\n\n  var table = signed_crc_table();\n  /* charCodeAt is the best approach for binary strings */\n\n  var use_buffer = typeof Buffer !== 'undefined';\n\n  function crc32_bstr(bstr) {\n    if (bstr.length > 32768) if (use_buffer) return crc32_buf_8(new Buffer(bstr));\n    var crc = -1,\n        L = bstr.length - 1;\n\n    for (var i = 0; i < L;) {\n      crc = table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ crc >>> 8;\n      crc = table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ crc >>> 8;\n    }\n\n    if (i === L) crc = crc >>> 8 ^ table[(crc ^ bstr.charCodeAt(i)) & 0xFF];\n    return crc ^ -1;\n  }\n\n  function crc32_buf(buf) {\n    if (buf.length > 10000) return crc32_buf_8(buf);\n\n    for (var crc = -1, i = 0, L = buf.length - 3; i < L;) {\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n    }\n\n    while (i < L + 3) crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n\n    return crc ^ -1;\n  }\n\n  function crc32_buf_8(buf) {\n    for (var crc = -1, i = 0, L = buf.length - 7; i < L;) {\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n    }\n\n    while (i < L + 7) crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n\n    return crc ^ -1;\n  }\n  /* much much faster to intertwine utf8 and crc */\n\n\n  function crc32_str(str) {\n    for (var crc = -1, i = 0, L = str.length, c, d; i < L;) {\n      c = str.charCodeAt(i++);\n\n      if (c < 0x80) {\n        crc = crc >>> 8 ^ table[(crc ^ c) & 0xFF];\n      } else if (c < 0x800) {\n        crc = crc >>> 8 ^ table[(crc ^ (192 | c >> 6 & 31)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | c & 63)) & 0xFF];\n      } else if (c >= 0xD800 && c < 0xE000) {\n        c = (c & 1023) + 64;\n        d = str.charCodeAt(i++) & 1023;\n        crc = crc >>> 8 ^ table[(crc ^ (240 | c >> 8 & 7)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | c >> 2 & 63)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | d >> 6 & 15 | c & 3)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | d & 63)) & 0xFF];\n      } else {\n        crc = crc >>> 8 ^ table[(crc ^ (224 | c >> 12 & 15)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | c >> 6 & 63)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | c & 63)) & 0xFF];\n      }\n    }\n\n    return crc ^ -1;\n  }\n\n  CRC32.table = table;\n  CRC32.bstr = crc32_bstr;\n  CRC32.buf = crc32_buf;\n  CRC32.str = crc32_str;\n});","map":{"version":3,"sources":["/var/www/html/excalidraw/node_modules/crc-32/crc32.js"],"names":["CRC32","factory","DO_NOT_EXPORT_CRC","exports","define","amd","module","version","signed_crc_table","c","table","Array","n","Int32Array","use_buffer","Buffer","crc32_bstr","bstr","length","crc32_buf_8","crc","L","i","charCodeAt","crc32_buf","buf","crc32_str","str","d"],"mappings":"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","sourcesContent":["/* crc32.js (C) 2014-2015 SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\nvar CRC32;\n(function (factory) {\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t  factory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n}(function(CRC32) {\nCRC32.version = '0.3.0';\n/* see perf/crc32table.js */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar table = signed_crc_table();\n/* charCodeAt is the best approach for binary strings */\nvar use_buffer = typeof Buffer !== 'undefined';\nfunction crc32_bstr(bstr) {\n\tif(bstr.length > 32768) if(use_buffer) return crc32_buf_8(new Buffer(bstr));\n\tvar crc = -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t}\n\tif(i === L) crc = (crc >>> 8) ^ table[(crc ^ bstr.charCodeAt(i)) & 0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf(buf) {\n\tif(buf.length > 10000) return crc32_buf_8(buf);\n\tfor(var crc = -1, i = 0, L=buf.length-3; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf_8(buf) {\n\tfor(var crc = -1, i = 0, L=buf.length-7; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\n/* much much faster to intertwine utf8 and crc */\nfunction crc32_str(str) {\n\tfor(var crc = -1, i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ c) & 0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (192|((c>>6)&31))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++) & 1023;\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (240|((c>>8)&7))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>2)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((d>>6)&15)|(c&3))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(d&63))) & 0xFF];\n\t\t} else {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (224|((c>>12)&15))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>6)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t}\n\t}\n\treturn crc ^ -1;\n}\nCRC32.table = table;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\n}));\n"]},"metadata":{},"sourceType":"script"}