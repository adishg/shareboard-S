{"ast":null,"code":"export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\nexport const CODES = {\n  EQUAL: \"Equal\",\n  MINUS: \"Minus\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ZERO: \"Numpad0\",\n  BRACKET_RIGHT: \"BracketRight\",\n  BRACKET_LEFT: \"BracketLeft\",\n  ONE: \"Digit1\",\n  TWO: \"Digit2\",\n  NINE: \"Digit9\",\n  QUOTE: \"Quote\",\n  ZERO: \"Digit0\",\n  C: \"KeyC\",\n  G: \"KeyG\",\n  F: \"KeyF\",\n  H: \"KeyH\",\n  V: \"KeyV\",\n  Z: \"KeyZ\"\n};\nexport const KEYS = {\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_UP: \"ArrowUp\",\n  BACKSPACE: \"Backspace\",\n  ALT: \"Alt\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  DELETE: \"Delete\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  QUESTION_MARK: \"?\",\n  SPACE: \" \",\n  TAB: \"Tab\",\n  A: \"a\",\n  D: \"d\",\n  E: \"e\",\n  L: \"l\",\n  O: \"o\",\n  P: \"p\",\n  Q: \"q\",\n  R: \"r\",\n  S: \"s\",\n  T: \"t\",\n  V: \"v\",\n  X: \"x\",\n  Z: \"z\"\n};\nexport const isArrowKey = key => key === KEYS.ARROW_LEFT || key === KEYS.ARROW_RIGHT || key === KEYS.ARROW_DOWN || key === KEYS.ARROW_UP;\nexport const getResizeCenterPointKey = event => event.altKey;\nexport const getResizeWithSidesSameLengthKey = event => event.shiftKey;\nexport const getRotateWithDiscreteAngleKey = event => event.shiftKey;","map":{"version":3,"sources":["/var/www/html/excalidraw/src/keys.ts"],"names":["isDarwin","test","window","navigator","platform","CODES","EQUAL","MINUS","NUM_ADD","NUM_SUBTRACT","NUM_ZERO","BRACKET_RIGHT","BRACKET_LEFT","ONE","TWO","NINE","QUOTE","ZERO","C","G","F","H","V","Z","KEYS","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","BACKSPACE","ALT","CTRL_OR_CMD","DELETE","ENTER","ESCAPE","QUESTION_MARK","SPACE","TAB","A","D","E","L","O","P","Q","R","S","T","X","isArrowKey","key","getResizeCenterPointKey","event","altKey","getResizeWithSidesSameLengthKey","shiftKey","getRotateWithDiscreteAngleKey"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAuBC,IAAvB,CAA4BC,MAAM,CAACC,SAAP,CAAiBC,QAA7C,CAAjB;AAEP,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,KAAK,EAAE,OAFY;AAGnBC,EAAAA,OAAO,EAAE,WAHU;AAInBC,EAAAA,YAAY,EAAE,gBAJK;AAKnBC,EAAAA,QAAQ,EAAE,SALS;AAMnBC,EAAAA,aAAa,EAAE,cANI;AAOnBC,EAAAA,YAAY,EAAE,aAPK;AAQnBC,EAAAA,GAAG,EAAE,QARc;AASnBC,EAAAA,GAAG,EAAE,QATc;AAUnBC,EAAAA,IAAI,EAAE,QAVa;AAWnBC,EAAAA,KAAK,EAAE,OAXY;AAYnBC,EAAAA,IAAI,EAAE,QAZa;AAanBC,EAAAA,CAAC,EAAE,MAbgB;AAcnBC,EAAAA,CAAC,EAAE,MAdgB;AAenBC,EAAAA,CAAC,EAAE,MAfgB;AAgBnBC,EAAAA,CAAC,EAAE,MAhBgB;AAiBnBC,EAAAA,CAAC,EAAE,MAjBgB;AAkBnBC,EAAAA,CAAC,EAAE;AAlBgB,CAAd;AAqBP,OAAO,MAAMC,IAAI,GAAG;AAClBC,EAAAA,UAAU,EAAE,WADM;AAElBC,EAAAA,UAAU,EAAE,WAFM;AAGlBC,EAAAA,WAAW,EAAE,YAHK;AAIlBC,EAAAA,QAAQ,EAAE,SAJQ;AAKlBC,EAAAA,SAAS,EAAE,WALO;AAMlBC,EAAAA,GAAG,EAAE,KANa;AAOlBC,EAAAA,WAAW,EAAE/B,QAAQ,GAAG,SAAH,GAAe,SAPlB;AAQlBgC,EAAAA,MAAM,EAAE,QARU;AASlBC,EAAAA,KAAK,EAAE,OATW;AAUlBC,EAAAA,MAAM,EAAE,QAVU;AAWlBC,EAAAA,aAAa,EAAE,GAXG;AAYlBC,EAAAA,KAAK,EAAE,GAZW;AAalBC,EAAAA,GAAG,EAAE,KAba;AAelBC,EAAAA,CAAC,EAAE,GAfe;AAgBlBC,EAAAA,CAAC,EAAE,GAhBe;AAiBlBC,EAAAA,CAAC,EAAE,GAjBe;AAkBlBC,EAAAA,CAAC,EAAE,GAlBe;AAmBlBC,EAAAA,CAAC,EAAE,GAnBe;AAoBlBC,EAAAA,CAAC,EAAE,GApBe;AAqBlBC,EAAAA,CAAC,EAAE,GArBe;AAsBlBC,EAAAA,CAAC,EAAE,GAtBe;AAuBlBC,EAAAA,CAAC,EAAE,GAvBe;AAwBlBC,EAAAA,CAAC,EAAE,GAxBe;AAyBlBzB,EAAAA,CAAC,EAAE,GAzBe;AA0BlB0B,EAAAA,CAAC,EAAE,GA1Be;AA2BlBzB,EAAAA,CAAC,EAAE;AA3Be,CAAb;AAgCP,OAAO,MAAM0B,UAAU,GAAIC,GAAD,IACxBA,GAAG,KAAK1B,IAAI,CAACE,UAAb,IACAwB,GAAG,KAAK1B,IAAI,CAACG,WADb,IAEAuB,GAAG,KAAK1B,IAAI,CAACC,UAFb,IAGAyB,GAAG,KAAK1B,IAAI,CAACI,QAJR;AAMP,OAAO,MAAMuB,uBAAuB,GAAIC,KAAD,IACrCA,KAAK,CAACC,MADD;AAGP,OAAO,MAAMC,+BAA+B,GAC1CF,KAD6C,IAE1CA,KAAK,CAACG,QAFJ;AAIP,OAAO,MAAMC,6BAA6B,GACxCJ,KAD2C,IAExCA,KAAK,CAACG,QAFJ","sourcesContent":["export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nexport const CODES = {\n  EQUAL: \"Equal\",\n  MINUS: \"Minus\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ZERO: \"Numpad0\",\n  BRACKET_RIGHT: \"BracketRight\",\n  BRACKET_LEFT: \"BracketLeft\",\n  ONE: \"Digit1\",\n  TWO: \"Digit2\",\n  NINE: \"Digit9\",\n  QUOTE: \"Quote\",\n  ZERO: \"Digit0\",\n  C: \"KeyC\",\n  G: \"KeyG\",\n  F: \"KeyF\",\n  H: \"KeyH\",\n  V: \"KeyV\",\n  Z: \"KeyZ\",\n} as const;\n\nexport const KEYS = {\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_UP: \"ArrowUp\",\n  BACKSPACE: \"Backspace\",\n  ALT: \"Alt\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  DELETE: \"Delete\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  QUESTION_MARK: \"?\",\n  SPACE: \" \",\n  TAB: \"Tab\",\n\n  A: \"a\",\n  D: \"d\",\n  E: \"e\",\n  L: \"l\",\n  O: \"o\",\n  P: \"p\",\n  Q: \"q\",\n  R: \"r\",\n  S: \"s\",\n  T: \"t\",\n  V: \"v\",\n  X: \"x\",\n  Z: \"z\",\n} as const;\n\nexport type Key = keyof typeof KEYS;\n\nexport const isArrowKey = (key: string) =>\n  key === KEYS.ARROW_LEFT ||\n  key === KEYS.ARROW_RIGHT ||\n  key === KEYS.ARROW_DOWN ||\n  key === KEYS.ARROW_UP;\n\nexport const getResizeCenterPointKey = (event: MouseEvent | KeyboardEvent) =>\n  event.altKey;\n\nexport const getResizeWithSidesSameLengthKey = (\n  event: MouseEvent | KeyboardEvent,\n) => event.shiftKey;\n\nexport const getRotateWithDiscreteAngleKey = (\n  event: MouseEvent | KeyboardEvent,\n) => event.shiftKey;\n"]},"metadata":{},"sourceType":"module"}